"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.englishConstants = void 0;
const logger_1 = require("../infrastructure/logger");
class LocalizedConstants {
    constructor() {
        this.extensionOwner = "Oracle";
        this.messageYes = "Yes";
        this.messageNo = "No";
        this.messageOk = "Ok";
        this.messageCancel = "Cancel";
        this.messageGoToDownloadPage = "Go to Download Page";
        this.messageDontShowDialogAgain = "Don't show this again";
        this.msgIsRequired = " is required ";
        this.lblCredInfo = "Password";
        this.questionCredInfoPlaceholder = "Password (Oracle)";
        this.msgSaveCredInfo = "Do you want to save the password?";
        this.labelNewConnection = "New Connection";
        this.msgConnProfileCreatedAndConnected = "Oracle connection '{0}' created and connected successfully.";
        this.msgConnProfileUpdated = "Oracle connection '{0}' updated successfully.";
        this.msgConnProfileUpdateError = "Failed to update connection '{0}'.";
        this.msgConnProfileCreated = "Oracle connection '{0}' created successfully.";
        this.msgConnProfileCreationError = "Failed to create connection '{0}'.";
        this.msgSaveConnCredForWorkspaceOrWorkspaceFolderInfo = "To save password / proxy password for a workspace or workspace folder connection change the setting \"Oracledevtools ??? Connection Configuration: Password Store\" to \"VS Code secret storage\" and retry.";
        this.labelSelectConnectionFromList = "Select an Oracle Connection from the list";
        this.msgNoProfileAvaialble = "No saved Oracle connection(s) are available.";
        this.msgSelectProfileToRemove = "Select a connection to be removed.";
        this.msgSelectProfileToUpdate = "Select a connection to be updated.";
        this.msgConfirmProfileRemoval = "Are you sure you want to delete database connection '{0}'?";
        this.plsqlLanguageDescription = "Use Oracle-SQL and PLSQL features in this document";
        this.msgProfileRemovedSuccess = "Connection '{0}' deleted successfully";
        this.noneOwner = "None";
        this.useNoneLanguage = "Do not use Oracle-SQL and PLSQL features in this document";
        this.selectLanguage = "Select language features for this document";
        this.cnfCancelConnection = "Do you want to cancel the in progress connection?";
        this.cnfChangeLanguageMode = "Do you want to change language mode to Oracle-SQL and PLSQL? Please confirm.";
        this.disconnectConnectionMessage = "Disconnect/Close current connection";
        this.cnfDisconnectConnection = "Do you want to disconnect? Please confirm.";
        this.cnfClearRecentConnectionList = "Do you want to clear recent connection list? Please confirm.";
        this.lblCreateProfile = "Create Oracle Profile";
        this.lblClearRecentOraProfiles = "Clear Recent Oracle Connections List";
        this.msgClearedRecentList = "Recent Oracle Connection list was cleared.";
        this.msgFileAssociationMissing = "To use this command a document should be open & associated with Oracle Extension.";
        this.msgConnectionError = "Error opening connection '{0}'. ";
        this.msgErrorDetails = "Details: {0}";
        this.errorInConnection = "Connection Error";
        this.errorConnectingTo = "Error while connecting to: ";
        this.connectErrorCode = "Error number: ";
        this.connectErrorMessage = "Error message: ";
        this.connecting = "Connecting";
        this.connectingTo = "Connecting to: ";
        this.disConnected = "Disconnected";
        this.disConnectedToolTip = "Not connected to database, Click to connect.";
        this.disConnectedMessage = "Disconnected from database for document {0}";
        this.msgAlreadyConnecting = "Connecting to {0}. Wait for operation to complete.";
        this.errorEncountered = "Error encountered: ";
        this.executingMessage = "Executing...";
        this.executionFinishedMessage = "Executed";
        this.scriptIsAlreadyExecutingOrCancelRunningExecution = "Script is already executing.Wait for execution to finish or cancel the running script execution.";
        this.couldNotCancelScriptExecution = "Could not cancel script execution!";
        this.cancellingScriptExecution = "Cancelling script execution...";
        this.canceledScriptExecution = "Canceled script execution.";
        this.updatingIntellisenseMessage = "Updating Intellisense Data...";
        this.updatingIntellisenseObjectMessage = "Updating Intellisense for {0}...";
        this.msgServerReady = "Language Server ready ({0} {1})!";
        this.msgActivatingExtension = "Activating Extension...";
        this.msgOracleDevToolsActivated = "Oracle Developer Tools for VS Code activated!";
        this.msgConnWithNoConnStringOrDataSourc = "Connection does not have connection string or data source";
        this.msgTnsAdminUpdateFailed = "Changes to network configuration are applicable only after you restart Visual Studio Code";
        this.unableToOpenResultUI = "Unable to open results window.";
        this.strTnsAdmin = "Tns Admin";
        this.saveToDatabaseNotApplicable = "Save to database available only for editors opened from explorer.";
        this.saveToDatabaseHeaderMsg = "------ Saving changes from {0} to database and compiling ------";
        this.saveToDatabaseAlertMsg = "Saving changes from {0} to database and compiling\r\n{1}";
        this.doneFooterMsg = "---------------------- Done ----------------------";
        this.compileObjectHeaderMsg = "Compiling {0}.{1}";
        this.compileDebugObjectHeaderMsg = "Compiling (Debug) {0}.{1}";
        this.compileFailedMessage = "Compilation failed: ";
        this.modifiedInDatabaseMsg = "The {0} \"{1}\" in the database has changed. Do you want to overwrite it?";
        this.deletedInDatabaseMsg = "The {0} \"{1}\" no longer exists in the database. Do you want to recreate it?";
        this.invalidObjectMessage = "Object is invalid or doesn't exist in database";
        this.runCommandNotApplicable = "Run for PL/SQL objects is available only for editors opened from explorer.";
        this.msgdotnetRuntimeNotFound = ".NET Core Runtime version 3.1 or later not found";
        this.askForSavingCodeObject = "Do you want to save changes for {0} to database?";
        this.msgDialogTextMissingDotnetRuntime = "Oracle Developer Tools for VS Code requires .NET Core Runtime. Please click on Go to Download Page to download and install the .NET Core Runtime. You should exit and restart VS Code after installing .NET Core Runtime.";
        this.messageContinue = "Continue";
        this.notSavedToDBWarning = "Do you want to refresh the editor for {0} \"{1}\" with unsaved changes?";
        this.errorOnSavingFile = "Error on saving file.";
        this.connectionUITitle = "Oracle Connection";
        this.loginScriptResultsUITitle = "Results: Login Script";
        this.downloadCredentialsTitle = "Download Credentials";
        this.ociCompartmentTitle = "Change Compartment or Region";
        this.ociChangePswdTitle = "Change Administrator Password";
        this.ociEditMutuakAuthentication = "Edit Mutual TLS (mTLS) Authentication";
        this.ociConnectionStringsTitle = "Get Connection Strings";
        this.ociUpdateNetworkAccessTitle = "Update Network Access";
        this.adbCreateADB = "Create Autonomous Database";
        this.profileNameCannotBeEmptyForGetProfileNameRequest = "Connection name cannot be empty for get connection info request";
        this.profileWithProfileNameDoesNotExist = "Connection information doesn't exist.";
        this.couldNotconnectToServer = "Could not connect to language server.";
        this.selectFolder = "Select Folder...";
        this.packageMethodNotFound = "Method '{0}' does not exist in the file.";
        this.table = "TABLE";
        this.view = "VIEW";
        this.procedure = "PROCEDURE";
        this.function = "FUNCTION";
        this.package = "PACKAGE";
        this.packageMethod = "PACKAGE METHOD";
        this.synonym = "SYNONYM";
        this.method = "METHOD";
        this.column = "COLUMN";
        this.schemaUppr = "SCHEMA";
        this.schemas = "Schema(s)";
        this.tables = "Table/View(s)";
        this.table_view = "Table/View";
        this.schema = "Schema";
        this.name = "Name";
        this.packageName = "Package Name";
        this.sequenceName = "Sequence Name";
        this.sequenceValue = "SEQUENCE VALUE";
        this.sequence = "SEQUENCE";
        this.profileNameNotUnique = "Connection name already exists. Please provide a unique value for the connection name.";
        this.publicSynonym = "PUBLIC SYNONYM";
        this.type = "Type";
        this.dataType = "Data Type";
        this.direction = "Direction";
        this.languageName = "Oracle-SQL and PLSQL";
        this.selectFile = "Select File...";
        this.enterBookmarkFolder = "Enter Folder Name";
        this.selectBookmarkFolder = "Select Folder Name";
        this.enterBookmarkQueryName = "Enter Query Name";
        this.newFolder = "New Folder";
        this.bookmarkSavedMsg = "Saved to Bookmarks";
        this.bookmarkDuplicateQuery = "Bookmark name already exists in the folder";
        this.bookmarkDuplicatebookMark = "'{0}' failed. Bookmark name '{1}' already exists in the folder '{2}'";
        this.moveUp = "Move Up";
        this.moveDown = "Move Down";
        this.add = "Add";
        this.bookmarkEmptyQuery = "Empty query";
        this.bookmarkInvalidQuery = "Invalid query";
        this.bookmarkDuplicateGroup = "Folder with the new name already exists";
        this.bookmarkRename = "Enter the new name";
        this.bookmarkClone = "Enter connection name";
        this.bookmark = "Bookmark";
        this.folder = "Folder";
        this.dashCopy = "-Copy";
        this.history = "History";
        this.runQueryNoConnection = "Please create a connection to run the query";
        this.bookmarksChanged = "Bookmarks have been changed outside this Visual Studio Code session. Do you want to overwrite?";
        this.invalidBookmark = "Invalid folder/query name";
        this.invalidBookmarkQueryName = "Invalid query name";
        this.invalidBookmarkFolderName = "Invalid folder name";
        this.clearAllBookmarkConfirmation = "Are you sure you want to clear the bookmarks?";
        this.deleteBookmarkItemConfirmation = "Are you sure you want to delete '{0}'?";
        this.deleteBookmarkFolderConfirmation = "Are you sure you want to delete '{0}'?";
        this.clearAllHistoryConfirmation = "Are you sure you want to clear the history?";
        this.deleteHistoryItemConfirmation = "Are you sure you want to delete the history item?";
        this.deleteHistoryFolderConfirmation = "Are you sure you want to delete the history folder?";
        this.lblProxyCredInfo = "Proxy Password";
        this.questionProxyCredInfoPlaceholder = "Proxy Password (Oracle)";
        this.invalidConnectionname = "Invalid Connection name";
        this.unableToGetSchemaInfo = "Unable to get Schema Information. {0}";
        this.closeDocsOnUpdateWarning = "Editors using connection '{0}' must be reopened after the update. Do you want to continue?";
        this.renamingConnection = "Renaming Oracle Connection '{0}' to '{1}'";
        this.cloningConnection = "Cloning Oracle Connection '{0}' to '{1}'";
        this.creatingConnection = "Creating Oracle Connection '{0}'";
        this.updatingConnection = "Updating Oracle Connection '{0}'";
        this.updatingAndRenamingConnection = "Updating Oracle Connection '{0}' and renaming to '{1}";
        this.connectionRenamed = "Oracle Connection '{0}' renamed to '{1}' successfully.";
        this.connectionUpdatedAndRenamed = "Oracle Connection '{0}' updated and renamed to '{1}' successfully.";
        this.connectionCloned = "Oracle Connection '{0}' cloned to  '{1}' successfully.";
        this.connectingConnection = "Connecting Oracle Connection '{0}'";
        this.disconnectingConnection = "Disconnecting Oracle Connection '{0}'";
        this.disconnectedConnection = "Disconnected Oracle Connection '{0}'";
        this.connectionNameNotValid = "Connection name is not valid.";
        this.connectionDoesnotExist = "Connection does not exist. Please close and open 'Update Connection' page.";
        this.msgConnProfileCredStoreMigrated = "Connection's password store migrated from '{0}' to '{1}' successfully.";
        this.variable = "SQLPlus System Variable";
        this.command = "SQLPlus Command";
        this.value = "SQLPlus Value";
        this.keyword = "Keyword";
        this.nothingToCancel = "Nothing to cancel";
        this.nothingToClear = "Can't clear the Results window while the script execution is in progress";
        this.atpWorkLoadTypeNode = "Autonomous Transaction Processing Databases";
        this.adwWorkLoadTypeNode = "Autonomous Data Warehouses";
        this.adbJSONWorkLoadTypeNode = "Autonomous JSON Databases";
        this.stopOCIDatabaseConfirmation = "Are you sure you want to stop the '{0}' database?";
        this.deleteOCIDatabaseConfirmation = "Are you sure you want to delete the '{0}' database?";
        this.startOCIDatabaseConfirmation = "Are you sure you want to start the '{0}' database?";
        this.startADBInstanceFailed = "Start operation for database instance '{0}' failed. OCI error: {1}";
        this.pollADBInstanceFailed = "Error in getting database status for database instance '{0}'. OCI error: {1}";
        this.stopADBInstanceFailed = "Stop operation for database instance '{0}' failed. OCI error: {1}";
        this.terminateADBInstanceFailed = "Terminate operation for database instance '{0}' failed. OCI error: {1}";
        this.startingADBInstance = "Starting autonomous database instance '{0}'";
        this.stoppingADBInstance = "Stopping autonomous database instance '{0}'";
        this.terminatingADBInstance = "Terminating autonomous database instance '{0}'";
        this.downloadWalletFileFailed = "Download wallet file for database instance '{0}' failed. OCI error: {1}";
        this.updatingOCITreeforCompartment = "Changing compartment to '{0}' for profile '{1}'";
        this.updatingOCITreeforRegion = "Changing region to '{0}'for profile '{1}'";
        this.updatingOCITreeforCompartmentAndRegion = "Changing compartment to '{0}' and region to '{1}' for profile '{2}'";
        this.errorLauchingCloudSignUpURL = "Error launching Configure Oracle Cloud Connection URL. Error : {0}";
        this.errorLaunchingXEDatabaseInstallationURL = "Error launching Install Oracle Database URL. Error : {0}";
        this.ATPWorkloadNode = "ATP";
        this.ADWWorkloadNode = "ADW";
        this.AJDWorkloadNode = "AJD";
        this.errorGettingADBInstancesForWorkloadNode = "Error in getting autonomous databases for '{0}' workload in compartment: '{1}' and tenancy: '{2}'.OCI error: {3}";
        this.errorGettingADBInstancesForRootNode = "Error in getting autonomous databases for '{0}' workload in root compartment: '{1}' . OCI error: {2}";
        this.errorRefreshingworkLoadNode = "Error in refreshing '{0}' workload for profile: '{1}'. OCI error: {2}";
        this.errorRefreshingADBNode = "Error in refreshing database node '{0}'. OCI error: {1}";
        this.errorReadingDefaultConfigFile = "Error in reading configuration file. OCI error: {0}";
        this.aDBInstancePollOperationCompleted = "Autonomous database instance '{0}': {1} successfully.";
        this.aDBInstancePswsdChangedSuccessfully = "Autonomous database instance '{0}': Administrator password changed successfully.";
        this.aDBInstancePswsdChangedError = "Change Administrator Password for database instance '{0}' failed. OCI error: {1}";
        this.aDBInstancePswsdChanging = "Changing Administrator Password for database instance '{0}'";
        this.ociAccountNotFound = "No OCI account profile found";
        this.downloadingCredentialFile = "Downloading credential files";
        this.downloadCompleteForCredentialFile = "Downloaded credential files successfully to '{0}'";
        this.downloadErrorForCredentialFile = "Download of credential files to '{0}' failed. OCI error: {1}";
        this.noServiceConsoleURL = "Service console URL not available for autonomous database '{0}'";
        this.unableToGetProfileDetails = "Unable to get details for profile '{0}'. OCI error: {1}";
        this.errorInGettingCompartmentForTenancy = "Error in getting compartments for profile '{0}'. OCI error: {1}";
        this.autonomousCreatingDB = "Database creation has started for '{0}', to check the progress look in the OUTPUT window under Oracle Developer Tools";
        this.autonomousCreateDBFailed = "Error in creating autonomous database '{0}'. OCI error: {1}";
        this.autonomousCreateDBScucceeded = "Autonomous database created '{0}' successfully.";
        this.getAutonomousDBContainerDatabasesFailed = "Error in gettings autonomous container databases '{0}'. OCI error: {1}";
        this.errorFetchingRegions = "Error in fetching regions. Error : {0}";
        this.selectRegion = "Select region";
        this.database = "Database";
        this.updateRegionSucceeded = "Changed region to '{0}' for profile '{1}' successfully";
        this.updateCompartmentSucceeded = "Changed compartment to '{0}' for profile '{1}' successfully";
        this.updateCompartmentAndRegionSucceeded = "Changed compartment to '{0}' and region to '{1}' for profile '{2}' successfully";
        this.updateRegionFailed = "Changing region to '{0}' for profile '{1}' failed";
        this.updateCompartmentFailed = "Changing compartment to '{0}' for profile '{1}' failed";
        this.updateCompartmentAndRegionFailed = "Changing compartment to '{0}' and region to '{1}' for profile '{2}' failed";
        this.unableToOpenCompartmentUI = "Unable to open Change Compartment or Region page for profile '{0}'.\n OCI error: {1}";
        this.atpWorkloadNode = "Autonomous Transaction Processing";
        this.datawareHouseWorkloadNode = "Autonomous Data Warehouse";
        this.jsonWorkloadNode = "Autonomous JSON Database";
        this.bringyourOwnLicense = "Bring Your Own License(BYOL)";
        this.licenseIncluded = "License Included";
        this.sharedInfrastructure = "Shared Infrastructure";
        this.dedicatedInfrastructure = "Dedicated Infrastructure";
        this.profile = "Profile";
        this.compartment = "Compartment";
        this.workloadType = "Workload Type";
        this.databaseName = "Database Name";
        this.displayName = "Display Name";
        this.alwaysFree = "Always Free";
        this.deploymentType = "Deployment Type";
        this.databaseVersion = "Database Version";
        this.OCPUCount = "OCPU Count";
        this.storage = "Storage(TB)";
        this.autoScaling = "OCPU Auto Scaling";
        this.autoScalingForStorage = "Storage Auto Scaling";
        this.licenseType = "License Type";
        this.root = "root";
        this.region = "Region";
        this.cannotCreateNewObjectsFromExplorerFiles = "Can not create other database schema objects using editors opened from Oracle Explorer";
        this.fileSaveCancelled = "File save cancelled";
        this.notConnectedToDatabase = "Not connected to database";
        this.fileNotConnectedToDatabase = "'{0}' is not connected to database";
        this.download = "Download";
        this.saveUnsavedChanges = "'{0}' has unsaved changes. Do you want to save it?";
        this.copyToClipboardFailed = "Copy to clipboard failed";
        this.compilerSettingsUITitle = "PL/SQL Debugger and Compiler Settings";
        this.compilerSettingsSavedMsg = "PL/SQL Compiler Settings saved successfully";
        this.compilerSettingSaveFailedMsg = "Failed to save PL/SQL Compiler settings: ";
        this.formatterSettingsSavedMsg = "Formatter Settings saved successfully";
        this.formatterSettingSaveFailedMsg = "Failed to save Formatter settings: ";
        this.explainPlanSettingsSavedMsg = "Explain plan (grid) settings saved successfully";
        this.dbmsExplainPlanSettingsSavedMsg = "Explain plan (text) settings saved successfully";
        this.explainPlanSettingsSaveFailedMsg = "Failed to save Explain plan (grid) settings. ";
        this.dbmsExplainPlanSettingsSaveFailedMsg = "Failed to save Explain plan (text) settings. ";
        this.executionPlanSettingsSavedMsg = "Execution plan (grid) settings saved successfully";
        this.dbmsExecutionPlanSettingsSavedMsg = "Execution plan (text) settings saved successfully";
        this.executionPlanSettingsSaveFailedMsg = "Failed to save Execution plan (grid) settings. ";
        this.dbmsExecutionPlanSettingsSaveFailedMsg = "Failed to save Execution plan (text) settings. ";
        this.enterCreds = "Enter Passphrase for profile '{0}'";
        this.msgFailedCloudConnMissingCreds = "Cannot connect to Oracle Cloud. Passphrase is required.";
        this.msgOverwriteCanceledbyUser = "User canceled overwriting changes in the database for {0} \"{1}\". Click any button shown in this notification to perform a followup action or dismiss the notification.";
        this.adbCreationNotStartedProfileNotFound = "Autonomous database creation  for profile '{0}' not started. Profile '{0}' not  found";
        this.changeCompartmentNotStartedProfileNotFound = "Change compartment for profile '{0}' not started. Profile '{0} not  found";
        this.changeRegionNotStartedProfileNotFound = "Change region for profile '{0}' not started. Profile '{0}' not  found.";
        this.changeCompartmentNRegionNotStartedProfileNotFound = "Change compartment and region for profile '{0}' not started. Profile '{0}' not  found.";
        this.changeAdminPswdNotStartedProfileNotFound = "Change administrator password for profile '{0}' not started. Profile '{0}' not  found";
        this.noRegionSpecified = "[No region specified]";
        this.compileDebug = "Do you want to compile '{0}.{1}' with debug information?";
        this.odtDebugSession = "Oracle Developer Tools for VS Code Debug session";
        this.columns = "Columns";
        this.tableAlias = "(TABLE ALIAS)";
        this.viewAlias = "(VIEW ALIAS)";
        this.subqueryAlias = "(SUBQUERY ALIAS)";
        this.columnAlias = "(COLUMN ALIAS)";
        this.columnAliasUppr = "COLUMN ALIAS";
        this.alias = "Alias";
        this.tableName = "Table Name";
        this.columnName = "Column Name";
        this.tableExpression = "Table Expression";
        this.columnExpression = "Column Expression";
        this.allColumns = "ALL COLUMNS";
        this.allColumnValues = "ALL VALUES";
        this.allColumnValue = "NULL";
        this.debuggerSettingsSavedMsg = "PL/SQL Debugger Settings saved successfully";
        this.debuggerSettingSaveFailedMsg = "Failed to save PL/SQL Debugger settings: ";
        this.fileFromLastSessionReadError = "Contents of this file {0} cannot be restored as this file is from a previous session of Visual Studio Code.\nTo work on {1} {2} please close this file and reopen it from Oracle Explorer database connection {3}";
        this.fileFromLastSessionWriteError = "{0} is from a previous session of Visual Studio Code and cannot be saved to database";
        this.ipAddressVerifyError = "Could not start PL/SQL Debugger. {0} is not a valid IP Address. Please specify a valid Hostname or IP Address using PL/SQL Compiler and Debugger Settings.";
        this.hostnameVerifyError = "Could not start PL/SQL Debugger. {0} is not a valid Hostname. Please specify a valid Hostname or IP Address using PL/SQL Compiler and Debugger Settings.";
        this.startDebuggerHostError = "Could not start PL/SQL Debugger. Please specify a valid Hostname or IP Address using PL/SQL Compiler and Debugger Settings.";
        this.selectIPAddress = "Please select an IP Address to continue External Application Debugging.";
        this.methodStr = "Method";
        this.parameter = "(PARAMETER)";
        this.tableAliasForDetail = "TABLE ALIAS";
        this.columnAliasForDetail = "COLUMN ALIAS";
        this.viewAliasForDetail = "VIEW ALIAS";
        this.viewName = "View Name";
        this.subqueryAliasForDetail = "SUBQUERY ALIAS";
        this.objectNotFound = "Object not found";
        this.locationNotFound = "Location not found";
        this.notExplorerFile = "Codelens is not supported on explorer file";
        this.aDBUpdatingNewtworkAccessType = "Updating Network Access type for database instance '{0}'";
        this.aDBUpdatingMTLSAuthentication = "Updating walletless connectivity (TLS) for database instance '{0}'";
        this.aDBUpdatingMTLSAuthenticationChangedError = "Update walletless connectivity (TLS) authentication for database instance '{0}' failed. OCI error: {1}";
        this.aDBNewtworkAccessTypeUpdatedSuccessfully = "Autonomous database instance '{0}': Network Access Type changed successfully.";
        this.aDBInstancNewtworkAccessTypeChangedError = "Update Network Access type for database instance '{0}' failed. OCI error: {1}";
        this.aDBNewtworkAccessTypeUpdateRequestPlaced = "Autonomous database instance '{0}': Network Access Type change request placed successfully.";
        this.unKnownError = "unKnown Error";
        this.formatterSettingsUITitle = "SQL and PL/SQL Formatter Settings";
        this.explainPlanSettingsUITitle = "Explain Plan and Execution Plan Settings";
        this.launchedConnectionHelpPage = "Launched ODTVSCode connection help page";
        this.failedToLaunchConnectionHelpPage = "Failed to launch ODTVSCode connection help page. Error: ";
        this.outwindowConnectionPageDialogue = "Opening ODTVSCode connection help page URL {0}";
        this.outwindowOCCDialogue = "Opening Oracle Cloud Connection URL {0}";
        this.downloadingDotnetRuntime = "Downloading .NET Runtime...";
        this.downloadAndInstallCompleteForDotnetRuntime = "Downloaded and Installed .NET Runtime at '{0}'.";
        this.downloadAndInstallFailedForDotnetRuntime = "Failed to download and install .NET Runtime.";
        this.getConnectionStringErrorMessage = "Failed to get connection strings.\n Retry the operation after starting the autonomous database";
        this.export = "Export";
        this.exportFormatterSettings = "Export Formatter Settings";
        this.import = "Import";
        this.importFormatterSettings = "Import Formatter Settings";
        this.exportFormatSettingsSuccessMsg = "Exported Formatter Settings";
        this.exportFormatSettingsFailedMsg = "Failed to export Formatter Settings: ";
        this.importFormatSuccessful = "Successfully imported Formatter Settings";
        this.importFormatSettingsFailedMsg = "Failed to import Formatter Settings.";
        this.importFormatSettingsFailedPropertyMsg = "Failed to import Formatter Settings. '{0}' not found in file.";
        this.adbConfigureWalletlessConnectivityandNetworkAccess = "Configure Walletless Connectivity and Network Access";
        this.adbConfigureDatabaseAccessControl = "Configure Network Access Control";
        this.adbPublicIPAddressError = "Failed to fetch public ip address";
        this.unableToOpenCreateConnectionUI = "Unable to open create connection page for database instance '{0}'.\n OCI error: {1}";
        this.unableToVCNListForCompartment = "Unable to get VCN list for compartment '{0}'.\n OCI error: {1}";
        this.unableToGetNetworkAccessDataForADB = "Unable to get network access data for database instance '{0}'.\n OCI error: {1}";
        this.unableToGeAuthenticatonValueForADB = "Unable to get authentication value for database instance '{0}'.\n OCI error: {1}";
        this.adbDatabaseUnavailableError = "To configure network access, the database needs to be available";
        this.loginScriptExecutionCancelled = "Execution cancelled for Login Script";
        this.loginScriptExecutionFinished = "End executing login script";
        this.loginScriptExecutionSucceeded = "Successfully executed login script";
        this.scriptNotFound = "Could not find file '{0}'";
        this.executingScript = "Executing";
        this.endExecutingScript = "End executing";
        this.savedToFile = "Successfully saved to file:{0}";
        this.errorInSavingToFile = "Error in saving.Error:{0}";
        this.defaultConnectionUpdated = "Default connection updated in '{0}' settings successfully.";
        this.connectionName = "Connection name";
        this.currentSchema = "Current schema";
        this.settingsScope = "Settings scope";
        this.user = "User";
        this.Workspace = "Workspace";
        this.adbProfileError = "'{0}' profile cannot be read or no longer exists in Oracle Cloud Infrastructure configuration file at '{1}'";
        this.resultsWindowPrefix = "Results";
        this.explainPlanWindowPrefix = "Explain Plan";
        this.executionPlanWindowPrefix = "Execution Plan";
        this.settingsFile = "Settings file";
        this.folderPath = "Folder path";
        this.filterSettingsUITitle = "Filters";
        this.filterSettingsSavedMsg = "Filters saved successfully.";
        this.filterSettingsFailSavedMsg = "Failed to save Filters. ";
        this.filterSettingsConnChangePrompt = "There are unsaved changes in Filters of '{0}'. Do you want to continue?";
        this.filterSettingsNewAppliedMsg = "New Filters applied.";
        this.filterSettingsConnDeleted = "Connection '{0}' was not found. Please close and open the Filters page before updating Filters for the connection.";
        this.filterSettingsConnRenamed = "Connection '{0}' was renamed to '{1}'. Please close and open the Filters page before updating Filters for the connection.";
        this.filterSettingsConnRenamedNoRefresh = "Connection '{0}' was renamed to '{1}'.";
        this.filterSettingsFailGetMsg = "Failed to get Filters.";
        this.filterSettingsFailGetConnMsg = "Failed to get Filters for connection '{0}'.";
        this.filterSettingsFailGetConnNotFoundMsg = "Failed to get Filters for connection '{0}'. Connection not found.";
        this.filterSettingsGetMsg = "Filters for connection '{0}' loaded successfully.";
        this.saveQueryNoLocalAccess = "Saving to local files using File Save Dialog > Show Local button is not supported in Visual Studio Code Remote Development environment. Use the dropdown in the File Save Dialog to save results to a file in the remote environment.";
        this.confirmChangeScopePrompt = "Unsaved changes in the page will be discarded. Do you want to continue?";
        this.rebuildIntelliSenseOnFilterUpdate = "Do you want to rebuild IntelliSense for connection '{0}'?";
        this.errorLaunchingGetHelpURL = "Error launching Report an issue/Get Help URL. Error : {0}";
        this.openingGetHelpURL = "Opening Report an issue/Get Help URL {0}";
        this.errorLaunchingGetEditorHelpURL = "Error launching Get Editor Help URL. Error : {0}";
        this.openingGetEditorHelpURL = "Opening Get Editor Help URL {0}";
        this.rtsmMasterUITitle = "Real Time SQL Monitoring";
        this.rtsmDetailUITitle = "SQL Monitor Active Report for";
        this.rtsmDetailedReportUITitle = "SQL Monitor Active Report for";
        this.rtsmSqlExecutionLicenseTitle = "Real Time SQL Monitoring License";
        this.rtsmSqlExecutionLicenseMessage = "This feature requires Oracle Database Tuning Pack license.";
        this.rtsmSqlExecutionLicenseDontShowMessage = "Don't show this again";
        this.rtsmSaveWarningMessage = "Please select a Real Time Sql Monitoring Task in the master table and try to save again the selected task";
        this.rtsmUITitleDeleted = "DELETED";
        this.runSql = "RUNSQL";
        this.showSql = "SHOWSQL";
        this.narrate = "NARRATE";
        this.chat = "CHAT";
        this.ai = "AI";
        this.testConnectionSucceeded = "Test connection succeeded.";
        this.testConnectionFailed = "Test connection '{0}' failed. ";
        this.configureAIProviderTitle = "Configure Select AI Provider Network Access";
        this.manageAIProfilesTitle = "Configure Select AI Profile";
        this.createCredentialSuccessMsg = "Successfully created credential '{0}' for connection '{1}'";
        this.createCredentialFailMsg = "Failed to create credential '{0}' for connection '{1}'. {2}";
        this.llmAccessConfigSuccessMsg = "Successfully configured Select AI Provider Network Access for user '{0}' for connection '{1}'";
        this.llmAccessConfigFailedMsg = "Failed to configure Select AI Provider Network Access for user '{0}' for connection '{1}'. {2}";
        this.createProfileSuccessMsg = "Successfully created AI Profile '{0}' for connection '{1}'";
        this.createProfileFailedMsg = "Failed to create AI Profile '{0}' for connection '{1}'. {2}";
        this.getCredentialsFailedMsg = "Failed to get credentials. {0}";
        this.getTablesViewsFailedMsg = "Failed to get tables and views. {0}";
        this.unableToGetAIProfilesMsg = "Unable to get AI Profiles. {0}";
        this.unableToSetAIProfileMsg = "Unable to set default AI Profile for connection.";
        this.unableToGetConnectedUserMsg = "Unable to get current user. Save will be disabled. {0}";
        this.translatingMessage = "Translating...";
        this.translatedMessage = "Translated";
        this.explainingMessage = "Explaining...";
        this.explainedMessage = "Explained";
        this.storageInGB = "Storage (GB)";
        this.ecpuCount = "ECPU Count";
        this.selectAIProfileConnectionDeleted = "Connection '{0}' was not found. Please close and open the Configure Select AI Profile page before configuring Select AI Profiles for this connection.";
        this.selectAIProfileConnectionRenamed = "Connection '{0}' was renamed to '{1}'. Please close and open the Configure Select AI Profile page before configuring Select AI Profiles for this connection.";
        this.selectAIProviderConnectionDeleted = "Connection '{0}' was not found. Please close and open the Configure Select AI Provider Network Access page before configuring Select AI Provider Network Access for this connection.";
        this.selectAIProviderConnectionRenamed = "Connection '{0}' was renamed to '{1}'. Please close and open the Configure Select AI Provider Network Access page before configuring Select AI Provider Network Access for this connection.";
        this.notConnectedMissingCreds = "Unable to open connection, missing password.";
        this.rerunQueryError = "Error on re-executing the query";
        this.sortAndFilterError = "Error on sorting/filtering data";
        this.errorFetchingOverflowData = "Error on fetching more data";
        this.releaseNotes = "Release Notes";
        this.confirmCredsMigrationToSecretStore = "Do you want to migrate connection passwords from settings to VS Code Secret Storage?";
        this.confirmCredsMigrationToSettings = "Do you want to migrate passwords for connection '{0}' from VS Code Secret Storage to settings?";
        this.confirmCredsKeyRingAvailable = "Migration requires Keyring to be available and unlocked. Do you want to continue?";
        this.msgKeyringTroubleshootingInfo = "Please click on the following links for more information on troubleshooting keychain issues:";
        this.msgRecommendCredsMigrationToSecretStore = "One or more Oracle Explorer > Database connections have password/proxy password saved in the settings. To save connection password/proxy password in VS Code Secret Storage use the Connection Configuration > Password Store settings and \"Update\" context menu on the connection.";
        this.msgConnCredsMigrationsSuccess = "Connection passwords have been successfully migrated from settings to VS Code Secret Storage.";
        this.msgConnCredsMigrationsFailed = "Failed to migrate connection passwords from settings to VS Code Secret Storage.";
        this.msgSomeConnCredsMigrationsFailed = "Failed to migrate connection password/proxy password to VS Code Secret Storage for one or more Oracle Explorer > Database connections. Look in the OUTPUT window under Oracle Developer Tools for more detailed information.";
        this.msgSuccessConnCredsMigrationDetails = "Migration of password to VS Code Secret Storage succeeded for the following connections:";
        this.msgFailedConnCredsMigrationDetails = "Migration of password to VS Code Secret Storage failed for the following connections:";
        this.msgShowConnCredsMigrationPrompt = "Do you want to be prompted for connection password store migration to Secret Storage every time Oracle Developer Tools extension is activated?";
        this.msgMoreInfoAt = "More information URL: {0}";
        this.multiNodeOperationNotSupported = "'{0}' is not supported when multiple objects are selected in Oracle Explorer > Database view.";
        this.multiNodeOperationNotSupportedOnAllNodes = "'{0}' is not supported for some of the objects selected in Oracle Explorer > Database view. Please select an operation supported for all the selected objects.";
        this.multiNodeOperationNotSupportedAcrossConnectionNodes = "'{0}' is not supported for objects selected in more than one Oracle Explorer connection. Please select objects in the same Oracle Explorer connection and retry the operation.";
        this.cmdNamePackageSpecification = "Open Package Specification";
        this.cmdNameOpenPackageBody = "Open Package Body";
        this.cmdNameDataExplorerEditScript = "Open";
        this.cmdNameDataExplorerOpenMethod = "Open";
        this.cmdNameDataExplorerStepInto = "Step Into";
        this.cmdNameDataExplorerDownloadScript = "Download";
        this.cmdNameDataExplorerDownloadPackageBody = "Download Package Body...";
        this.cmdNameDataExplorerDownloadPackageSpec = "Download Package Specification...";
        this.cmdNameDataExplorerRunCodeObject = "Run...";
        this.cmdNameDataExplorerCompileObject = "Compile...";
        this.cmdNameDataExplorerCompileDebugObject = "Compile Debug...";
        this.cmdNameDataExplorerShowData = "Show Data...";
        this.cmdNameDataExplorerConnect = "Connect";
        this.cmdNameDataExplorerRefresh = "Refresh";
        this.cmdNameDataExplorerDisconnect = "Disconnect";
        this.cmdNameDataExplorerRename = "Rename";
        this.cmdNameDataExplorerClone = "Clone";
        this.cmdNameDataExplorerDelete = "Delete";
        this.cmdNameDataExplorerModifyConnection = "Update...";
        this.cmdNameDataExplorerDescribeObject = "Describe...";
        this.cmdNameDataExplorerGenerateInsert = "Generate Insert SQL...";
        this.cmdNameDataExplorerGenerateSelect = "Generate Select SQL...";
        this.cmdNameDataExplorerGenerateDelete = "Generate Delete SQL...";
        this.cmdNameDataExplorerGenerateCreate = "Generate Create SQL...";
        this.cmdNameDataExplorerSetDefaultConnection = "Set as Default Connection";
        this.cmdNameDataExplorerUnsetDefaultConnection = "Unset as Default Connection";
        this.cmdNameDataExplorerRealtimeSqlMonitoring = "Real-Time SQL Monitoring";
        this.cmdNameDataExplorerOpenNewSqlFile = "Open New SQL File";
        this.cmdNameDataExplorerOpenExistingSqlFile = "Open Existing SQL File";
        this.cmdNameDataExplorerCompilerSettings = "PL/SQL Debugger and Compiler Settings";
        this.cmdNameDataExplorerFormatterSettings = "SQL and PL/SQL Formatter Settings";
        this.cmdNameDataExplorerFilters = "Filters";
        this.cmdNameDataExplorerExplainPlanSettings = "Explain Plan and Execution Plan Settings";
        this.cmdNameDataExplorerConfigureAIProvider = "Configure Select AI Provider Network Access";
        this.cmdNameDataExplorerConfigureAIProfile = "Configure Select AI Profile";
        this.cmdNameRunDebug = "Run Debug";
        this.cmdNamestartExternalApplicationdebugger = "Start External Application Debugger";
        this.codeGenerationActionPlaceholder = "Select code generation type";
        this.codeGenerationActionMessage = "Select code generation type";
        this.targetLanguagePlaceholder = "Select code generation target language";
        this.targetLanguageMessage = "Select code generation target language";
        this.errorSelectionFromMultipleConnections = "All selected nodes must belong to the same connection";
        this.errorSelectionOfWrongNodes = "All selected nodes must be either tables, views or columns of the two types";
    }
    localize(locale) {
        const fileName = "./localizedConstants." + locale;
        let languageConstants;
        try {
            languageConstants = require(fileName);
        }
        catch (error) {
            logger_1.FileStreamLogger.Instance.error("Could not load strings for locale " + locale);
        }
        if (languageConstants) {
            for (const key in this) {
                if (this.hasOwnProperty(key) && languageConstants[key]) {
                    this[key] = languageConstants[key];
                }
            }
        }
    }
}
LocalizedConstants.serverTransportSettingsPropertyName = "serverTransport";
LocalizedConstants.settingsServerTransportKindPropertyName = "Transport Kind";
LocalizedConstants.settingsSocketTransportPortPropertyName = "Port Number";
const constants = new LocalizedConstants();
const englishConstants = new LocalizedConstants();
exports.englishConstants = englishConstants;
englishConstants.localize("en");
exports.default = constants;
