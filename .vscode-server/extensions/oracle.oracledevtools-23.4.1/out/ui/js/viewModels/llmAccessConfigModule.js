define(["require","exports","knockout","ojs/ojmutablearraydataprovider","../common/scriptExecutionModels","../common/dataAccessService","../utilities","../common/localizedConstants","../common/messageService","../common/models","ojs/ojcontext","ojs/ojbutton","ojs/ojknockout","ojs/ojinputtext","ojs/ojformlayout","ojs/ojlabel","ojs/ojselectcombobox","ojs/ojmessage","ojs/ojmessages","ojs/ojprogress","ojs/ojprogress-circle","ojs/ojinputnumber","ojs/ojcheckboxset","ojs/ojoption"],(function(require,e,s,a,t,n,i,c,o,r,l){"use strict";let h;class d{constructor(){this.dbmsCloudAISettingsTitle=c.LocalizedConstants.Instance.configureAIProvider,this.llmAccessConfigDescription=c.LocalizedConstants.Instance.llmAccessConfigDescMain,this.aiProvider=c.LocalizedConstants.Instance.aiProvider,this.usernameStr=c.LocalizedConstants.Instance.dbUsername,this.noSchemasAvailable=c.LocalizedConstants.Instance.noSchemasAvailable,this.save=c.LocalizedConstants.Instance.saveBtnLabel,this.copy=c.LocalizedConstants.Instance.connUITextCopyConnectionString,this.showSQL=c.LocalizedConstants.Instance.showSQLLabel,this.yesStr=c.LocalizedConstants.Instance.yes,this.sampleCodeDescription=c.LocalizedConstants.Instance.dbmsCloudSampleCodeDesc}}return class{constructor(e){this.msgPos={my:{vertical:"top",horizontal:"end"},at:{vertical:"top",horizontal:"end"},of:"window"},this.messageHandlersField=new Map,this.labelTexts=new d,this.hosts=s.observableArray([{value:"api.openai.com",label:"api.openai.com"},{value:"api.cohere.ai",label:"api.cohere.ai"}]),this.host=s.observable("api.openai.com"),this.usernames=s.observableArray([]),this.username=s.observable(""),this.usernamesDP=new a(this.usernames(),{keyAttributes:"value"}),this.isGetUsernamesInProgress=s.observable(!1).extend({notify:"always"}),this.bNoSchemasAvailable=!1,this.currentUser="",this.isConfigForSelf=s.computed((()=>this.currentUser===this.username())),this.isSaving=s.observable(!1).extend({notify:"always"}),this.saveButtonDisabled=s.observable(!0),this.hostReplaceStr=c.LocalizedConstants.Instance.hostReplaceStr,this.userReplaceStr=c.LocalizedConstants.Instance.usernameReplaceStr,this.usernameFormatStr=s.observable(this.userReplaceStr),this.hostFormatStr=s.observable(this.hostReplaceStr),this.commentIfNeeded=s.pureComputed((()=>this.isConfigForSelf()?"-- ":"")),this.sampleCode=s.pureComputed((()=>`-- Grant EXECUTE privileges to user\n${this.commentIfNeeded()}GRANT EXECUTE ON DBMS_CLOUD TO ${this.usernameFormatStr()};\n${this.commentIfNeeded()}GRANT EXECUTE ON DBMS_CLOUD_AI TO ${this.usernameFormatStr()};\n\n-- Set up ACL to allow the database to connect to an AI Provider for a specified user\nBEGIN\n    DBMS_NETWORK_ACL_ADMIN.APPEND_HOST_ACE(\n        HOST => '${this.hostFormatStr()}',\n        ACE => XS$ACE_TYPE(PRIVILEGE_LIST => XS$NAME_LIST('http'),\n            PRINCIPAL_NAME =>'${this.usernameFormatStr()}',\n            PRINCIPAL_TYPE => XS_ACL.PTYPE_DB));\nEND;\n/`)),this.showSQLOption=s.observableArray(),this.doShowSQL=s.computed((()=>-1!=this.showSQLOption.indexOf(this.labelTexts.yesStr))),this.currentConnectionId=-1,this.onThemeChanged=e=>{n.DataAccessService.instance.logInfo("Theme Changed"),i.setContrast()},this.onSave=e=>{n.DataAccessService.instance.logInfo("Sending save llm config request");const s=new t.MessageBase;s.type=t.MessageName.saveLLMAccessConfigRequest;const a=new t.SaveLLMAccessConfigRequest;a.ownerUri=n.DataAccessService.instance.URI,a.executionId=n.DataAccessService.instance.currentExecutionId,a.windowUri=n.DataAccessService.instance.windowUri,a.connectionUniqueId=n.DataAccessService.instance.connectionUniqueId,a.connectionName=n.DataAccessService.instance.profileName,a.connectedUser=this.currentUser,a.username=this.username(),a.host=this.host(),s.data=a,this.isSaving(!0),this.saveButtonDisabled(!0);try{n.DataAccessService.instance.send(s),n.DataAccessService.instance.logInfo("Successfully placed saveLLMAccessConfigRequest - "+t.SaveLLMAccessConfigRequest.displayString(a))}catch(e){n.DataAccessService.instance.logError(e),this.isSaving(!1),this.saveButtonDisabled(!1)}},this.onValueChanged=e=>{if(this.saveButtonDisabled(this.doDisableSave()),this.hostFormatStr(this.host()),this.bNoSchemasAvailable)this.usernameFormatStr(this.userReplaceStr);else{let e=i.identifierNeedsQuotes(this.username())?i.addQuotes(this.username()):this.username();this.usernameFormatStr(e)}},this.onCopySampleCode=(e,s,a)=>{try{i.copyToClipBoard(this.sampleCode())}catch(e){n.DataAccessService.instance.logError(e)}},this.onClearPageEvent=e=>{try{n.DataAccessService.instance.logInfo("OnclearPageEvent:"+JSON.stringify(e));const s=e.data;this.handleClearEvent(s)}catch(e){n.DataAccessService.instance.logError(e),o.MessagesService.getinstance().ShowMessage(c.LocalizedConstants.Instance.unableToClear)}},this.handleClearEvent=e=>{try{n.DataAccessService.instance.URI=e.uri,n.DataAccessService.instance.currentExecutionId=e.executionId,n.DataAccessService.instance.windowUri=e.windowUri,n.DataAccessService.instance.profileName=e.profileName,n.DataAccessService.instance.configurationTarget=e.configurationTarget,n.DataAccessService.instance.workspaceFolderName=e.workspaceFolderName,n.DataAccessService.instance.workspaceFolderUri=e.workspaceFolderUri,n.DataAccessService.instance.workspaceFolderIndex=e.workspaceFolderIndex,n.DataAccessService.instance.connectionUniqueId=e.connectionUniqueId,this.initialize()}catch(e){n.DataAccessService.instance.logError(e),o.MessagesService.getinstance().ShowMessage(c.LocalizedConstants.Instance.unableToClear)}},h=this,this.moduleName=e.moduleName,this.messageHandlers.set(t.MessageName.themeChanged,h.onThemeChanged),this.messageHandlers.set(t.MessageName.odtConfigChanged,h.onConfigChanged),this.messageHandlers.set(t.MessageName.clearPageEvent,h.onClearPageEvent),this.messageHandlers.set(t.MessageName.llmConfigGetSchemasResponse,(e=>{e&&i.selectAIResponseIsSameConnection(e,n.DataAccessService.instance.connectionUniqueId)&&this.handleGetUsernamesResponse(e)})),this.messageHandlers.set(t.MessageName.saveLLMAccessConfigResponse,(e=>{this.handleSaveLLMAccessConfigResponse(e)})),n.DataAccessService.instance.subscribe((e=>{if(e&&this.messageHandlers.get(e.type)){const s=this.messageHandlers.get(e.type);s&&s(e)}else n.DataAccessService.instance.logError(`Could not find handler for message ${e.type}`)})),n.DataAccessService.instance.logInfo("Fetching Localized resources "),n.DataAccessService.instance.getLocalizedData().done((e=>{n.DataAccessService.instance.logInfo("Fetched localized resources."),c.LocalizedConstants.Instance.Configure(e)})).fail((e=>{n.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))})),this.initialize(),i.setContrast()}get messagesDataProvider(){return o.MessagesService.getinstance().messagesDataproviderField}get messageHandlers(){return this.messageHandlersField}set messageHandlers(e){this.messageHandlersField=e}initialize(){n.DataAccessService.instance.logInfo("Start initializing llmAccessConfigModule"),o.MessagesService.getinstance().ClearAll(),this.currentConnectionId===n.DataAccessService.instance.connectionUniqueId&&this.isSaving()||this.initValues(),this.currentConnectionId=n.DataAccessService.instance.connectionUniqueId,n.DataAccessService.instance.logInfo("End initializing llmAccessConfigModule")}initValues(){this.currentUser="",this.usernames.removeAll(),this.usernamesDP.data=this.usernames(),this.username(""),this.bNoSchemasAvailable=!1,l.getPageContext().getBusyContext().whenReady().then((()=>{this.isSaving(!1)})),this.saveButtonDisabled(!0),this.getUsernames()}onConfigChanged(e){const s=e.data;n.DataAccessService.instance.updatedConfig(s)}handleSaveLLMAccessConfigResponse(e){n.DataAccessService.instance.logInfo("Received SaveLLMAccessConfigRequest");try{const s=e.data;s&&(n.DataAccessService.instance.logInfo("Handling SaveLLMAccessConfigRequest - "+t.SaveLLMAccessConfigResponse.displayString(s)),o.MessagesService.getinstance().ClearAll(),s.success?o.MessagesService.getinstance().ShowMessage(s.message):o.MessagesService.getinstance().ShowMessage(s.message,r.Severity.error),i.selectAIResponseIsSameConnection(e,n.DataAccessService.instance.connectionUniqueId)&&(this.isSaving(!1),s.success&&this.username(""),this.saveButtonDisabled(this.doDisableSave())))}catch(e){n.DataAccessService.instance.logError(e)}n.DataAccessService.instance.logInfo("End handling SaveLLMAccessConfigRequest")}isValueEmpty(e){return null==e||null==e||""==e}doDisableSave(){return!!(this.isSaving()||this.isValueEmpty(this.host())||this.isValueEmpty(this.username())||this.bNoSchemasAvailable)}getUsernames(){const e=new t.MessageBase;e.type=t.MessageName.llmConfigGetSchemasRequest;const s=new t.LLMConfigGetSchemasRequest;s.ownerUri=n.DataAccessService.instance.URI,s.executionId=n.DataAccessService.instance.currentExecutionId,s.windowUri=n.DataAccessService.instance.windowUri,s.connectionUniqueId=n.DataAccessService.instance.connectionUniqueId,s.connectionName=n.DataAccessService.instance.profileName,e.data=s,this.isGetUsernamesInProgress(!0);try{n.DataAccessService.instance.send(e),n.DataAccessService.instance.logInfo("Successfully placed LLMConfigGetSchemasRequest - "+t.LLMConfigGetSchemasRequest.displayString(s))}catch(e){this.isGetUsernamesInProgress(!1),n.DataAccessService.instance.logError(e)}}handleGetUsernamesResponse(e){n.DataAccessService.instance.logInfo("Received GetLLMConfigUsersResponse");try{const s=e.data;if(s){if(n.DataAccessService.instance.logInfo("Handling GetLLMConfigUsersResponse - "+t.LLMConfigGetSchemasResponse.displayString(s)),this.isValueEmpty(s.errorMessage))if(s.schemas?.length>0){for(let e=0;e<s.schemas.length;e++)this.usernames.push({value:s.schemas[e],label:s.schemas[e]});this.currentUser=s.userIdUsedToConnect,this.username(s.userIdUsedToConnect)}else this.bNoSchemasAvailable=!0,this.usernames([{value:this.labelTexts.noSchemasAvailable,label:this.labelTexts.noSchemasAvailable}]),this.username(this.labelTexts.noSchemasAvailable),this.currentUser="";else o.MessagesService.getinstance().ClearAll(),o.MessagesService.getinstance().ShowMessage(s.errorMessage,r.Severity.error),this.bNoSchemasAvailable=!0,this.usernames([{value:this.labelTexts.noSchemasAvailable,label:this.labelTexts.noSchemasAvailable}]),this.username(this.labelTexts.noSchemasAvailable),this.currentUser="";this.usernamesDP.data=this.usernames()}}catch(e){n.DataAccessService.instance.logError(e)}finally{this.isGetUsernamesInProgress(!1),n.DataAccessService.instance.logInfo("Processed GetLLMConfigUsersResponse")}}}}));