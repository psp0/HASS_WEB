define(["require","exports","../common/messageService","../common/scriptExecutionModels","../common/dataAccessService","../common/localizedConstants","../utilities","../common/explainPlanModels","knockout","signals","../common/models","ojs/ojmodule-element-utils","ojs/ojmutablearraydataprovider","ojs/ojknockout","ojs/ojbutton","ojs/ojcheckboxset","ojs/ojselectcombobox","ojs/ojmessage","ojs/ojmessages","ojs/ojformlayout","ojs/ojlabel","ojs/ojselector","ojs/ojlistview","ojs/ojlistitemlayout","ojs/ojnavigationlist","ojs/ojprogress","ojs/ojprogress-circle"],(function(require,e,t,a,n,i,s,l,o,r,c,u,p){"use strict";let h;return class{constructor(e){this.msgPos={my:{vertical:"top",horizontal:"end"},at:{vertical:"top",horizontal:"end"},of:"window"},this.messageHandlersField=new Map,this.currentTab=o.observable(l.ExplainSettingType.ExplainPlan),this.explainPlanStr=o.computed((()=>{switch(this.currentTab()){case l.ExplainSettingType.ExplainPlan:return i.LocalizedConstants.Instance.explainPlan;case l.ExplainSettingType.DBMSExplainPlan:return i.LocalizedConstants.Instance.dbmsExplainPlan;case l.ExplainSettingType.ExecutionPlan:return i.LocalizedConstants.Instance.executionPlan;case l.ExplainSettingType.DBMSExecutionPlan:return i.LocalizedConstants.Instance.dbmsExecutionPlan}})),this.isDbmsPlan=o.observable(!1),this.profileConfigurationTarget=o.observable(a.ConfigurationTarget.Global),this.profileWorkspaceFolder=o.observable(void 0),this.infoSignalToConfig=new r.Signal,this.infoSignalFromConfig=new r.Signal,this.settingsConfig=u.createConfig({name:"configSettings",params:{infoSignalToConfig:this.infoSignalToConfig,infoSignalFromConfig:this.infoSignalFromConfig,editable:o.observable(!0),profileConfigTarget:this.profileConfigurationTarget,profileWorkspaceFolder:this.profileWorkspaceFolder,fieldIdPrefix:"explainPlan"}}),this.tabOptions=o.observableArray([{value:l.ExplainSettingType.ExplainPlan,label:i.LocalizedConstants.Instance.explainPlan},{value:l.ExplainSettingType.DBMSExplainPlan,label:i.LocalizedConstants.Instance.dbmsExplainPlan},{value:l.ExplainSettingType.ExecutionPlan,label:i.LocalizedConstants.Instance.executionPlan},{value:l.ExplainSettingType.DBMSExecutionPlan,label:i.LocalizedConstants.Instance.dbmsExecutionPlan}]),this.tabDP=new p(this.tabOptions(),{keyAttributes:"value"}),this.scopeIndex=-1,this.saveButtonDisable=o.observable(!0),this.unsavedChangesInTabs=[!1,!1,!1,!1],this.isSaving=o.observable(!1),this.formatValue=o.observable(l.ExplainFormatType.Typical),this.dbmsExplainFormatList=[{value:l.ExplainFormatType.Basic,label:i.LocalizedConstants.Instance.basic},{value:l.ExplainFormatType.Typical,label:i.LocalizedConstants.Instance.typical},{value:l.ExplainFormatType.Serial,label:i.LocalizedConstants.Instance.serial},{value:l.ExplainFormatType.All,label:i.LocalizedConstants.Instance.all}],this.dbmsFormatLength=this.dbmsExplainFormatList.length,this.formatOptions=o.observableArray(this.dbmsExplainFormatList),this.adaptiveFormatType={value:l.ExplainFormatType.Adaptive,label:i.LocalizedConstants.Instance.adaptive},this.allColumnsChecked=o.observableArray(),this.showAllColumnsValue=o.computed({owner:this,read:()=>this.allColumnsChecked(),write:e=>{e.indexOf(this.strYes)>-1?(this.selectAllColumns(!0),this.allColumnsChecked.push(this.strYes)):(this.selectAllColumns(!1),this.allColumnsChecked.removeAll())}}),this.customiseKeywordsValue=o.observableArray([]),this.disableKeywordList=o.observable(!0),this.dbmsExplainPlanTabValue=l.ExplainSettingType.DBMSExplainPlan,this.dbmsExecutionPlanTabValue=l.ExplainSettingType.DBMSExecutionPlan,this.explainPlanTabValue=l.ExplainSettingType.ExplainPlan,this.executionPlanTabValue=l.ExplainSettingType.ExecutionPlan,this.explainKeywordList=[{value:l.DbmsXplanOption.ALIAS,label:"ALIAS"},{value:l.DbmsXplanOption.BYTES,label:"BYTES"},{value:l.DbmsXplanOption.COST,label:"COST"},{value:l.DbmsXplanOption.NOTE,label:"NOTE"},{value:l.DbmsXplanOption.PARALLEL,label:"PARALLEL (TQ, IN-OUT, PQ Distrib)"},{value:l.DbmsXplanOption.PARTITION,label:"PARTITION (Pstart, Pstop)"},{value:l.DbmsXplanOption.PREDICATE,label:"PREDICATE"},{value:l.DbmsXplanOption.PROJECTION,label:"PROJECTION"},{value:l.DbmsXplanOption.REMOTE,label:"REMOTE"},{value:l.DbmsXplanOption.ROWS,label:"ROWS"}],this.executionKeywordList=[{value:l.DbmsXplanOption.ALIAS,label:"ALIAS"},{value:l.DbmsXplanOption.BYTES,label:"BYTES"},{value:l.DbmsXplanOption.COST,label:"COST"},{value:l.DbmsXplanOption.IOSTATS,label:"IOSTATS"},{value:l.DbmsXplanOption.MEMSTATS,label:"MEMSTATS"},{value:l.DbmsXplanOption.NOTE,label:"NOTE"},{value:l.DbmsXplanOption.PARALLEL,label:"PARALLEL (TQ, IN-OUT, PQ Distrib)"},{value:l.DbmsXplanOption.PARTITION,label:"PARTITION (Pstart, Pstop)"},{value:l.DbmsXplanOption.PREDICATE,label:"PREDICATE"},{value:l.DbmsXplanOption.PROJECTION,label:"PROJECTION"},{value:l.DbmsXplanOption.REMOTE,label:"REMOTE"},{value:l.DbmsXplanOption.ROWS,label:"ROWS"}],this.executionKeywordListDp=new p(this.executionKeywordList,{keyAttributes:"value"}),this.explainKeywordListDp=new p(this.explainKeywordList,{keyAttributes:"value"}),this.explainColumnList=[{value:l.ExplainColumn.BYTES,label:"BYTES"},{value:l.ExplainColumn.CARDINALITY,label:"CARDINALITY"},{value:l.ExplainColumn.COST,label:"COST"},{value:l.ExplainColumn.CPU_COST,label:"CPU_COST"},{value:l.ExplainColumn.DEPTH,label:"DEPTH"},{value:l.ExplainColumn.DISTRIBUTION,label:"DISTRIBUTION"},{value:l.ExplainColumn.IO_COST,label:"IO_COST"},{value:l.ExplainColumn.OBJECT_ALIAS,label:"OBJECT_ALIAS"},{value:l.ExplainColumn.OBJECT_INSTANCE,label:"OBJECT_INSTANCE"},{value:l.ExplainColumn.OBJECT_NAME,label:"OBJECT_NAME"},{value:l.ExplainColumn.OBJECT_NODE,label:"OBJECT_NODE"},{value:l.ExplainColumn.OBJECT_OWNER,label:"OBJECT_OWNER"},{value:l.ExplainColumn.OBJECT_TYPE,label:"OBJECT_TYPE"},{value:l.ExplainColumn.OPTIMIZER,label:"OPTIMIZER"},{value:l.ExplainColumn.OPTIONS,label:"OPTIONS"},{value:l.ExplainColumn.OTHER,label:"OTHER"},{value:l.ExplainColumn.OTHER_TAG,label:"OTHER_TAG"},{value:l.ExplainColumn.Other_XML_Column,label:"Other XML Column"},{value:l.ExplainColumn.PARENT_ID,label:"PARENT_ID"},{value:l.ExplainColumn.POSITION,label:"POSITION"},{value:l.ExplainColumn.Partition_Columns,label:"Partition Columns"},{value:l.ExplainColumn.Predicate_Column,label:"Predicate Column"},{value:l.ExplainColumn.Projection_Column,label:"Projection Column"},{value:l.ExplainColumn.QBLOCK_NAME,label:"QBLOCK_NAME"},{value:l.ExplainColumn.SEARCH_COLUMNS,label:"SEARCH_COLUMNS"},{value:l.ExplainColumn.TEMP_SPACE,label:"TEMP_SPACE"},{value:l.ExplainColumn.TIME,label:"TIME"}],this.executionColumnList=[{value:l.ExplainColumn.BYTES,label:"BYTES"},{value:l.ExplainColumn.CARDINALITY,label:"CARDINALITY"},{value:l.ExplainColumn.COST,label:"COST"},{value:l.ExplainColumn.CPU_COST,label:"CPU_COST"},{value:l.ExplainColumn.DEPTH,label:"DEPTH"},{value:l.ExplainColumn.DISTRIBUTION,label:"DISTRIBUTION"},{value:l.ExplainColumn.IO_COST,label:"IO_COST"},{value:l.ExplainColumn.OBJECT_ALIAS,label:"OBJECT_ALIAS"},{value:l.ExplainColumn.OBJECT_NAME,label:"OBJECT_NAME"},{value:l.ExplainColumn.OBJECT_NODE,label:"OBJECT_NODE"},{value:l.ExplainColumn.OBJECT_OWNER,label:"OBJECT_OWNER"},{value:l.ExplainColumn.OBJECT_TYPE,label:"OBJECT_TYPE"},{value:l.ExplainColumn.OPTIMIZER,label:"OPTIMIZER"},{value:l.ExplainColumn.OPTIONS,label:"OPTIONS"},{value:l.ExplainColumn.OTHER,label:"OTHER"},{value:l.ExplainColumn.OTHER_TAG,label:"OTHER_TAG"},{value:l.ExplainColumn.Other_XML_Column,label:"Other XML Column"},{value:l.ExplainColumn.PARENT_ID,label:"PARENT_ID"},{value:l.ExplainColumn.POSITION,label:"POSITION"},{value:l.ExplainColumn.Partition_Columns,label:"Partition Columns"},{value:l.ExplainColumn.Predicate_Column,label:"Predicate Column"},{value:l.ExplainColumn.Projection_Column,label:"Projection Column"},{value:l.ExplainColumn.QBLOCK_NAME,label:"QBLOCK_NAME"},{value:l.ExplainColumn.SEARCH_COLUMNS,label:"SEARCH_COLUMNS"},{value:l.ExplainColumn.TEMP_SPACE,label:"TEMP_SPACE"},{value:l.ExplainColumn.TIME,label:"TIME"}],this.explainColumnListDp=new p(this.explainColumnList,{keyAttributes:"value"}),this.executionColumnListDp=new p(this.executionColumnList,{keyAttributes:"value"}),this.columnSelection=o.observableArray([]),this.keywordSelection=o.observableArray([]),this.onThemeChanged=()=>{n.DataAccessService.instance.logInfo("Theme Changed"),s.setContrast()},this.strYes="yes",this.areColumnsEqual=(e,t)=>e.length===t.size&&e.every((e=>t.has(e))),this.onFormatTypeChanged=e=>{e&&e.detail&&(this.activeSettings.formatType=e.detail.value,this.customiseKeywordsValue(this.activeSettings.customiseKeywords?[this.strYes]:[]),this.populateKeywordList(),this.modifyButtons())},this.onTabSelectionChanged=e=>{void 0!==e.detail.value&&(this.updateTabValues(e.detail.value),this.modifyButtons())},this.onSave=()=>{this.isSaving(!0),this.saveButtonDisable(!0),n.DataAccessService.instance.logInfo("Sending save request for explain plan settings");const e=new a.MessageBase;e.type=a.MessageName.saveExplainPlanSettingsRequest;const t=new a.SaveExplainPlanSettingsRequest;t.ownerUri=n.DataAccessService.instance.URI,t.executionId=n.DataAccessService.instance.currentExecutionId,t.windowUri=n.DataAccessService.instance.windowUri,t.configurationTarget=this.profileConfigurationTarget(),t.workspaceFolder=this.profileWorkspaceFolder(),t.explainSettingType=this.currentTab(),t.config=this.isDbmsPlan()?new l.DbmsExplainPlanConfig(this.activeSettings.formatType,this.activeSettings.keywordSet,this.activeSettings.customiseKeywords):new l.ExplainPlanConfig(this.activeSettings.showAllColumns,this.activeSettings.columnSet),e.data=t;try{n.DataAccessService.instance.send(e),n.DataAccessService.instance.logInfo("Placed SaveExplainPlanSettingsRequest")}catch(e){n.DataAccessService.instance.logError(e)}},this.onReset=()=>{this.defaultSettings&&(this.isDbmsPlan()?(this.activeSettings.populateDefaultKeywordSets(!0),this.activeSettings.formatType=this.defaultSettings.formatType,this.activeSettings.setDefaultCustomiseKeywords()):(this.activeSettings.showAllColumns=this.defaultSettings.showAllColumns,this.activeSettings.columnSet.clear(),this.defaultSettings.columnSet.forEach((e=>this.activeSettings.columnSet.add(e)))),this.populateUIControls())},this.onKeywordValueChanged=(e,t)=>{e&&e.detail&&(this.activeSettings.customiseKeywords&&this.activeSettings.setKeywordSet(e.detail.value),this.modifyButtons())},this.onColumnValueChanged=(e,t)=>{e&&e.detail&&(this.activeSettings.setColumnSet(e.detail.value),this.activeSettings.columnSet&&this.activeSettings.columnSet.size==this.currentColumnList.length?this.allColumnsChecked.push(this.strYes):this.allColumnsChecked.removeAll(),this.activeSettings.showAllColumns=this.allColumnsChecked().length>0,this.modifyButtons())},this.oncustomiseChanged=e=>{e&&e.detail&&(this.activeSettings.customiseKeywords=e.detail.value?.length>0,e.detail.value!=e.detail.previousValue&&this.populateKeywordList(),this.disableKeywordList(!this.activeSettings.customiseKeywords))},this.onClearPageEvent=e=>{try{n.DataAccessService.instance.logInfo("OnclearPageEvent:"+JSON.stringify(e));const t=e.data;this.handleClearEvent(t)}catch(e){n.DataAccessService.instance.logError(e),t.MessagesService.getinstance().ShowMessage(i.LocalizedConstants.Instance.unableToClear)}},this.handleClearEvent=e=>{try{n.DataAccessService.instance.URI=e.uri,n.DataAccessService.instance.windowUri=e.windowUri,n.DataAccessService.instance.configurationTarget=e.configurationTarget,n.DataAccessService.instance.documentUri=e.documentUri,n.DataAccessService.instance.workspaceFolderName=e.workspaceFolderName,n.DataAccessService.instance.workspaceFolderIndex=e.workspaceFolderIndex,this.initialize(),this.initializeConfigSettings()}catch(e){n.DataAccessService.instance.logError(e),t.MessagesService.getinstance().ShowMessage(i.LocalizedConstants.Instance.unableToClear)}},h=this,this.moduleName=e.moduleName,this.messageHandlers.set(a.MessageName.themeChanged,this.onThemeChanged),this.messageHandlers.set(a.MessageName.odtConfigChanged,this.onConfigChanged),this.messageHandlers.set(a.MessageName.clearPageEvent,h.onClearPageEvent),this.messageHandlers.set(a.MessageName.getExplainPlanSettingsResponse,(e=>{this.handleGetExplainPlanSettingsResponse(e)})),this.messageHandlers.set(a.MessageName.saveExplainPlanSettingsResponse,(e=>{this.handleSaveExplainPlanSettingsResponse(e)})),n.DataAccessService.instance.subscribe((e=>{if(e&&this.messageHandlers.get(e.type)){const t=this.messageHandlers.get(e.type);t&&t(e)}else n.DataAccessService.instance.logError(`Could not find handler for message ${e.type}`)})),n.DataAccessService.instance.logInfo("Fetching Localized resources "),n.DataAccessService.instance.getLocalizedData().done((e=>{n.DataAccessService.instance.logInfo("Fetched localized resources."),i.LocalizedConstants.Instance.Configure(e)})).fail((e=>{n.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))})),this.initialize(),s.setContrast(),this.initializeConfigSettings(),this.infoSignalFromConfig.add(((e,t)=>{this.handleInfoSignalFromConfig(e,t)}),this)}get messagesDataprovider(){return t.MessagesService.getinstance().messagesDataproviderField}get messageHandlers(){return this.messageHandlersField}set messageHandlers(e){this.messageHandlersField=e}get uiHeaderText(){return i.LocalizedConstants.Instance.explainPlanTitle}get formatTypeLabel(){return i.LocalizedConstants.Instance.formatType}get saveStr(){return i.LocalizedConstants.Instance.saveBtnLabel}get resetStr(){return i.LocalizedConstants.Instance.resetToDefaults}get showAllColumnsLabel(){return i.LocalizedConstants.Instance.showAllColumns}get customiseKeywordsLabel(){return i.LocalizedConstants.Instance.customiseKeywords}get subHeader(){return i.LocalizedConstants.Instance.explainPlanSubtitle}getCurrentScopeSavedSettings(){if(-1==this.scopeIndex){let e=this.profileConfigurationTarget(),t=this.profileWorkspaceFolder();this.scopeIndex=this.savedSettings?this.savedSettings.findIndex((a=>a.configurationTarget===e&&(!a.workspaceFolder&&!t||a.workspaceFolder&&t&&a.workspaceFolder.name===t.name&&a.workspaceFolder.index===t.index))):-1}return this.scopeIndex>-1?this.savedSettings[this.scopeIndex]:null}get currentColumnList(){return this.currentTab()==l.ExplainSettingType.ExplainPlan?this.explainColumnList:this.executionColumnList}get currentSelection(){switch(this.activeSettings.currentTab){case l.ExplainSettingType.ExplainPlan:case l.ExplainSettingType.ExecutionPlan:return this.columnSelection;case l.ExplainSettingType.DBMSExplainPlan:case l.ExplainSettingType.DBMSExecutionPlan:return this.keywordSelection}}onConfigChanged(e){const t=e.data;n.DataAccessService.instance.updatedConfig(t)}initialize(){n.DataAccessService.instance.logInfo("Start initializing explainPlanSettingsModule"),t.MessagesService.getinstance().ClearAll();const e=new a.MessageBase;e.type=a.MessageName.getExplainPlanSettingsRequest;const i=new a.GetExplainPlanSettingsRequest;i.executionId=n.DataAccessService.instance.currentExecutionId,i.ownerUri=n.DataAccessService.instance.URI,i.windowUri=n.DataAccessService.instance.windowUri,i.configurationTarget=n.DataAccessService.instance.configurationTarget,i.workspaceFolder={uri:void 0,name:n.DataAccessService.instance.workspaceFolderName,index:n.DataAccessService.instance.workspaceFolderIndex},e.data=i;try{n.DataAccessService.instance.send(e),n.DataAccessService.instance.logInfo("Successfully placed get explain plan settings request ")}catch(e){n.DataAccessService.instance.logError(e)}n.DataAccessService.instance.logInfo("End initializing")}initializeConfigSettings(){o.computed((()=>{let e=this.profileConfigurationTarget(),t=this.profileWorkspaceFolder();this.activeSettings&&(e!==this.activeSettings.configurationTarget||t&&!this.activeSettings.workspaceFolder||!t&&this.activeSettings.workspaceFolder||t&&this.activeSettings.workspaceFolder&&(t.name!==this.activeSettings.workspaceFolder.name||t.index!==this.activeSettings.workspaceFolder.index))&&(this.scopeIndex=-1,this.updateUiFromSettings(),this.modifyButtons())}),this)}handleGetExplainPlanSettingsResponse(e){n.DataAccessService.instance.logInfo("Received GetExplainPlanSettingsResponse");try{const t=e.data;t&&t.config&&(this.savedSettings=t.config,this.defaultSettings=new l.ExplainPlanAllConfigs(t.defaultConfig)),this.profileConfigurationTarget(t.configurationTarget),this.profileWorkspaceFolder(t.workspaceFolder),this.updateUiFromSettings()}catch(e){n.DataAccessService.instance.logError(e)}}handleSaveExplainPlanSettingsResponse(e){n.DataAccessService.instance.logInfo("Received SaveExplainPlanSettingsResponse");try{const a=e.data;if(a)if(t.MessagesService.getinstance().ClearAll(),t.MessagesService.getinstance().ShowMessage(a.message),a.success){let e=this.getCurrentScopeSavedSettings();if(e)switch(a.explainSettingType){case l.ExplainSettingType.ExplainPlan:e.explainPlanConfig=new l.ExplainPlanConfig(this.activeSettings.showAllColumns,this.activeSettings.columnSet);break;case l.ExplainSettingType.ExecutionPlan:e.executionPlanConfig=new l.ExplainPlanConfig(this.activeSettings.showAllColumns,this.activeSettings.columnSet);break;case l.ExplainSettingType.DBMSExplainPlan:e.dbmsExplainPlanConfig=new l.DbmsExplainPlanConfig(this.activeSettings.formatType,this.activeSettings.keywordSet,this.activeSettings.customiseKeywords);break;case l.ExplainSettingType.DBMSExecutionPlan:e.dbmsExecutionPlanConfig=new l.DbmsExplainPlanConfig(this.activeSettings.formatType,this.activeSettings.keywordSet,this.activeSettings.customiseKeywords)}this.unsavedChangesInTabs[a.explainSettingType]=!1}else this.saveButtonDisable(!1)}catch(e){n.DataAccessService.instance.logError(e),this.saveButtonDisable(!1)}finally{this.isSaving(!1)}}handleInfoSignalFromConfig(e,t){if(e===c.configSignalType.SaveConfirm){let e=t;e.promptToSave=!1,this.unsavedChangesInTabs.forEach((t=>e.promptToSave=e.promptToSave||t)),this.infoSignalToConfig.dispatch(c.configSignalType.SaveConfirm,e)}}updateUiFromSettings(){try{if(this.savedSettings){let e=this.getCurrentScopeSavedSettings();for(let e=0;e<this.unsavedChangesInTabs.length;++e)this.unsavedChangesInTabs[e]=!1;e&&(this.activeSettings=new l.ExplainPlanAllConfigs(e),this.currentTab(l.ExplainSettingType.ExplainPlan),this.updateTabValues(l.ExplainSettingType.ExplainPlan))}}catch(e){n.DataAccessService.instance.logError("Error in formatterSettingModule.updateUiFromSettings"),n.DataAccessService.instance.logError(e)}}updateTabValues(e){this.activeSettings.currentTab=this.defaultSettings.currentTab=e,this.activeSettings&&(this.isDbmsPlan(e==l.ExplainSettingType.DBMSExplainPlan||e==l.ExplainSettingType.DBMSExecutionPlan),this.populateUIControls())}populateUIControls(){this.activeSettings&&(this.isDbmsPlan()?(this.activeSettings.currentTab==l.ExplainSettingType.DBMSExecutionPlan&&this.formatOptions().length==this.dbmsFormatLength?this.formatOptions.push(this.adaptiveFormatType):this.activeSettings.currentTab==l.ExplainSettingType.DBMSExplainPlan&&this.formatOptions().length>this.dbmsFormatLength&&this.formatOptions.remove(this.adaptiveFormatType),this.formatValue(this.activeSettings.formatType),this.customiseKeywordsValue(this.activeSettings.customiseKeywords?[this.strYes]:[]),this.activeSettings.keywordSet&&this.populateKeywordList()):this.activeSettings.showAllColumns?this.showAllColumnsValue([this.strYes]):this.activeSettings.columnSet&&(this.allColumnsChecked.removeAll(),this.populateColumnList()))}populateKeywordList(){this.currentSelection.removeAll(),this.currentTab()==l.ExplainSettingType.DBMSExplainPlan?this.explainKeywordList.forEach((e=>{this.activeSettings.keywordSet.has(e.value)&&this.currentSelection.push(e.value)})):this.executionKeywordList.forEach((e=>{this.activeSettings.keywordSet.has(e.value)&&this.currentSelection.push(e.value)}))}populateColumnList(){this.currentSelection.removeAll(),this.currentColumnList.forEach((e=>{this.activeSettings.columnSet.has(e.value)&&this.currentSelection.push(e.value)}))}modifyButtons(){this.saveButtonDisable(!this.hasChanged(this.activeSettings)),this.unsavedChangesInTabs[this.currentTab()]=!this.saveButtonDisable()}hasChanged(e){let t=this.getCurrentScopeSavedSettings();if(!e||!t)return!0;switch(e.currentTab){case l.ExplainSettingType.ExplainPlan:return e.showAllColumns!==t.explainPlanConfig?.showAllColumns||!e.showAllColumns&&!this.areColumnsEqual(t.explainPlanConfig?.columnList,e.columnSet);case l.ExplainSettingType.DBMSExplainPlan:return e.formatType!==t.dbmsExplainPlanConfig?.format||e.customiseKeywords!==t.dbmsExplainPlanConfig.customiseKeywords||!this.areColumnsEqual(t.dbmsExplainPlanConfig?.keywords,e.keywordSet);case l.ExplainSettingType.ExecutionPlan:return e.showAllColumns!==t.executionPlanConfig?.showAllColumns||!e.showAllColumns&&!this.areColumnsEqual(t.executionPlanConfig?.columnList,e.columnSet);case l.ExplainSettingType.DBMSExecutionPlan:return e.formatType!==t.dbmsExecutionPlanConfig?.format||e.customiseKeywords!==t.dbmsExecutionPlanConfig.customiseKeywords||!this.areColumnsEqual(t.dbmsExecutionPlanConfig?.keywords,e.keywordSet)}return!0}selectAllColumns(e){this.activeSettings.showAllColumns=e,this.currentSelection.removeAll(),this.currentColumnList.forEach((t=>{e?(this.currentSelection.push(t.value),this.activeSettings.columnSet.add(t.value)):this.activeSettings.columnSet.delete(t.value)}))}}}));