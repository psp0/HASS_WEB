define(["require","exports","knockout","../common/scriptExecutionModels","../common/autonomousDBModels","../common/dataAccessService","../common/messageService","../common/localizedConstants","../utilities","ojs/ojmodule-element-utils","signals","ojs/ojcontext","ojs/ojcolor","../common/models","ojs/ojbutton","ojs/ojcheckboxset","ojs/ojknockout","ojs/ojinputtext","ojs/ojlabel","ojs/ojoption","ojs/ojprogress","ojs/ojformlayout","ojs/ojselectcombobox","ojs/ojmessage","ojs/ojmessages","ojs/ojnavigationlist","ojs/ojcollapsible","ojs/ojdialog","ojs/ojlabelvalue","ojs/ojprogress-circle","ojs/ojbutton","ojs/ojmenu","ojs/ojpopup","ojs/ojcolorpalette","ojs/ojswitch","ojs/ojcolor","ojs/ojformlayout"],(function(require,e,n,t,o,s,i,a,c,r,l,d,h,p){"use strict";let u;var b,T;!function(e){e[e.Label=1]="Label",e[e.ComboBoxItem=2]="ComboBoxItem",e[e.ComboBox=3]="ComboBox",e[e.TextBox=4]="TextBox",e[e.CheckBox=5]="CheckBox",e[e.TextArea=6]="TextArea",e[e.Button=7]="Button"}(b||(b={}));class f{}f.connectionType="conType",f.TNSConnectionType="conType-1",f.basicConnectionType="conType-2",f.advancedConnectionType="conType-3",f.ODPConnectionStringConnectionType="conType-4",f.ldapConnectionType="conType-5",f.authType="authenticationTypes",f.authTypeNonAdmin="authType-1",f.authTypeAdminSYSDBA="authType-2",f.authTypeAdminSYSOPER="authType-3",f.tnsAliasesID="tnsAliasesID",f.tnsAliasesLabelID="tnsAliasesLabelID",f.tnsAdminLocationLabelID="tnsAdminLocationLabelID",f.currentSchemas="currentSchemas",f.aiProfiles="aiProfiles",f.tooltipPopupPrefix="tooltip-popup-",f.tooltipContainerPrefix="tooltip-container-",f.conTypeLabelID="conTypeLabelID",f.dbNameLabelID="dbNameLabelID",f.portNumLabelID="portNumLabelID",f.serviceNameLabelID="serviceNameLabelID",f.ezConnectStringTextBoxLabelID="ezConnectStringTextBoxLabelID",f.copyEasyConnectStringButtonID="copyEasyConnectStringButton",f.walletFileLocationTextLabelID="walletFileLocationTextLabelID",f.ezConnectPlusStringLabelID="ezConnectPlusStringLabelID",f.authenticationTypesLabelID="authenticationTypesLabelID",f.connectionName1LabelID="connectionName1LabelID",f.pdTextLabelID="passwordTextLabelID",f.proxyUserNameLabelID="proxyUserNameLabelID",f.proxyPdLabelID="proxyPasswordLabelID",f.currentSchemasLabelID="currentSchemasLabelID",f.loginScriptLabelID="loginScriptLabelID",f.connectionName2LabelID="connectionName2LabelID",f.userNameTextLabelID="userNameTextLabelID",f.odpConnectStringLabelID="odpConnectStringLabelID",f.savePdOptions="savePasswordOptions",f.setasDefaultConn="setasDefaultConn",f.showMorePropsID="showMorePropsID",f.aiProfileLabelID="aiProfileLabelID",f.enableWalletOptions="enableWalletOptions",f.enableConnCredsFromWalletOptions="enableConnCredsFromWalletOptions",f.showSchemaOptions="showSchemaOptions",f.showScopeOption1="showScopeOption1",f.showScopeOption2="showScopeOption2",f.showScopeOption3="showScopeOption3",f.showScopeOption4="showScopeOption4",f.portNum="portNum",f.serviceName="serviceName",f.odpConnectString="odpConnectString",f.ezConnectStringTextBox="ezConnectStringTextBox",f.tnsAdminLocation="tnsAdminLocation",f.walletFileLocationText="walletFileLocationText",f.userNameText="userNameText",f.connectionName1="connectionName1",f.proxyUserName="proxyUserName",f.loginScript="loginScript",f.connectionName2="connectionName2",f.dbName="dbName",f.ldapServerTextID="ldapServerTextID",f.ezConnectPlusString="ezConnectPlusString",f.savePdOptionsId="savePasswordOptions",f.savePdOption="savePwd",f.connectionColorButton1="colorBtn1",f.connectionColorButton2="colorBtn2";class m{constructor(e){this.createUpdateButtonForceUpdater=n.observable(),this.connInfoRequred=new S,this.connInfoPlaceHolderTexts=new g,this.connectionUILabelTexts=new I,this.existingUserProfiles=[],this.existingWorkspaceProfiles=[],this.existingFolderProfiles=[],this.zStore=void 0,this.profileConfigurationTarget=n.observable(t.ConfigurationTarget.Global),this.profileWorkspaceFolder=n.observable(void 0),this.isCreate=!0,this.tooltipDescription=n.observable(""),this.isConnectionInProgress=n.observable(!1),this.isTestConnectionInProgress=n.observable(!1),this.isFetchSchemasInProgress=n.observable(!1),this.creatingNewConnection=n.observable(this.isCreate),this.isFailedToParseDS=n.observable(!1),this.updateConnDataSource="",this.uiHeaderText=n.observable(""),this.createUpdateButtonText=n.observable(""),this.existingFiles=n.observable(),this.basicConnectionType=t.ConnectionType.Basic,this.tnsConnectionType=t.ConnectionType.TNS,this.advancedConnectionType=t.ConnectionType.Advanced,this.odpConnectionType=t.ConnectionType.ODPConnectionString,this.ldapConnectionType=t.ConnectionType.LDAPDirectoryServer,this.connectionTypes=n.observableArray([{value:t.ConnectionType.Basic,label:this.connectionUILabelTexts.connectionTypeEasyConnect},{value:t.ConnectionType.TNS,label:this.connectionUILabelTexts.connectionTypeTNS},{value:t.ConnectionType.Advanced,label:this.connectionUILabelTexts.connectionTypeEasyConnectPlus},{value:t.ConnectionType.ODPConnectionString,label:this.connectionUILabelTexts.connectionTypeODPConnectString},{value:t.ConnectionType.LDAPDirectoryServer,label:this.connectionUILabelTexts.connectionTypeLDAPDirectoryServerString}]),this.authenticationTypes=n.observableArray([{value:T.NonAdmin,label:this.connectionUILabelTexts.authTypeNonAdmin},{value:T.AdminSYSDBA,label:this.connectionUILabelTexts.authTypeAdminSysdba},{value:T.AdminSYSOPER,label:this.connectionUILabelTexts.authTypeAdminSysoper}]),this.currentSchemas=n.observableArray(),this.currentSchemasList=[],this.currentSchema=n.observable(""),this.tnsAliases=n.observableArray(),this.connectionType=n.observable(t.ConnectionType.Basic),this.dbHostName=n.observable("localhost"),this.dbPortNum=n.observable("1521"),this.dbServiceName=n.observable("XEPDB1"),this.ezConnectString=n.computed((()=>{let e="";return this.isFailedToParseDS()?e=this.updateConnDataSource:(this.dbHostName()&&(e=this.dbHostName()),this.dbPortNum()&&(e&&(e+=":"),e+=this.dbPortNum()),this.dbServiceName()&&(e&&(e+="/"),e+=this.dbServiceName())),e}),this),this.loginScript=n.observable(""),this.ezConnectPlusString=n.observable(""),this.tnsAdminLocation=n.observable(""),this.uiLaunchedFromADBInstace=!1,this.tnsAlias=n.observable(""),this.enableWalletFileOptions=n.observableArray(),this.enableConnCredsFromWalletFileOptions=n.observableArray(),this.walletFileLocation=n.observable(""),this.odpnetConnString=n.observable(""),this.authenticationType=n.observable(T.NonAdmin),this.userId=n.observable("ADMIN"),this.password=n.observable(""),this.proxyUserId=n.observable(""),this.proxyPassword=n.observable(""),this.savePasswordOptions=n.observableArray(),this.setasDefaultOptions=n.observableArray(),this.collectionFilters=[],this.defaultAIProfile=n.observable(""),this.aiProfiles=n.observableArray(),this.isFetchAIProfilesInProgress=n.observable(!1),this.aiProfilesUnavailable=!1,this.useProxyAuthentication=n.computed((()=>!!this.proxyUserId().trim()),this),this.osAuthentication=n.computed((()=>{let e=this.userId().trim();return!this.useProxyAuthentication()&&"/"===e&&(this.password(""),this.savePasswordOptions.removeAll(),!0)}),this),this.osProxyAuthentication=n.computed((()=>{let e=!1;if(this.useProxyAuthentication()){"/"===this.proxyUserId().trim()&&(this.proxyPassword(""),e=!0)}return e}),this),this.enableWalletFile=n.computed({owner:this,read:()=>-1!=this.enableWalletFileOptions.indexOf(m.strYes),write:e=>{e?this.enableWalletFileOptions.push(m.strYes):(this.enableWalletFileOptions.removeAll(),this.enableConnCredsFromWalletFileOptions.removeAll())}}),this.enableConnCredsFromWalletFile=n.computed({owner:this,read:()=>-1!=this.enableConnCredsFromWalletFileOptions.indexOf(m.strYes),write:e=>{e?this.enableConnCredsFromWalletFileOptions.push(m.strYes):this.enableConnCredsFromWalletFileOptions.removeAll()}}),this.enableSeps=n.computed((()=>{if(this.enableWalletFile())return this.tooltipManager?.updateTooltipattributesForControls(),!0;this.enableConnCredsFromWalletFileOptions.removeAll()}),this),this.savePassword=n.computed({owner:this,read:()=>-1!=this.savePasswordOptions.indexOf(m.strYes),write:e=>{e?this.savePasswordOptions.push(m.strYes):this.savePasswordOptions.removeAll()}}),this.setasDefault=n.computed({owner:this,read:()=>-1!=this.setasDefaultOptions.indexOf(m.strYes),write:e=>{e&&this.setasDefaultOptions.push(m.strYes)}}),this.morePropsVisible=!1,this.onShowMorePropsValueChanged=e=>{this.morePropsVisible=-1!=this.showMorePropsOptions.indexOf(m.strYes),this.tooltipManager?.updateTooltipattributesForControls()},this.onHelp=()=>{const e=new t.MessageBase;e.type=t.MessageName.connectionHelpRequest;const n=new t.ConnectionHelpRequest;n.executionId=s.DataAccessService.instance.currentExecutionId,n.ownerUri=s.DataAccessService.instance.URI,n.windowUri=s.DataAccessService.instance.windowUri,e.data=n;try{s.DataAccessService.instance.send(e),s.DataAccessService.instance.logInfo("Successfully placed connectionHelpRequest")}catch(e){s.DataAccessService.instance.logError(e)}},this.showMorePropsOptions=n.observableArray(),this.showMoreProps=n.computed({owner:this,read:()=>-1!=this.showMorePropsOptions.indexOf(m.strYes),write:e=>{e&&this.showMorePropsOptions.push(m.strYes)}}),this.connectionNameParsed=n.observable(""),this.connectionNameComputed=n.computed((()=>this.computeConnectionName()),this),this.createUpdateButtonDisabled=n.computed((()=>{if(this.createUpdateButtonForceUpdater(),this.isConnectionInProgress()||this.isFetchSchemasInProgress()||this.isTestConnectionInProgress())return!0;let e=!1,n=(this.connectionNameParsed(),this.areAllPropertiesToCreateConnectionAvailable());if(this.isCreate)e=n;else{let t=this.getConnectionProperties(),[o,s,i,a]=this.compareProfiles(this.profile,t),c=this.isDefaultConnection!==this.setasDefault();e=(o||c||a)&&!s&&!i||n&&(o||s||i||c)}return!e}),this),this.updateCurrentSchemaOnUpdatingUserId=!0,this.lastCurrentSchemaUpdateUserId=void 0,this.currentSchemaNameComputed=n.computed((()=>{let e=this.userId().trim();if(this.morePropsVisible&&this.updateCurrentSchemaOnUpdatingUserId&&this.lastCurrentSchemaUpdateUserId!==e){this.lastCurrentSchemaUpdateUserId=e;let n=this.currentSchema();this.currentSchemasList.indexOf(n)<0&&this.currentSchemas.remove((e=>e.value===n)),e&&(this.authenticationType()===T.AdminSYSDBA||this.authenticationType()===T.AdminSYSOPER?e=m.strSYS:this.osAuthentication()&&(e="")),this.currentSchemas.unshift({value:e,label:e}),this.currentSchema(e)}return""}),this),this.connectionTypeChangedHandler=e=>{this.onConnectionTypeChanged()},this.tnsLocationChangeHandler=e=>{this.updatingUi||(this.isCreate&&this.tnsAlias(""),this.tnsAdminLocation()&&this.getTNSNames(this.tnsAdminLocation()))},this.onFetchSchemas=(e,n,t)=>{this.currentShcmeaFieldHasFocus=!0;try{if(this.isFetchSchemasInProgress())return;let e=this.areAllPropertiesToCreateConnectionAvailable();if(!e)return this.currentSchemas.removeAll(),void(this.lastSchemasFetchInfo=void 0);let n=this.getConnectionProperties();if(this.lastSchemasFetchInfo){let[t,o,s,i]=this.compareProfiles(this.lastSchemasFetchInfo[0],n);e=s}e&&(this.lastSchemasFetchInfo=[n,!1],this.getSchemas(n))}catch(e){s.DataAccessService.instance.logError(e)}},this.onBrowseTNSLocation=(e,n,o)=>{this.onBrowse(t.BrowseItem.TnsLocation,this.tnsAdminLocation())},this.onBrowseWalletFileLocation=(e,n,o)=>{this.onBrowse(t.BrowseItem.WalletLocation,this.walletFileLocation())},this.onBrowseLoginScript=(e,n,o)=>{this.onBrowse(t.BrowseItem.LoginScript,this.loginScript())},this.onRawValueChanged=e=>{e.currentTarget.value=e.detail.value},this.updateUserId=e=>{e.currentTarget.value=this.convertToOracleCase(e.currentTarget.value)},this.updateProxyUserId=e=>{e.currentTarget.value=this.convertToOracleCase(e.currentTarget.value)},this.updateCurrentSchemaToOracleCase=e=>{this.currentShcmeaFieldHasFocus=!1;let n=this.currentSchema();n&&this.currentSchemasList.indexOf(n)<0&&this.currentSchema(this.convertToOracleCase(n))},this.onCreateUpdateConnection=(e,n,t)=>{try{s.DataAccessService.instance.logInfo("Start creating or updating connection"),this.isConnectionInProgress(!0);let e=this.getConnectionProperties();this.saveProfile(e)}catch(e){s.DataAccessService.instance.logError(e)}},this.onCopyEasyConnectString=(e,n,t)=>{try{this.ezConnectString()&&this.copyToClipBoard(this.ezConnectString())}catch(e){s.DataAccessService.instance.logError(e)}},this.updatingUi=!1,this.connectionNameKeyPressHandler=()=>!1,this.themeFileId="ThemeCss",this.themeColorFileId="ThemeColor",this.customThemeTag="customTheme",this.messageHandlersField=new Map,this.databaseType=n.observable(o.DatabaseType.NormalDatabase),this.onClearPageEvent=e=>{try{s.DataAccessService.instance.logInfo("OnclearPageEvent:"+JSON.stringify(e));const n=e.data;this.handleClearEvent(n)}catch(e){s.DataAccessService.instance.logError(e),i.MessagesService.getinstance().ShowMessage(a.LocalizedConstants.Instance.unableToClear)}},this.handleClearEvent=e=>{try{s.DataAccessService.instance.URI=e.uri,s.DataAccessService.instance.windowUri=e.windowUri,s.DataAccessService.instance.configurationTarget=e.configurationTarget,s.DataAccessService.instance.documentUri=e.documentUri,s.DataAccessService.instance.workspaceFolderName=e.workspaceFolderName,s.DataAccessService.instance.workspaceFolderIndex=e.workspaceFolderIndex,this.initialize(e),this.isCreate&&this.onConnectionTypeChanged(),this.initializeConfigSettings()}catch(e){s.DataAccessService.instance.logError(e),i.MessagesService.getinstance().ShowMessage(a.LocalizedConstants.Instance.unableToClear)}},this.onThemeChanged=e=>{s.DataAccessService.instance.logInfo("Theme Changed"),c.setContrast()},this.currentShcmeaFieldHasFocus=!1,this.onCurrentSchemaValueChanged=e=>{this.updateCurrentSchemaOnUpdatingUserId&&this.currentShcmeaFieldHasFocus&&(this.updateCurrentSchemaOnUpdatingUserId=!1)},this.infoSignalToConfig=new l.Signal,this.infoSignalFromConfig=new l.Signal,this.settingsConfig=n.observable(),this.showScopeOptions=n.observableArray(),this.showScopeWithConnName=n.computed({owner:this,read:()=>-1!=this.showScopeOptions.indexOf(m.strYes),write:e=>{e&&this.showScopeOptions.push(m.strYes)}}),this.showSchemaOptions=n.observableArray(),this.showSchemaWithConnName=n.computed({owner:this,read:()=>-1!=this.showSchemaOptions.indexOf(m.strYes),write:e=>{e&&this.showSchemaOptions.push(m.strYes)}}),this.startAnimationListener=e=>{let n=e.detail;"open"!==n.action&&"close"!==n.action||(e.preventDefault(),n.endCallback())},this.preventDefault=e=>{e.preventDefault()},this.onColorButtonClick=(e,n,t)=>{try{this.popupColorValue(this.colorValue()),document.getElementById("colorPalettePopup").open(e)}catch(e){s.DataAccessService.instance.logError(e)}},this.setNone=(e,n,t)=>{this.popupColorValue(h.TRANSPARENT)},this.onDoneButtonClick=(e,n,t)=>{try{this.colorValue(this.popupColorValue()),document.getElementById("colorPalettePopup").close()}catch(e){s.DataAccessService.instance.logError(e)}},this.colorpalette=[{color:new h("#ffffff"),label:"Red: 255\nGreen: 255\nBlue: 255"},{color:new h("#c6c6c6"),label:"Red: 198\nGreen: 198\nBlue: 198"},{color:new h("#848484"),label:"Red: 132\nGreen: 132\nBlue: 132"},{color:new h("#000000"),label:"Red: 0\nGreen: 0\nBlue: 0"},{color:new h("#ff0000"),label:"Red: 255\nGreen: 0\nBlue: 0"},{color:new h("#ffff00"),label:"Red: 255\nGreen: 255\nBlue: 0"},{color:new h("#00ff00"),label:"Red: 0\nGreen: 255\nBlue: 0"},{color:new h("#00f7f7"),label:"Red: 0\nGreen: 247\nBlue: 247"},{color:new h("#0000ff"),label:"Red: 0\nGreen: 0\nBlue: 255"},{color:new h("#ff00ff"),label:"Red: 255\nGreen: 0\nBlue: 255"},{color:new h("#840000"),label:"Red: 132\nGreen: 0\nBlue: 0"},{color:new h("#848400"),label:"Red: 132\nGreen: 132\nBlue: 0"},{color:new h("#008400"),label:"Red: 0\nGreen: 132\nBlue: 0"},{color:new h("#008484"),label:"Red: 0\nGreen: 132\nBlue: 132"},{color:new h("#000084"),label:"Red: 0\nGreen: 0\nBlue: 132"},{color:new h("#840084"),label:"Red: 132\nGreen: 0\nBlue: 132"},{color:new h("#f6f7f7"),label:"Red: 246\nGreen: 247\nBlue: 247"},{color:new h("#ffd5d4"),label:"Red: 255\nGreen: 213\nBlue: 212"},{color:new h("#fedfd6"),label:"Red: 254\nGreen: 223\nBlue: 214"},{color:new h("#fff0d9"),label:"Red: 255\nGreen: 240\nBlue: 217"},{color:new h("#fff6d6"),label:"Red: 255\nGreen: 246\nBlue: 214"},{color:new h("#f8ffd5"),label:"Red: 248\nGreen: 255\nBlue: 213"},{color:new h("#e8fed8"),label:"Red: 232\nGreen: 254\nBlue: 216"},{color:new h("#d6ffd6"),label:"Red: 214\nGreen: 255\nBlue: 214"},{color:new h("#d6ffef"),label:"Red: 214\nGreen: 255\nBlue: 239"},{color:new h("#d6ffff"),label:"Red: 214\nGreen: 255\nBlue: 255"},{color:new h("#d6f7ff"),label:"Red: 214\nGreen: 247\nBlue: 255"},{color:new h("#d6e7ff"),label:"Red: 214\nGreen: 231\nBlue: 255"},{color:new h("#d6d6ff"),label:"Red: 214\nGreen: 214\nBlue: 255"},{color:new h("#efd6ff"),label:"Red: 239\nGreen: 214\nBlue: 255"},{color:new h("#ffd6ff"),label:"Red: 255\nGreen: 214\nBlue: 255"},{color:new h("#ffd6ef"),label:"Red: 255\nGreen: 214\nBlue: 239"},{color:new h("#e7e6e7"),label:"Red: 231\nGreen: 230\nBlue: 231"},{color:new h("#fed4d2"),label:"Red: 254\nGreen: 212\nBlue: 210"},{color:new h("#fedfd6"),label:"Red: 254\nGreen: 223\nBlue: 214"},{color:new h("#fedeb4"),label:"Red: 254\nGreen: 222\nBlue: 180"},{color:new h("#feefb7"),label:"Red: 254\nGreen: 239\nBlue: 183"},{color:new h("#fffdb7"),label:"Red: 255\nGreen: 253\nBlue: 183"},{color:new h("#e5ffb5"),label:"Red: 229\nGreen: 255\nBlue: 181"},{color:new h("#b5ffb5"),label:"Red: 181\nGreen: 255\nBlue: 181"},{color:new h("#b5ffde"),label:"Red: 181\nGreen: 255\nBlue: 222"},{color:new h("#b5ffff"),label:"Red: 181\nGreen: 255\nBlue: 255"},{color:new h("#b5e7ff"),label:"Red: 181\nGreen: 231\nBlue: 255"},{color:new h("#c6d6ff"),label:"Red: 198\nGreen: 214\nBlue: 255"},{color:new h("#c6c6ff"),label:"Red: 198\nGreen: 198\nBlue: 255"},{color:new h("#deb5ff"),label:"Red: 222\nGreen: 181\nBlue: 255"},{color:new h("#ffb5ff"),label:"Red: 255\nGreen: 181\nBlue: 255"},{color:new h("#ffb5de"),label:"Red: 255\nGreen: 181\nBlue: 222"},{color:new h("#d6d6d7"),label:"Red: 214\nGreen: 214\nBlue: 215"},{color:new h("#fea6a3"),label:"Red: 254\nGreen: 166\nBlue: 163"},{color:new h("#ffbda5"),label:"Red: 255\nGreen: 189\nBlue: 165"},{color:new h("#ffd6a5"),label:"Red: 255\nGreen: 214\nBlue: 165"},{color:new h("#feeeb7"),label:"Red: 254\nGreen: 238\nBlue: 183"},{color:new h("#feff93"),label:"Red: 254\nGreen: 255\nBlue: 147"},{color:new h("#d4ff92"),label:"Red: 212\nGreen: 255\nBlue: 146"},{color:new h("#a5ffa5"),label:"Red: 165\nGreen: 255\nBlue: 165"},{color:new h("#a5ffd6"),label:"Red: 165\nGreen: 255\nBlue: 214"},{color:new h("#a5ffff"),label:"Red: 165\nGreen: 255\nBlue: 255"},{color:new h("#a5e7ff"),label:"Red: 165\nGreen: 231\nBlue: 255"},{color:new h("#a5c6ff"),label:"Red: 165\nGreen: 198\nBlue: 255"},{color:new h("#a5a5ff"),label:"Red: 165\nGreen: 165\nBlue: 255"},{color:new h("#d6a5ff"),label:"Red: 214\nGreen: 165\nBlue: 255"},{color:new h("#ffa5ff"),label:"Red: 255\nGreen: 165\nBlue: 255"},{color:new h("#ffa5d6"),label:"Red: 255\nGreen: 165\nBlue: 214"},{color:new h("#c6c5c6"),label:"Red: 198\nGreen: 197\nBlue: 198"},{color:new h("#ff9494"),label:"Red: 255\nGreen: 148\nBlue: 148"},{color:new h("#ffa484"),label:"Red: 255\nGreen: 164\nBlue: 132"},{color:new h("#ffc686"),label:"Red: 255\nGreen: 198\nBlue: 134"},{color:new h("#fede74"),label:"Red: 254\nGreen: 222\nBlue: 116"},{color:new h("#fffe71"),label:"Red: 255\nGreen: 254\nBlue: 113"},{color:new h("#d6ff84"),label:"Red: 214\nGreen: 255\nBlue: 132"},{color:new h("#94fe93"),label:"Red: 148\nGreen: 254\nBlue: 147"},{color:new h("#94ffcd"),label:"Red: 148\nGreen: 255\nBlue: 205"},{color:new h("#85feff"),label:"Red: 133\nGreen: 254\nBlue: 255"},{color:new h("#92defe"),label:"Red: 146\nGreen: 222\nBlue: 254"},{color:new h("#93b5fe"),label:"Red: 147\nGreen: 181\nBlue: 254"},{color:new h("#9593ff"),label:"Red: 149\nGreen: 147\nBlue: 255"},{color:new h("#ce94ff"),label:"Red: 206\nGreen: 148\nBlue: 255"},{color:new h("#ff84ff"),label:"Red: 255\nGreen: 132\nBlue: 255"},{color:new h("#ff94ce"),label:"Red: 255\nGreen: 148\nBlue: 206"},{color:new h("#b4b4b5"),label:"Red: 180\nGreen: 180\nBlue: 181"},{color:new h("#fe8383"),label:"Red: 254\nGreen: 131\nBlue: 131"},{color:new h("#ff9472"),label:"Red: 255\nGreen: 148\nBlue: 114"},{color:new h("#ffb667"),label:"Red: 255\nGreen: 182\nBlue: 103"},{color:new h("#ffde62"),label:"Red: 255\nGreen: 222\nBlue: 98"},{color:new h("#ffff42"),label:"Red: 255\nGreen: 255\nBlue: 66"},{color:new h("#c5fe63"),label:"Red: 197\nGreen: 254\nBlue: 99"},{color:new h("#72ff70"),label:"Red: 114\nGreen: 255\nBlue: 112"},{color:new h("#73ffbe"),label:"Red: 115\nGreen: 255\nBlue: 190"},{color:new h("#73ffff"),label:"Red: 115\nGreen: 255\nBlue: 255"},{color:new h("#86d6ff"),label:"Red: 134\nGreen: 214\nBlue: 255"},{color:new h("#83abfc"),label:"Red: 131\nGreen: 171\nBlue: 252"},{color:new h("#8484fd"),label:"Red: 132\nGreen: 132\nBlue: 253"},{color:new h("#c684ff"),label:"Red: 198\nGreen: 132\nBlue: 255"},{color:new h("#ff73ff"),label:"Red: 255\nGreen: 115\nBlue: 255"},{color:new h("#ff84c6"),label:"Red: 255\nGreen: 132\nBlue: 198"},{color:new h("#a6a5a5"),label:"Red: 166\nGreen: 165\nBlue: 165"},{color:new h("#ff6365"),label:"Red: 255\nGreen: 99\nBlue: 101"},{color:new h("#ff7a53"),label:"Red: 255\nGreen: 122\nBlue: 83"},{color:new h("#ffad54"),label:"Red: 255\nGreen: 173\nBlue: 84"},{color:new h("#ffd741"),label:"Red: 255\nGreen: 215\nBlue: 65"},{color:new h("#ffff00"),label:"Red: 255\nGreen: 255\nBlue: 0"},{color:new h("#b7ff43"),label:"Red: 183\nGreen: 255\nBlue: 67"},{color:new h("#63ff63"),label:"Red: 99\nGreen: 255\nBlue: 99"},{color:new h("#62ffb6"),label:"Red: 98\nGreen: 255\nBlue: 182"},{color:new h("#50fffe"),label:"Red: 80\nGreen: 255\nBlue: 254"},{color:new h("#63cdfd"),label:"Red: 99\nGreen: 205\nBlue: 253"},{color:new h("#72a3fd"),label:"Red: 114\nGreen: 163\nBlue: 253"},{color:new h("#7473ff"),label:"Red: 116\nGreen: 115\nBlue: 255"},{color:new h("#b563ff"),label:"Red: 181\nGreen: 99\nBlue: 255"},{color:new h("#ff52ff"),label:"Red: 255\nGreen: 82\nBlue: 255"},{color:new h("#ff63b5"),label:"Red: 255\nGreen: 99\nBlue: 181"},{color:new h("#939393"),label:"Red: 147\nGreen: 147\nBlue: 147"},{color:new h("#ff5252"),label:"Red: 255\nGreen: 82\nBlue: 82"},{color:new h("#ff7442"),label:"Red: 255\nGreen: 116\nBlue: 66"},{color:new h("#fd9c2f"),label:"Red: 253\nGreen: 156\nBlue: 47"},{color:new h("#fdc700"),label:"Red: 253\nGreen: 199\nBlue: 0"},{color:new h("#f8f702"),label:"Red: 248\nGreen: 247\nBlue: 2"},{color:new h("#9eff02"),label:"Red: 158\nGreen: 255\nBlue: 2"},{color:new h("#4ffe53"),label:"Red: 79\nGreen: 254\nBlue: 83"},{color:new h("#53feae"),label:"Red: 83\nGreen: 254\nBlue: 174"},{color:new h("#00fefc"),label:"Red: 0\nGreen: 254\nBlue: 252"},{color:new h("#54c4fd"),label:"Red: 84\nGreen: 196\nBlue: 253"},{color:new h("#508cfe"),label:"Red: 80\nGreen: 140\nBlue: 254"},{color:new h("#6262fd"),label:"Red: 98\nGreen: 98\nBlue: 253"},{color:new h("#ad51ff"),label:"Red: 173\nGreen: 81\nBlue: 255"},{color:new h("#fe41ff"),label:"Red: 254\nGreen: 65\nBlue: 255"},{color:new h("#fe53ae"),label:"Red: 254\nGreen: 83\nBlue: 174"},{color:new h("#737373"),label:"Red: 115\nGreen: 115\nBlue: 115"},{color:new h("#ff4143"),label:"Red: 255\nGreen: 65\nBlue: 67"},{color:new h("#ff5921"),label:"Red: 255\nGreen: 89\nBlue: 33"},{color:new h("#ff8300"),label:"Red: 255\nGreen: 131\nBlue: 0"},{color:new h("#f7b400"),label:"Red: 247\nGreen: 180\nBlue: 0"},{color:new h("#e6e801"),label:"Red: 230\nGreen: 232\nBlue: 1"},{color:new h("#93f600"),label:"Red: 147\nGreen: 246\nBlue: 0"},{color:new h("#01ff00"),label:"Red: 1\nGreen: 255\nBlue: 0"},{color:new h("#01ff83"),label:"Red: 1\nGreen: 255\nBlue: 131"},{color:new h("#00f6f5"),label:"Red: 0\nGreen: 246\nBlue: 245"},{color:new h("#42c6fe"),label:"Red: 66\nGreen: 198\nBlue: 254"},{color:new h("#4284ff"),label:"Red: 66\nGreen: 132\nBlue: 255"},{color:new h("#5152ff"),label:"Red: 81\nGreen: 82\nBlue: 255"},{color:new h("#a542ff"),label:"Red: 165\nGreen: 66\nBlue: 255"},{color:new h("#ff21ff"),label:"Red: 255\nGreen: 33\nBlue: 255"},{color:new h("#ff42a4"),label:"Red: 255\nGreen: 66\nBlue: 164"},{color:new h("#636363"),label:"Red: 99\nGreen: 99\nBlue: 99"},{color:new h("#fe2121"),label:"Red: 254\nGreen: 33\nBlue: 33"},{color:new h("#ff4200"),label:"Red: 255\nGreen: 66\nBlue: 0"},{color:new h("#e47504"),label:"Red: 228\nGreen: 117\nBlue: 4"},{color:new h("#d49c00"),label:"Red: 212\nGreen: 156\nBlue: 0"},{color:new h("#c4c500"),label:"Red: 196\nGreen: 197\nBlue: 0"},{color:new h("#83d700"),label:"Red: 131\nGreen: 215\nBlue: 0"},{color:new h("#00e700"),label:"Red: 0\nGreen: 231\nBlue: 0"},{color:new h("#01e773"),label:"Red: 1\nGreen: 231\nBlue: 115"},{color:new h("#01d5d4"),label:"Red: 1\nGreen: 213\nBlue: 212"},{color:new h("#01adfd"),label:"Red: 1\nGreen: 173\nBlue: 253"},{color:new h("#3272ff"),label:"Red: 50\nGreen: 114\nBlue: 255"},{color:new h("#3030fe"),label:"Red: 48\nGreen: 48\nBlue: 254"},{color:new h("#9421fe"),label:"Red: 148\nGreen: 33\nBlue: 254"},{color:new h("#ff00fd"),label:"Red: 255\nGreen: 0\nBlue: 253"},{color:new h("#fa2193"),label:"Red: 250\nGreen: 33\nBlue: 147"},{color:new h("#525251"),label:"Red: 82\nGreen: 82\nBlue: 81"},{color:new h("#ff0102"),label:"Red: 255\nGreen: 1\nBlue: 2"},{color:new h("#e63801"),label:"Red: 230\nGreen: 56\nBlue: 1"},{color:new h("#d56b00"),label:"Red: 213\nGreen: 107\nBlue: 0"},{color:new h("#c69300"),label:"Red: 198\nGreen: 147\nBlue: 0"},{color:new h("#b5b500"),label:"Red: 181\nGreen: 181\nBlue: 0"},{color:new h("#74c500"),label:"Red: 116\nGreen: 197\nBlue: 0"},{color:new h("#00d601"),label:"Red: 0\nGreen: 214\nBlue: 1"},{color:new h("#00d66b"),label:"Red: 0\nGreen: 214\nBlue: 107"},{color:new h("#01c6c8"),label:"Red: 1\nGreen: 198\nBlue: 200"},{color:new h("#0094e6"),label:"Red: 0\nGreen: 148\nBlue: 230"},{color:new h("#0152ff"),label:"Red: 1\nGreen: 82\nBlue: 255"},{color:new h("#2020fe"),label:"Red: 32\nGreen: 32\nBlue: 254"},{color:new h("#8501fe"),label:"Red: 133\nGreen: 1\nBlue: 254"},{color:new h("#e600e6"),label:"Red: 230\nGreen: 0\nBlue: 230"},{color:new h("#ff0085"),label:"Red: 255\nGreen: 0\nBlue: 133"},{color:new h("#424242"),label:"Red: 66\nGreen: 66\nBlue: 66"},{color:new h("#e80103"),label:"Red: 232\nGreen: 1\nBlue: 3"},{color:new h("#c93103"),label:"Red: 201\nGreen: 49\nBlue: 3"},{color:new h("#b35a01"),label:"Red: 179\nGreen: 90\nBlue: 1"},{color:new h("#a57b00"),label:"Red: 165\nGreen: 123\nBlue: 0"},{color:new h("#a6a500"),label:"Red: 166\nGreen: 165\nBlue: 0"},{color:new h("#63a500"),label:"Red: 99\nGreen: 165\nBlue: 0"},{color:new h("#00b300"),label:"Red: 0\nGreen: 179\nBlue: 0"},{color:new h("#00b559"),label:"Red: 0\nGreen: 181\nBlue: 89"},{color:new h("#00a3a4"),label:"Red: 0\nGreen: 163\nBlue: 164"},{color:new h("#0084c5"),label:"Red: 0\nGreen: 132\nBlue: 197"},{color:new h("#024aea"),label:"Red: 2\nGreen: 74\nBlue: 234"},{color:new h("#0000ff"),label:"Red: 0\nGreen: 0\nBlue: 255"},{color:new h("#7000e6"),label:"Red: 112\nGreen: 0\nBlue: 230"},{color:new h("#c600c6"),label:"Red: 198\nGreen: 0\nBlue: 198"},{color:new h("#e60073"),label:"Red: 230\nGreen: 0\nBlue: 115"},{color:new h("#313031"),label:"Red: 49\nGreen: 48\nBlue: 49"},{color:new h("#c60001"),label:"Red: 198\nGreen: 0\nBlue: 1"},{color:new h("#a52801"),label:"Red: 165\nGreen: 40\nBlue: 1"},{color:new h("#a35202"),label:"Red: 163\nGreen: 82\nBlue: 2"},{color:new h("#926b00"),label:"Red: 146\nGreen: 107\nBlue: 0"},{color:new h("#929400"),label:"Red: 146\nGreen: 148\nBlue: 0"},{color:new h("#5a9400"),label:"Red: 90\nGreen: 148\nBlue: 0"},{color:new h("#00a404"),label:"Red: 0\nGreen: 164\nBlue: 4"},{color:new h("#00a450"),label:"Red: 0\nGreen: 164\nBlue: 80"},{color:new h("#00948f"),label:"Red: 0\nGreen: 148\nBlue: 143"},{color:new h("#026ba5"),label:"Red: 2\nGreen: 107\nBlue: 165"},{color:new h("#0041c6"),label:"Red: 0\nGreen: 65\nBlue: 198"},{color:new h("#0100d4"),label:"Red: 1\nGreen: 0\nBlue: 212"},{color:new h("#6200c6"),label:"Red: 98\nGreen: 0\nBlue: 198"},{color:new h("#a700a5"),label:"Red: 167\nGreen: 0\nBlue: 165"},{color:new h("#c40060"),label:"Red: 196\nGreen: 0\nBlue: 96"},{color:new h("#212121"),label:"Red: 33\nGreen: 33\nBlue: 33"},{color:new h("#920000"),label:"Red: 146\nGreen: 0\nBlue: 0"},{color:new h("#942100"),label:"Red: 148\nGreen: 33\nBlue: 0"},{color:new h("#844200"),label:"Red: 132\nGreen: 66\nBlue: 0"},{color:new h("#836400"),label:"Red: 131\nGreen: 100\nBlue: 0"},{color:new h("#717201"),label:"Red: 113\nGreen: 114\nBlue: 1"},{color:new h("#528401"),label:"Red: 82\nGreen: 132\nBlue: 1"},{color:new h("#008500"),label:"Red: 0\nGreen: 133\nBlue: 0"},{color:new h("#018443"),label:"Red: 1\nGreen: 132\nBlue: 67"},{color:new h("#008485"),label:"Red: 0\nGreen: 132\nBlue: 133"},{color:new h("#036494"),label:"Red: 3\nGreen: 100\nBlue: 148"},{color:new h("#003193"),label:"Red: 0\nGreen: 49\nBlue: 147"},{color:new h("#0000a6"),label:"Red: 0\nGreen: 0\nBlue: 166"},{color:new h("#490094"),label:"Red: 73\nGreen: 0\nBlue: 148"},{color:new h("#910091"),label:"Red: 145\nGreen: 0\nBlue: 145"},{color:new h("#95014c"),label:"Red: 149\nGreen: 1\nBlue: 76"},{color:new h("#101010"),label:"Red: 16\nGreen: 16\nBlue: 16"},{color:new h("#730000"),label:"Red: 115\nGreen: 0\nBlue: 0"},{color:new h("#731800"),label:"Red: 115\nGreen: 24\nBlue: 0"},{color:new h("#623002"),label:"Red: 98\nGreen: 48\nBlue: 2"},{color:new h("#634a01"),label:"Red: 99\nGreen: 74\nBlue: 1"},{color:new h("#636401"),label:"Red: 99\nGreen: 100\nBlue: 1"},{color:new h("#3a6300"),label:"Red: 58\nGreen: 99\nBlue: 0"},{color:new h("#006100"),label:"Red: 0\nGreen: 97\nBlue: 0"},{color:new h("#006232"),label:"Red: 0\nGreen: 98\nBlue: 50"},{color:new h("#026365"),label:"Red: 2\nGreen: 99\nBlue: 101"},{color:new h("#004871"),label:"Red: 0\nGreen: 72\nBlue: 113"},{color:new h("#012173"),label:"Red: 1\nGreen: 33\nBlue: 115"},{color:new h("#000085"),label:"Red: 0\nGreen: 0\nBlue: 133"},{color:new h("#380171"),label:"Red: 56\nGreen: 1\nBlue: 113"},{color:new h("#720073"),label:"Red: 114\nGreen: 0\nBlue: 115"},{color:new h("#730038"),label:"Red: 115\nGreen: 0\nBlue: 56"},{color:new h("#000000"),label:"Red: 0\nGreen: 0\nBlue: 0"},{color:new h("#520000"),label:"Red: 82\nGreen: 0\nBlue: 0"},{color:new h("#521000"),label:"Red: 82\nGreen: 16\nBlue: 0"},{color:new h("#512700"),label:"Red: 81\nGreen: 39\nBlue: 0"},{color:new h("#4f3800"),label:"Red: 79\nGreen: 56\nBlue: 0"},{color:new h("#535203"),label:"Red: 83\nGreen: 82\nBlue: 3"},{color:new h("#315200"),label:"Red: 49\nGreen: 82\nBlue: 0"},{color:new h("#005100"),label:"Red: 0\nGreen: 81\nBlue: 0"},{color:new h("#005026"),label:"Red: 0\nGreen: 80\nBlue: 38"},{color:new h("#014f51"),label:"Red: 1\nGreen: 79\nBlue: 81"},{color:new h("#003151"),label:"Red: 0\nGreen: 49\nBlue: 81"},{color:new h("#001954"),label:"Red: 0\nGreen: 25\nBlue: 84"},{color:new h("#000050"),label:"Red: 0\nGreen: 0\nBlue: 80"},{color:new h("#2c0054"),label:"Red: 44\nGreen: 0\nBlue: 84"},{color:new h("#530052"),label:"Red: 83\nGreen: 0\nBlue: 82"},{color:new h("#52012a"),label:"Red: 82\nGreen: 1\nBlue: 42"}],this.colorValue=n.observable(h.TRANSPARENT),this.popupColorValue=n.observable(h.TRANSPARENT),this.tooltipOpen=e=>{this.tooltipManager?.tooltipOpen(e)},this.tooltipClose=e=>{this.tooltipManager?.tooltipClose(e)},this.onTestConnection=(e,n,o)=>{s.DataAccessService.instance.logInfo("connectionManagementModule.onTestConnection - Send request to server - Start");try{this.isTestConnectionInProgress(!0);let n=this.getConnectionProperties();const o=new t.MessageBase;o.type=t.MessageName.testConnectionRequest;const i=new t.TestConnectionRequest;i.executionId=s.DataAccessService.instance.currentExecutionId,i.ownerUri=s.DataAccessService.instance.URI,i.windowUri=s.DataAccessService.instance.windowUri,i.profile=n,o.data=i;const a=e.target;a&&(a.classList.remove("oj-focus-highlight"),a.classList.remove("oj-focus"),a.blur()),
s.DataAccessService.instance.send(o),s.DataAccessService.instance.logInfo("connectionManagementModule.onTestConnection - Send request to server - Done")}catch(e){s.DataAccessService.instance.logInfo("connectionManagementModule.onTestConnection - Send request to server - Error"),this.isTestConnectionInProgress(!1),s.DataAccessService.instance.logError(e)}s.DataAccessService.instance.logInfo("connectionManagementModule.onTestConnection - Send request to server - End")},this.testConnectionButtonDisabled=n.computed((()=>this.isTestConnectionInProgress()||this.isConnectionInProgress()||!this.areAllPropertiesToCreateConnectionAvailable()),this),this.onFetchAIProfiles=(e,n,t)=>{this.fetchAIProfiles()},u=this,this.messageHandlers.set(t.MessageName.themeChanged,u.onThemeChanged),this.messageHandlers.set(t.MessageName.odtConfigChanged,u.onConfigChanged),this.messageHandlers.set(t.MessageName.clearPageEvent,u.onClearPageEvent),this.messageHandlers.set(t.MessageName.getProfileResponse,(e=>{this.handleGetProfileResponse(e)})),this.messageHandlers.set(t.MessageName.getConfigFileLocationsResponse,(e=>{this.handleGetTNSNamesLocationResponse(e)})),this.messageHandlers.set(t.MessageName.getTNSNamesResponse,(e=>{this.handleGetTNSNamesResponse(e)})),this.messageHandlers.set(t.MessageName.saveProfileResponse,(e=>{this.handleSaveProfileResponse(e)})),this.messageHandlers.set(t.MessageName.browseReponse,(e=>{this.handleBrowseResponse(e)})),this.messageHandlers.set(t.MessageName.getSchemasResponse,(e=>{this.handleGetSchemasResponse(e)})),this.messageHandlers.set(t.MessageName.getUserPreferencesRequest,(e=>{this.handlegetUserPreferencesResponse(e)})),this.messageHandlers.set(t.MessageName.connectionHelpResponse,(e=>{this.handleConnectionHelpResponse(e)})),this.messageHandlers.set(t.MessageName.getConnectionConfigSettingsResponse,(e=>{this.handleGetConnectionConfigSettingsResponse(e)})),this.messageHandlers.set(t.MessageName.testConnectionResponse,(e=>{this.handleTestConnectionResponse(e)})),this.messageHandlers.set(t.MessageName.getAIProfilesResponse,(e=>{this.handleGetAIProfilesResponse(e)})),s.DataAccessService.instance.subscribe((e=>{if(e&&this.messageHandlers.get(e.type)){const n=this.messageHandlers.get(e.type);n&&n(e)}else s.DataAccessService.instance.logError(`Could not find handler for message ${e.type}`)})),s.DataAccessService.instance.logInfo("Fetching Localized resources "),s.DataAccessService.instance.getLocalizedData().done((e=>{s.DataAccessService.instance.logInfo("Fetched localized resources."),a.LocalizedConstants.Instance.Configure(e),this.connInfoPlaceHolderTexts=new g,this.connectionUILabelTexts=new I})).fail((e=>{s.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))})),this.initialize(),c.setContrast(),e&&2==e.newConnectionUIToDisplay&&(this.uiLaunchedFromADBInstace=!0,this.userId("ADMIN"),this.tnsAdminLocation(e.path),this.walletFileLocation(e.path),this.enableWalletFile(!0),this.connectionType(e.connectionType),e.tnsName&&(this.tnsAliasFromTLSAuthentication=e.tnsName),e.connectionString&&e.connectionString.length>0&&this.ezConnectPlusString(e.connectionString),this.onConnectionTypeChanged(),this.uiHeaderText(a.LocalizedConstants.Instance.createADBConnectionCaption)),this.infoSignalFromConfig.add(((e,n)=>{this.handleInfoSignalFromConfig(e,n)}),this),this.tooltipManager=new w(this),this.tooltipManager.updateTooltipattributesForControls(),this.initializeConfigSettings()}handleConnectionHelpResponse(e){s.DataAccessService.instance.logInfo("Received HelpResponse");try{const n=e.data;n.result||(i.MessagesService.getinstance().ClearAll(),i.MessagesService.getinstance().ShowMessage(n.resultMsg)),s.DataAccessService.instance.logInfo(n.resultMsg)}catch(e){s.DataAccessService.instance.logError(e)}}computeConnectionName(){let e="",n=!1;switch(this.connectionType()){case t.ConnectionType.Basic:{let n=this.useProxyAuthentication()?this.proxyUserId():this.userId();e=this.getConnectionName(n,this.dbServiceName())}break;case t.ConnectionType.LDAPDirectoryServer:case t.ConnectionType.TNS:{let n=this.useProxyAuthentication()?this.proxyUserId():this.userId();e=this.getConnectionName(n,this.tnsAlias())}break;case t.ConnectionType.Advanced:e=this.useProxyAuthentication()?this.proxyUserId().trim():this.userId().trim(),n=!0;break;case t.ConnectionType.ODPConnectionString:e="Connection",n=!0}if(e){let o=e,s=1,i=!1,a=[];switch(this.profileConfigurationTarget()){case t.ConfigurationTarget.Global:a=this.existingUserProfiles;break;case t.ConfigurationTarget.Workspace:a=this.existingWorkspaceProfiles;break;case t.ConfigurationTarget.WorkspaceFolder:let e=this.existingFolderProfiles.find((e=>this.profileWorkspaceFolder()&&e.folderName===this.profileWorkspaceFolder().name&&e.workspaceFolder.index===this.profileWorkspaceFolder().index));e&&(a=e.profiles)}for(;!i;)a.indexOf(e)>-1||n?(e=o+"."+s++,n=!1):i=!0}return this.isCreate&&this.connectionNameParsed(e),e}getConnectionName(e,n){let t="",o=e.trim(),s=n.trim();return this.osAuthentication()||this.osProxyAuthentication()?t=this.osUser:o&&(t=o),s&&(t&&(t+="."),t+=s),t}areAllPropertiesToCreateConnectionAvailable(){let e=!1;switch(this.connectionType()){case t.ConnectionType.Basic:(this.dbHostName().trim()&&this.dbPortNum().trim()&&this.dbServiceName().trim()||this.isFailedToParseDS())&&this.isUserInfoEntered()&&this.connectionNameParsed().trim()&&(!this.useProxyAuthentication()||this.proxyUserId().trim())&&(e=!0);break;case t.ConnectionType.TNS:case t.ConnectionType.LDAPDirectoryServer:this.tnsAdminLocation().trim()&&this.tnsAlias().trim()&&this.isUserInfoEntered()&&(!this.enableWalletFile()||this.walletFileLocation().trim())&&this.connectionNameParsed().trim()&&(!this.useProxyAuthentication()||this.proxyUserId().trim())&&(e=!0);break;case t.ConnectionType.ODPConnectionString:this.odpnetConnString().trim()&&this.connectionNameParsed().trim()&&(e=!0);break;case t.ConnectionType.Advanced:this.ezConnectPlusString().trim()&&this.connectionNameParsed().trim()&&this.isUserInfoEntered()&&(e=!0)}return e}isUserInfoEntered(){return!(!this.userId().trim()||!(this.password()||this.osAuthentication()||this.useProxyAuthentication())||this.useProxyAuthentication()&&!this.proxyUserId().trim()||this.useProxyAuthentication()&&!this.proxyPassword()&&!this.osProxyAuthentication())}get messagesDataprovider(){return i.MessagesService.getinstance().messagesDataproviderField}onConnectionTypeChanged(){if(!this.updatingUi&&this.connectionType())switch(this.tooltipManager?.updateTooltipattributesForControls(),this.connectionType()){case t.ConnectionType.Basic:break;case t.ConnectionType.LDAPDirectoryServer:case t.ConnectionType.TNS:this.tnsAdminLocation()?this.getTNSNames(this.tnsAdminLocation()):this.getTNSLocations();case t.ConnectionType.Advanced:case t.ConnectionType.ODPConnectionString:}}getTNSLocations(){const e=new t.MessageBase;e.type=t.MessageName.getConfigFileLocationsRequest;const n=new t.GetConfigFileLocationsRequest;n.executionId=s.DataAccessService.instance.currentExecutionId,n.ownerUri=s.DataAccessService.instance.URI,n.windowUri=s.DataAccessService.instance.windowUri,n.configurationTarget=this.profileConfigurationTarget(),n.workspaceFolder=this.profileWorkspaceFolder(),e.data=n;try{s.DataAccessService.instance.send(e),s.DataAccessService.instance.logInfo("Successfully placed GetConfigFileLocationsRequest")}catch(e){s.DataAccessService.instance.logError(e)}}handleGetTNSNamesLocationResponse(e){s.DataAccessService.instance.logInfo("Received GetConfigFileLocationsResponse"),this.tnsAdminLocation(""),this.tnsAliases.removeAll(),this.isCreate&&this.tnsAlias("");try{const n=e.data;n.tnsLocation?this.tnsAdminLocation(n.tnsLocation):this.isCreate&&this.userPreferences&&this.userPreferences.connectionProperties&&this.userPreferences.connectionProperties.tnsAdminLocation&&this.tnsAdminLocation(this.userPreferences.connectionProperties.tnsAdminLocation),this.tnsAdminLocation()&&this.getTNSNames(this.tnsAdminLocation()),n.walletLocation?this.walletFileLocation(n.walletLocation):this.isCreate&&this.userPreferences&&this.userPreferences.connectionProperties&&this.userPreferences.connectionProperties.walletFileLocation&&this.walletFileLocation(this.userPreferences.connectionProperties.walletFileLocation)}catch(e){s.DataAccessService.instance.logError(e)}}getTNSNames(e){if(e){const n=new t.MessageBase;n.type=t.MessageName.getTNSNamesRequest;const o=new t.GetTNSNamesRequest;o.executionId=s.DataAccessService.instance.currentExecutionId,o.ownerUri=s.DataAccessService.instance.URI,o.windowUri=s.DataAccessService.instance.windowUri,o.location=e,n.data=o;try{s.DataAccessService.instance.send(n),s.DataAccessService.instance.logInfo("Successfully placed getTNSNamesRequest ")}catch(e){s.DataAccessService.instance.logError(e)}}}handleGetTNSNamesResponse(e){s.DataAccessService.instance.logInfo("Received GetTNSNamesResponse"),this.tnsAliases.removeAll(),this.isCreate&&this.tnsAlias("");try{const n=e.data;if(n.tnsnames&&n.tnsnames.length>0){for(let e=0;e<n.tnsnames.length;e++)this.tnsAliases.push({value:n.tnsnames[e],label:n.tnsnames[e]});this.tnsAliasFromTLSAuthentication&&this.tnsAliasFromTLSAuthentication.length>0?this.tnsAlias(this.tnsAliasFromTLSAuthentication):!this.isCreate&&this.profile&&this.profile.dataSource&&this.connectionType()===this.profile.connectionType?this.tnsAlias(this.profile.dataSource):this.isCreate&&this.userPreferences&&this.userPreferences.connectionProperties&&this.userPreferences.connectionProperties.tnsAdminLocation&&this.userPreferences.connectionProperties.tnsAdminLocation===this.tnsAdminLocation()&&this.userPreferences.connectionProperties.tnsAlias&&-1!==n.tnsnames.indexOf(this.userPreferences.connectionProperties.tnsAlias)?this.tnsAlias(this.userPreferences.connectionProperties.tnsAlias):this.tnsAlias(n.tnsnames[0])}}catch(e){s.DataAccessService.instance.logError(e)}}compareProfiles(e,n){if(!e||!n)return[!1,!1,!1,!1];let o=e.name!==n.name,s=e.currentSchema!==n.currentSchema,i=e.addSettingsScopeToConnectionName!==n.addSettingsScopeToConnectionName||e.addCurrentSchemaToConnectionName!==n.addCurrentSchemaToConnectionName||e.color!==n.color,a=!1;switch(this.connectionType()){case t.ConnectionType.Basic:a=e.databaseHostName!==n.databaseHostName||e.databasePortNumber!==n.databasePortNumber||e.databaseServiceName!==n.databaseServiceName||e.dataSource!==n.dataSource||e.loginScript!==n.loginScript||e.defaultAIProfile!==n.defaultAIProfile||e.dBAPrivilege!==n.dBAPrivilege||e.proxyUserID!==n.proxyUserID||!this.isPasswordEqual(e.proxyPassword,n.proxyPassword)||e.passwordSaved!==n.passwordSaved||e.userID!==n.userID||!this.isPasswordEqual(e.password,n.password);break;case t.ConnectionType.TNS:case t.ConnectionType.LDAPDirectoryServer:a=e.tnsAdmin!==n.tnsAdmin||e.dataSource!==n.dataSource||e.walletLocation!==n.walletLocation||e.loginScript!==n.loginScript||e.defaultAIProfile!==n.defaultAIProfile||e.dBAPrivilege!==n.dBAPrivilege||e.proxyUserID!==n.proxyUserID||!this.isPasswordEqual(e.proxyPassword,n.proxyPassword)||e.passwordSaved!==n.passwordSaved||e.userID!==n.userID||!this.isPasswordEqual(e.password,n.password);break;case t.ConnectionType.Advanced:a=e.dataSource!==n.dataSource||e.dBAPrivilege!==n.dBAPrivilege||e.proxyUserID!==n.proxyUserID||e.loginScript!==n.loginScript||e.defaultAIProfile!==n.defaultAIProfile||!this.isPasswordEqual(e.proxyPassword,n.proxyPassword)||e.passwordSaved!==n.passwordSaved||e.userID!==n.userID||!this.isPasswordEqual(e.password,n.password);break;case t.ConnectionType.ODPConnectionString:a=e.connectionString!==n.connectionString}return[o,s,a,i]}isPasswordEqual(e,n){let t=!0;if(e&&n){for(let o=0;o<e.length;o++)if(e[o]!==n[o]){t=!1;break}e.length!=n.length&&(t=!1)}else(!n&&e||n&&!e)&&(t=!1);return t}getSchemas(e){this.currentSchemas.removeAll(),this.isFetchSchemasInProgress(!0);const n=new t.MessageBase;n.type=t.MessageName.getSchemasRequest;const o=new t.GetSchemasRequest;o.executionId=s.DataAccessService.instance.currentExecutionId,o.ownerUri=s.DataAccessService.instance.URI,o.windowUri=s.DataAccessService.instance.windowUri,o.profile=e,n.data=o;try{s.DataAccessService.instance.send(n),s.DataAccessService.instance.logInfo("Successfully placed getSchemas request ")}catch(e){this.isFetchSchemasInProgress(!1),s.DataAccessService.instance.logError(e)}}handleGetSchemasResponse(e){s.DataAccessService.instance.logInfo("Received GetSchemasResponse");try{const n=e.data;if(n.result&&this.lastSchemasFetchInfo&&(this.lastSchemasFetchInfo[1]=!0),n.schemas&&n.schemas.length>0){this.currentSchemasList=n.schemas;for(let e=0;e<n.schemas.length;e++)this.currentSchemas.push({value:n.schemas[e],label:n.schemas[e]});let e=this.lastSchemasFetchInfo?this.lastSchemasFetchInfo[0].currentSchema:void 0;!e&&n.schemas.length>0&&(this.authenticationType()!==T.AdminSYSDBA&&this.authenticationType()!==T.AdminSYSOPER||(e=m.strSYS),!e&&n.userIdUsedToConnect&&(e=n.userIdUsedToConnect),!e&&this.lastSchemasFetchInfo&&(e=this.lastSchemasFetchInfo[0].userID),e&&(e=this.convertToOracleCase(e),e.length>2&&e.startsWith('"')&&e.endsWith('"')&&(e=e.substring(1,e.length-1)))),e&&n.schemas&&-1!==n.schemas.indexOf(e)?this.currentSchema(e):n.schemas.length>0&&this.currentSchema(n.schemas[0])}}catch(e){s.DataAccessService.instance.logError(e)}finally{this.isFetchSchemasInProgress(!1)}}onBrowse(e,n){const o=new t.MessageBase;o.type=t.MessageName.browseRequest;const i=new t.BrowseRequest;i.executionId=s.DataAccessService.instance.currentExecutionId,i.ownerUri=s.DataAccessService.instance.URI,i.windowUri=s.DataAccessService.instance.windowUri,i.path=n,i.browseItem=e,o.data=i;try{s.DataAccessService.instance.send(o),s.DataAccessService.instance.logInfo("Successfully placed BrowseRequest")}catch(e){s.DataAccessService.instance.logError(e)}}handleBrowseResponse(e){s.DataAccessService.instance.logInfo("Received BrowseResponse");try{const n=e.data;if(n&&n.browseItem&&n.path)switch(n.browseItem){case t.BrowseItem.TnsLocation:this.tnsAdminLocation(n.path);break;case t.BrowseItem.WalletLocation:this.walletFileLocation(n.path);break;case t.BrowseItem.LoginScript:this.loginScript(n.path)}}catch(e){s.DataAccessService.instance.logError(e)}}getConnectionProperties(){let e={};if(this.connectionType()!==t.ConnectionType.ODPConnectionString){switch(this.authenticationType()){case T.NonAdmin:e.authenticationType=t.ConnectionAuthenticationType.NonAdmin,e.dBAPrivilege=m.strNone;break;case T.AdminSYSDBA:e.authenticationType=t.ConnectionAuthenticationType.Admin,e.dBAPrivilege=m.strSYSDBA;break;case T.AdminSYSOPER:e.authenticationType=t.ConnectionAuthenticationType.Admin,e.dBAPrivilege=m.strSYSOPER}e.userID=this.convertToOracleCase(this.userId().trim()),e.passwordSaved=this.savePassword(),this.zStore&&this.zStore.length>0&&(e.passwordStore=this.zStore),"/"!==e.userID&&(e.password=c.toCodePointArray(this.password())),this.useProxyAuthentication()&&(e.password&&(e.proxyAuthByPassword=!0),e.password=c.toCodePointArray(this.password()),e.proxyUserID=this.convertToOracleCase(this.proxyUserId().trim()),"/"!==e.proxyUserID&&(e.proxyPassword=c.toCodePointArray(this.proxyPassword())))}switch(this.connectionType()){case t.ConnectionType.Basic:if(e.dataSource=this.ezConnectString().trim(),e.connectionType=t.ConnectionType.Basic,e.databaseHostName=this.dbHostName().trim(),e.databasePortNumber=this.dbPortNum().trim(),e.databaseServiceName=this.dbServiceName().trim(),this.tnsAdminLocation()&&this.tnsAdminLocation().length>0)(o=this.tnsAdminLocation().trim())&&(e.tnsAdmin=o);break;case t.ConnectionType.LDAPDirectoryServer:e.dataSource=this.tnsAlias().trim(),e.connectionType=t.ConnectionType.LDAPDirectoryServer,e.tnsAdmin=this.tnsAdminLocation().trim(),this.enableWalletFile()?(e.walletLocation=this.walletFileLocation().trim(),this.enableConnCredsFromWalletFile()?e.useConnectionCredsFromWalletFile=!0:e.useConnectionCredsFromWalletFile=!1):e.useConnectionCredsFromWalletFile=!1;break;case t.ConnectionType.TNS:e.dataSource=this.tnsAlias().trim(),e.connectionType=this.connectionType(),e.tnsAdmin=this.tnsAdminLocation().trim(),this.enableWalletFile()?(e.walletLocation=this.walletFileLocation().trim(),this.enableConnCredsFromWalletFile()?e.useConnectionCredsFromWalletFile=!0:e.useConnectionCredsFromWalletFile=!1):e.useConnectionCredsFromWalletFile=!1;break;case t.ConnectionType.Advanced:if(e.dataSource=this.ezConnectPlusString().trim(),e.connectionType=t.ConnectionType.Advanced,this.tnsAdminLocation()&&this.tnsAdminLocation().length>0)(o=this.tnsAdminLocation().trim())&&(e.tnsAdmin=o);if(this.walletFileLocation()&&this.walletFileLocation().length>0){var n=this.walletFileLocation().trim();n&&(e.walletLocation=n)}break;case t.ConnectionType.ODPConnectionString:var o;if(e.connectionString=this.odpnetConnString().trim(),e.connectionType=t.ConnectionType.ODPConnectionString,this.tnsAdminLocation()&&this.tnsAdminLocation().length>0)(o=this.tnsAdminLocation().trim())&&(e.tnsAdmin=o)}if(e.name=this.connectionNameParsed().trim(),this.loginScript()&&(e.loginScript=this.loginScript().trim()),this.colorValue()&&(e.color=this.RGBtoHex(this.colorValue())),e.currentSchema=this.currentSchema()?this.currentSchema().trim():"",e.configurationTarget=this.profileConfigurationTarget(),e.workspaceFolder=this.profileWorkspaceFolder(),e.addSettingsScopeToConnectionName=this.showScopeWithConnName(),e.addCurrentSchemaToConnectionName=this.showSchemaWithConnName(),this.collectionFilters&&(e.filters=this.collectionFilters),this.defaultAIProfile()&&!this.aiProfilesUnavailable&&(e.defaultAIProfile=this.defaultAIProfile().trim()),this.isCreate)switch(this.connectionType()){case t.ConnectionType.Basic:e.useCompatibleNamesDirectoryPath=!0;break;case t.ConnectionType.Advanced:e.useCompatibleNamesDirectoryPath=!0,this.walletFileLocation().trim()&&(e.walletLocation=this.walletFileLocation().trim());break;case t.ConnectionType.TNS:case t.ConnectionType.LDAPDirectoryServer:e.useCompatibleNamesDirectoryPath=!0}return e}RGBtoHex(e){return 0==e.getAlpha()?"none":this.componentToHex(e.getRed())+this.componentToHex(e.getGreen())+this.componentToHex(e.getBlue())}componentToHex(e){var n=e.toString(16);return 1==n.length?"0"+n:n}saveProfile(e){const n=new t.MessageBase;n.type=t.MessageName.saveProfileRequest;const o=new t.SaveProfileRequest;if(o.ownerUri=s.DataAccessService.instance.URI,o.executionId=s.DataAccessService.instance.currentExecutionId,this.isCreate)o.saveProfileType=t.SaveProfileType.create,o.setDefaultConnection=this.setasDefault();else{let[n,s,i,a]=this.compareProfiles(this.profile,e);n?(o.oldConnectionName=this.oldConnectionName,o.saveProfileType=s||i?t.SaveProfileType.renameAndUpdate:t.SaveProfileType.rename):o.saveProfileType=s||i?t.SaveProfileType.update:a?t.SaveProfileType.displayProperties:t.SaveProfileType.setDefConnection,this.isDefaultConnection!==this.setasDefault()&&(this.setasDefault()?o.setDefaultConnection=!0:o.unsetDefaultConnection=!0),a&&(o.displayPropsUpdated=!0)}o.windowUri=s.DataAccessService.instance.windowUri,o.documentUri=s.DataAccessService.instance.documentUri,o.profile=e,o.connectionUniqueId=this.updatingConnectionUniqueId,n.data=o;try{s.DataAccessService.instance.send(n),s.DataAccessService.instance.logInfo("Successfully placed SaveProfileRequest")}catch(e){s.DataAccessService.instance.logError(e)}}handleSaveProfileResponse(e){try{s.DataAccessService.instance.logInfo("Received SaveProfileResponse");const n=e.data;n&&n.result&&(this.isCreate?(this.userId(""),this.password(""),this.proxyUserId(""),this.proxyPassword(""),this.getAllProfileNames(),s.DataAccessService.instance.URI="",s.DataAccessService.instance.documentUri="",this.currentSchemas.removeAll(),this.currentSchema(""),this.lastSchemasFetchInfo=void 0,this.loginScript(""),this.savePasswordOptions.removeAll(),this.setasDefaultOptions.removeAll(),this.isDefaultConnection=this.setasDefault(),this.colorValue(h.TRANSPARENT),this.defaultAIProfile(""),this.aiProfiles.removeAll(),this.lastAIProfilesFetchInfo=void 0,this.aiProfilesUnavailable=!1):(this.oldConnectionName=n.profile.name,this.connectionNameParsed(""),this.getAllProfileNames(),this.updateUiFromProfile(n.profile,this.setasDefault()),this.udpateUIHeaderText(),this.createUpdateButtonDisabled(!1)))}catch(e){s.DataAccessService.instance.logError(e)}finally{this.isConnectionInProgress(!1)}s.DataAccessService.instance.logInfo("End creating or updating connection")}getAllProfileNames(){this.infoSignalToConfig.dispatch(p.configSignalType.Initilize,void 0)}copyToClipBoard(e){const n=document.createElement("textarea");n.value=e,document.body.appendChild(n),n.select(),document.execCommand("copy"),document.body.removeChild(n)}reInitialize(){this.loginScript(""),this.ezConnectPlusString(""),this.tnsAdminLocation(""),this.uiLaunchedFromADBInstace=!1,this.tnsAdminLocation(""),this.tnsAliases.removeAll(),this.tnsAlias(""),this.enableWalletFileOptions.removeAll(),this.enableConnCredsFromWalletFileOptions.removeAll(),this.walletFileLocation(""),this.odpnetConnString(""),this.authenticationType(T.NonAdmin),this.userId(""),this.password(""),this.proxyUserId(""),this.proxyPassword(""),this.savePasswordOptions.removeAll(),this.setasDefaultOptions.removeAll(),this.showMorePropsOptions.removeAll(),this.showSchemaOptions.removeAll(),this.showScopeOptions.removeAll(),this.computeConnectionName(),this.currentSchemas.removeAll(),this.currentSchemasList=[],this.currentSchema(""),this.lastSchemasFetchInfo=void 0,this.defaultAIProfile(""),this.aiProfiles.removeAll(),this.lastAIProfilesFetchInfo=void 0,this.aiProfilesUnavailable=!1}initialize(e=null){try{if(s.DataAccessService.instance.logInfo("Start initializing"),this.colorValue(h.TRANSPARENT),this.isCreate=e?e.isCreate:"true"===s.DataAccessService.instance.getElementValue("isCreate"),this.creatingNewConnection(this.isCreate),this.isCreate&&this.profileConfigurationTarget(t.ConfigurationTarget.Global),this.settingsConfig(r.createConfig({name:"configSettings",params:{infoSignalToConfig:this.infoSignalToConfig,infoSignalFromConfig:this.infoSignalFromConfig,editable:this.creatingNewConnection,profileConfigTarget:this.profileConfigurationTarget,profileWorkspaceFolder:this.profileWorkspaceFolder,fieldIdPrefix:"connection"}})),this.isCreate)this.reInitialize(),this.createUpdateButtonText(this.connectionUILabelTexts.createButtonLabel),this.dbPortNum(m.defaultDBPortNo),this.getUserPreferences(),this.profileConfigurationTarget(t.ConfigurationTarget.Global),this.profileWorkspaceFolder(void 0),this.showScopeWithConnName(!1),this.getConnectionConfigSettings();else{this.reInitialize();const n=e?e.profileName:s.DataAccessService.instance.getElementValue("profileName");this.createUpdateButtonText(this.connectionUILabelTexts.UpdateButtonLabel),this.getProfile(n),this.oldConnectionName=n}this.udpateUIHeaderText(),s.DataAccessService.instance.logInfo("End initializing")}catch(e){s.DataAccessService.instance.logError(e)}}getProfile(e){const n=new t.MessageBase;n.type=t.MessageName.getProfileRequest;const o=new t.GetProfileRequest;o.executionId=s.DataAccessService.instance.currentExecutionId,o.ownerUri=s.DataAccessService.instance.URI,o.profileName=e,o.windowUri=s.DataAccessService.instance.windowUri,o.configurationTarget=s.DataAccessService.instance.configurationTarget,o.workspaceFolder={uri:void 0,name:s.DataAccessService.instance.workspaceFolderName,index:s.DataAccessService.instance.workspaceFolderIndex},n.data=o;try{s.DataAccessService.instance.send(n),s.DataAccessService.instance.logInfo("Successfully placed GetProfileRequest")}catch(e){s.DataAccessService.instance.logError(e)}}handleGetProfileResponse(e){s.DataAccessService.instance.logInfo("Received GetProfileResponse");try{const n=e.data;let t=n.profile;t&&this.updateUiFromProfile(t,n.defaultConnection),this.updatingConnectionUniqueId=n.connectionUniqueId,this.isDefaultConnection=n.defaultConnection}catch(e){s.DataAccessService.instance.logError(e)}}updateUiFromProfile(e,n){try{switch(this.updatingUi=!0,this.isDefaultConnection=n,this.setasDefault(n),this.updateCurrentSchemaOnUpdatingUserId=this.isCreate||e.connectionType!==t.ConnectionType.ODPConnectionString&&e.userID===e.currentSchema,this.profileConfigurationTarget(e.configurationTarget),this.profileWorkspaceFolder(e.workspaceFolder),this.connectionType(e.connectionType),this.connectionNameParsed(e.name),e.currentSchema?this.currentSchemasList.indexOf(e.currentSchema)<0&&(this.currentSchemas.unshift({value:e.currentSchema,label:e.currentSchema}),this.currentSchema(e.currentSchema)):this.currentSchema(""),this.loginScript(e.loginScript),this.setExistingColor(e),e.connectionType){case t.ConnectionType.Basic:if(!e.dataSource||e.databaseHostName||e.databasePortNumber||e.databaseServiceName)this.dbHostName(e.databaseHostName),this.dbPortNum(e.databasePortNumber),this.dbServiceName(e.databaseServiceName);else{let n=e.dataSource,t=n.match("^([^:]+):([0-9]+)/(.*$)");t&&4===t.length?(s.DataAccessService.instance.logInfo("Datasource parsed successfully to 3 parts"),this.dbHostName(t[1]),this.dbPortNum(t[2]),this.dbServiceName(t[3])):(s.DataAccessService.instance.logInfo("Failed to parse Datasource to 3 parts"),this.updateConnDataSource=n,this.isFailedToParseDS(!0))}this.updateAuthenticationOptions(e),e.tnsAdmin&&e.tnsAdmin.length>0&&this.tnsAdminLocation(e.tnsAdmin);break;case t.ConnectionType.LDAPDirectoryServer:case t.ConnectionType.TNS:this.tnsAdminLocation(e.tnsAdmin),this.tnsAlias(e.dataSource),e.connectionType==t.ConnectionType.TNS&&this.getTNSNames(this.tnsAdminLocation()),this.updateAuthenticationOptions(e),e.walletLocation&&e.walletLocation.length>0?(this.enableWalletFile(!0),this.walletFileLocation(e.walletLocation),this.enableConnCredsFromWalletFile(e.useConnectionCredsFromWalletFile)):this.enableConnCredsFromWalletFile(!1);break;case t.ConnectionType.Advanced:this.ezConnectPlusString(e.dataSource),this.updateAuthenticationOptions(e),e.tnsAdmin&&e.tnsAdmin.length>0&&this.tnsAdminLocation(e.tnsAdmin),e.walletLocation&&e.walletLocation.length>0&&this.walletFileLocation(e.walletLocation);break;case t.ConnectionType.ODPConnectionString:this.odpnetConnString(e.connectionString),e.tnsAdmin&&e.tnsAdmin.length>0&&this.tnsAdminLocation(e.tnsAdmin)}this.defaultAIProfile(e.defaultAIProfile),e.defaultAIProfile&&this.fetchAIProfiles(),this.showScopeWithConnName(e.addSettingsScopeToConnectionName),this.showSchemaWithConnName(e.addCurrentSchemaToConnectionName),this.useProxyAuthentication()||this.currentSchema()||this.loginScript()||this.showSchemaWithConnName()||this.defaultAIProfile()?this.showMoreProps(!0):this.showMoreProps(!1),this.collectionFilters=e.filters,e.passwordStore&&(this.zStore=e.passwordStore),this.profile=this.getConnectionProperties(),this.createUpdateButtonForceUpdater.notifySubscribers()}catch(e){s.DataAccessService.instance.logError(e)}finally{this.updatingUi=!1}}setExistingColor(e){e&&e.color&&"none"!=e.color?this.colorValue(new h(e.color)):this.colorValue(h.TRANSPARENT)}updateAuthenticationOptions(e){e.authenticationType===t.ConnectionAuthenticationType.NonAdmin||e.dBAPrivilege===m.strNone?this.authenticationType(T.NonAdmin):e.dBAPrivilege===m.strSYSDBA?this.authenticationType(T.AdminSYSDBA):e.dBAPrivilege===m.strSYSOPER&&this.authenticationType(T.AdminSYSOPER),this.userId(e.userID),this.savePassword(e.passwordSaved),e.proxyUserID?(this.proxyUserId(e.proxyUserID),"/"!==e.userID.trim()&&e.proxyPassword&&this.proxyPassword(String.fromCodePoint(...e.proxyPassword)),e.password&&this.password(String.fromCodePoint(...e.password))):"/"!==e.userID.trim()&&e.password&&this.password(String.fromCodePoint(...e.password))}udpateUIHeaderText(){this.isCreate?this.uiHeaderText(this.connectionUILabelTexts.headerCreate):this.uiHeaderText(this.connectionUILabelTexts.headerUpdate+" '"+this.oldConnectionName+"'")}getUserPreferences(){const e=new t.MessageBase;e.type=t.MessageName.getUserPreferencesRequest;const n=new t.GetUserPreferencesRequest;n.executionId=s.DataAccessService.instance.currentExecutionId,n.ownerUri=s.DataAccessService.instance.URI,n.windowUri=s.DataAccessService.instance.windowUri,e.data=n;try{s.DataAccessService.instance.send(e),s.DataAccessService.instance.logInfo("Successfully placed GetUserPreferencesRequest")}catch(e){s.DataAccessService.instance.logError(e)}}handlegetUserPreferencesResponse(e){s.DataAccessService.instance.logInfo("Received GetUserPreferencesResponse");try{const n=e.data;if(n.result){let e=n.userPreferences;e&&e.connectionProperties&&(this.userPreferences=e,e.connectionProperties.databaseHostName&&this.dbHostName(e.connectionProperties.databaseHostName),e.connectionProperties.databasePortNumber&&this.dbPortNum(e.connectionProperties.databasePortNumber),e.connectionProperties.databaseServiceName&&this.dbServiceName(e.connectionProperties.databaseServiceName),e.connectionProperties.tnsAdminLocation&&e.connectionProperties.tnsAdminLocation===this.tnsAdminLocation()&&e.connectionProperties.tnsAlias&&this.tnsAlias(e.connectionProperties.tnsAlias),e.connectionProperties.useWalletFile&&!0===e.connectionProperties.useWalletFile?(this.enableWalletFile(!0),this.enableConnCredsFromWalletFile(e.connectionProperties.useConnCredsFromWalletFile)):this.enableConnCredsFromWalletFile(!1),e.connectionProperties.loginScript&&this.loginScript(e.connectionProperties.loginScript),e.connectionProperties.advancedConnectionString&&e.connectionProperties.advancedConnectionString.length>0&&(this.uiLaunchedFromADBInstace&&this.ezConnectPlusString&&this.ezConnectPlusString().length>0||this.ezConnectPlusString(e.connectionProperties.advancedConnectionString)),e.connectionProperties.odpnetConnectionString&&e.connectionProperties.odpnetConnectionString.length>0&&this.odpnetConnString(e.connectionProperties.odpnetConnectionString),0==this.uiLaunchedFromADBInstace&&e.connectionProperties.connectionType&&this.connectionType(e.connectionProperties.connectionType))}}catch(e){s.DataAccessService.instance.logError(e)}}get messageHandlers(){return this.messageHandlersField}set messageHandlers(e){this.messageHandlersField=e}onConfigChanged(e){const n=e.data;s.DataAccessService.instance.updatedConfig(n)}isDark(e){return!(e.themeName.toLowerCase().indexOf(C.customlightThemeFileName)>-1)}setStyleSheet(e,n){document.getElementById(e).setAttribute(C.href,n)}convertToOracleCase(e){let n=!1;return void 0!==e&&"string"==typeof e.valueOf()&&e.length>0&&(e.length>2&&e.startsWith('"')&&e.endsWith('"')&&(n=!0),!n)?e.toUpperCase():e}handleInfoSignalFromConfig(e,n){if(e===p.configSignalType.ProfileData){let e=n;this.existingUserProfiles=e.existingUserProfiles,this.existingWorkspaceProfiles=e.existingWorkspaceProfiles,this.existingFolderProfiles=e.existingFolderProfiles,this.osUser=e.osUser}else if(e===p.configSignalType.SaveConfirm){let e=n;e.promptToSave=!1,this.infoSignalToConfig.dispatch(p.configSignalType.SaveConfirm,e)}}initializeConfigSettings(){n.computed((()=>{this.currentConfigTarget=this.profileConfigurationTarget(),this.isCreate&&this.savePassword(this.savePwdGlobal);this.profileWorkspaceFolder();this.updateConnectionSettings(),this.tooltipManager?.updateTooltipattributesForControls()}),this),this.isCreate&&n.computed((()=>{let e=this.savePassword();this.savePwdGlobal=e}),this)}getConnectionConfigSettings(){const e=new t.MessageBase;e.type=t.MessageName.getConnectionConfigSettingsRequest;const n=new t.GetConnectionConfigSettingsRequest;n.ownerUri=s.DataAccessService.instance.URI,n.windowUri=s.DataAccessService.instance.windowUri,n.executionId=s.DataAccessService.instance.currentExecutionId,e.data=n;try{s.DataAccessService.instance.send(e),s.DataAccessService.instance.logInfo("Successfully placed getConnectionConfigSettings request")}catch(e){s.DataAccessService.instance.logError(e)}}handleGetConnectionConfigSettingsResponse(e){s.DataAccessService.instance.logInfo("Received GetConnectionConfigSettingsResponse");try{const n=e.data;n&&(this.connectionConfigSettings=n.connectionConfigSettings,this.updateConnectionSettings())
}catch(e){s.DataAccessService.instance.logError(e)}}updateConnectionSettings(){if(this.isCreate&&this.connectionConfigSettings){let e=this.profileConfigurationTarget(),n=this.profileWorkspaceFolder(),t=this.connectionConfigSettings.find((t=>t.configurationTarget===e&&(!t.workspaceFolder&&!n||t.workspaceFolder&&n&&t.workspaceFolder.name===n.name&&t.workspaceFolder.index===n.index)));t&&(this.uiLaunchedFromADBInstace||(this.tnsAdminLocation(t.tnsAdminLocation),this.walletFileLocation(t.walletFileLocation)),this.loginScript(t.loginScript))}}handleTestConnectionResponse(e){s.DataAccessService.instance.logInfo("connectionManagementModule.handleTestConnectionResponse - Start"),this.isTestConnectionInProgress(!1),s.DataAccessService.instance.logInfo("connectionManagementModule.handleTestConnectionResponse - End")}fetchAIProfiles(){try{if(this.isFetchAIProfilesInProgress())return;let e=this.areAllPropertiesToCreateConnectionAvailable();if(!e)return this.aiProfiles.removeAll(),void(this.lastAIProfilesFetchInfo=void 0);let n=this.getConnectionProperties();if(this.lastAIProfilesFetchInfo){let[t,o,s,i]=this.compareProfiles(this.lastSchemasFetchInfo[0],n);e=s}e&&(this.lastAIProfilesFetchInfo=[n,!1],this.getAIProfiles(n))}catch(e){s.DataAccessService.instance.logError(e)}}getAIProfiles(e){this.aiProfiles.removeAll(),this.isFetchAIProfilesInProgress(!0);const n=new t.MessageBase;n.type=t.MessageName.getAIProfilesRequest;const o=new t.GetAIProfilesRequest;o.executionId=s.DataAccessService.instance.currentExecutionId,o.ownerUri=s.DataAccessService.instance.URI,o.windowUri=s.DataAccessService.instance.windowUri,o.profile=e,n.data=o;try{s.DataAccessService.instance.send(n),s.DataAccessService.instance.logInfo("Successfully placed getAIProfiles request ")}catch(e){this.isFetchAIProfilesInProgress(!1),s.DataAccessService.instance.logError(e)}}handleGetAIProfilesResponse(e){s.DataAccessService.instance.logInfo("Received GetAIProfiles response");try{const n=e.data;if(n)if(n.success&&this.lastAIProfilesFetchInfo&&(this.lastAIProfilesFetchInfo[1]=!0),n.profiles&&n.profiles.length>0){n.profiles.sort();for(let e=0;e<n.profiles.length;e++)this.aiProfiles.push({value:n.profiles[e],label:n.profiles[e]});this.aiProfilesUnavailable=!1}else this.aiProfilesUnavailable=!0,this.aiProfiles([{value:this.connectionUILabelTexts.noAIProfilesText,label:this.connectionUILabelTexts.noAIProfilesText}]),this.defaultAIProfile("");else this.aiProfilesUnavailable=!0,this.aiProfiles([{value:this.connectionUILabelTexts.noAIProfilesText,label:this.connectionUILabelTexts.noAIProfilesText}]),this.defaultAIProfile("")}catch(e){s.DataAccessService.instance.logError(e)}finally{this.isFetchAIProfilesInProgress(!1)}}}m.defaultDBPortNo="1521",m.strYes="yes",m.strNone="None",m.strSYSDBA="SYSDBA",m.strSYSOPER="SYSOPER",m.strSYS="SYS",m.emptyString="";class C{}C.themeWhite="white",C.customlightThemeFileName="light",C.themeNameDark="black",C.customDarkThemeFileName="dark",C.href="href",function(e){e[e.NonAdmin=1]="NonAdmin",e[e.AdminSYSDBA=2]="AdminSYSDBA",e[e.AdminSYSOPER=3]="AdminSYSOPER"}(T||(T={}));class S{constructor(){this.connectionType=!1,this.dbHostName=!0,this.dbPortNum=!0,this.dbServiceName=!0,this.ezConnectString=!1,this.ezConnectPlusString=!0,this.tnsAdminLocation=!0,this.tnsAlias=!0,this.walletFileLocation=!0,this.odpnetConnString=!0,this.authenticationType=!1,this.userId=!0,this.password=!0,this.proxyUserId=!1,this.proxyPassword=!0,this.savePassword=!0,this.connectionName=!0,this.currentSchema=!1,this.loginScript=!1,this.colorValue=!1}}class g{constructor(){this.dbHostName=a.LocalizedConstants.Instance.connUIPlaceHolderDbHostName,this.dbPortNum=a.LocalizedConstants.Instance.connUIPlaceHolderDbPortNum,this.dbServiceName=a.LocalizedConstants.Instance.connUIPlaceHolderDbServiceName,this.ezConnectString=a.LocalizedConstants.Instance.connUIPlaceHolderEzConnectString,this.ezConnectPlusString=a.LocalizedConstants.Instance.connUIPlaceHolderEzConnectPlusString,this.tnsAdminLocation=a.LocalizedConstants.Instance.connUIPlaceHolderTnsAdminLocation,this.walletFileLocation=a.LocalizedConstants.Instance.connUIPlaceHolderWalletFileLocation,this.tnsAlias=a.LocalizedConstants.Instance.connUIPlaceHolderTnsAlias,this.odpnetConnString=a.LocalizedConstants.Instance.connUIPlaceHolderOdpnetConnString,this.userId=a.LocalizedConstants.Instance.connUIPlaceHolderUserId,this.connectionName=a.LocalizedConstants.Instance.connUIPlaceHolderConnectionName,this.proxyUserId=a.LocalizedConstants.Instance.connUIPlaceHolderProxyUserId,this.loginScript=a.LocalizedConstants.Instance.connUIPlaceHolderLoginScript}}class I{constructor(){this.headerCreate=a.LocalizedConstants.Instance.connUITextHeaderCreate,this.headerUpdate=a.LocalizedConstants.Instance.connUITextHeaderUpdate,this.connectionTypeEasyConnectToolTip=a.LocalizedConstants.Instance.connUITextConnectionTypeEasyConnectToolTip,this.connectionTypeTNSToolTip=a.LocalizedConstants.Instance.connUITextConnectionTypeTNSToolTip,this.connectionTypeEasyConnectPlusToolTip=a.LocalizedConstants.Instance.connUITextConnectionTypeEasyConnectPlusToolTip,this.connectionTypeODPConnectStringToolTip=a.LocalizedConstants.Instance.connUITextConnectionTypeODPConnectStringToolTip,this.connectionTypeLDAPDirectoryServerStringToolTip=a.LocalizedConstants.Instance.connUITextConnectionTypeLDAPDirectoryServerStringToolTip,this.connectionTypeEasyConnect=a.LocalizedConstants.Instance.connUITextConnectionTypeEasyConnect,this.connectionTypeTNS=a.LocalizedConstants.Instance.connUITextConnectionTypeTNS,this.connectionTypeEasyConnectPlus=a.LocalizedConstants.Instance.connUITextConnectionTypeEasyConnectPlus,this.connectionTypeODPConnectString=a.LocalizedConstants.Instance.connUITextConnectionTypeODPConnectString,this.connectionTypeLDAPDirectoryServerString=a.LocalizedConstants.Instance.connUITextConnectionTypeLDAPDirectoryServerString,this.connectionTypeLabel=a.LocalizedConstants.Instance.connUITextConnectionTypeLabel,this.dbHostNameLabel=a.LocalizedConstants.Instance.connUITextDbHostNameLabel,this.dbPortNumLabel=a.LocalizedConstants.Instance.connUITextDbPortNumLabel,this.dbServiceNameLabel=a.LocalizedConstants.Instance.connUITextDbServiceNameLabel,this.ezConnectStringLabel=a.LocalizedConstants.Instance.connUITextEzConnectStringLabel,this.ezConnectPlusStringLabel=a.LocalizedConstants.Instance.connUITextEzConnectPlusStringLabel,this.copyConnectionString=a.LocalizedConstants.Instance.connUITextCopyConnectionString,this.tnsAdminLocationLabel=a.LocalizedConstants.Instance.connUITextTnsAdminLocationLabel,this.browse=a.LocalizedConstants.Instance.connUITextBrowse,this.tnsAliasLabel=a.LocalizedConstants.Instance.connUITextTnsAliasLabel,this.enableWalletFileLocationLabel=a.LocalizedConstants.Instance.connUITextEnableWalletFileLocationLabel,this.enableConnCredsFromWalletFileLabel=a.LocalizedConstants.Instance.connUITextEnableConnCredsFromWalletFileLabel,this.walletFileLocationLabel=a.LocalizedConstants.Instance.connUITextWalletFileLocationLabel,this.odpnetConnStringLabel=a.LocalizedConstants.Instance.connUITextOdpnetConnStringLabel,this.authenticationTypeLabel=a.LocalizedConstants.Instance.connUITextAuthenticationTypeLabel,this.authTypeNonAdmin=a.LocalizedConstants.Instance.connUITextAuthTypeNonAdmin,this.authTypeAdminSysdba=a.LocalizedConstants.Instance.connUITextAuthTypeAdminSysdba,this.authTypeAdminSysoper=a.LocalizedConstants.Instance.connUITextAuthTypeAdminSysoper,this.connColorLabel=a.LocalizedConstants.Instance.connUITextColorLabel,this.userIdLabel=a.LocalizedConstants.Instance.connUITextUserIdLabel,this.proxyUserIdLabel=a.LocalizedConstants.Instance.connUITextProxyUserIdLabel,this.passwordLabel=a.LocalizedConstants.Instance.connUITextServerNameLabel,this.proxyPasswordLabel=a.LocalizedConstants.Instance.connUITextProxyServerNameLabel,this.savePasswordLabel=a.LocalizedConstants.Instance.connUITextSaveServerNameLabel,this.connectionNameLabel=a.LocalizedConstants.Instance.connUITextConnectionNameLabel,this.createButtonLabel=a.LocalizedConstants.Instance.connUITextCreateButtonLabel,this.UpdateButtonLabel=a.LocalizedConstants.Instance.connUITextUpdateButtonLabel,this.testConnButtonLabel=a.LocalizedConstants.Instance.connUITextTestConnButtonLabel,this.osAuthenticationLabel=a.LocalizedConstants.Instance.osAuthenticationLabel,this.currentSchemaLabel=a.LocalizedConstants.Instance.currentSchemaLabel,this.userLabel=a.LocalizedConstants.Instance.userLabel,this.proxyUserLabel=a.LocalizedConstants.Instance.proxyUserLabel,this.showMoreOptionsLabel=a.LocalizedConstants.Instance.showMoreOptionsLabel,this.requiredText=" *",this.loginScriptLabel=a.LocalizedConstants.Instance.connUITextLoginScriptLabel,this.helpLabel=a.LocalizedConstants.Instance.connUIHelpLabel,this.setasDefaultLabel=a.LocalizedConstants.Instance.setasDefaultConnection,this.settingsScopeLabel=a.LocalizedConstants.Instance.settingsScope,this.showWorkspaceWithConnectionName=a.LocalizedConstants.Instance.showWorkspaceWithConnectionName,this.showFolderNameWithConnectionName=a.LocalizedConstants.Instance.showFolderNameWithConnectionName,this.showSchemaNameWithConnectionName=a.LocalizedConstants.Instance.showSchemaNameWithConnectionName,this.noColorLabel=a.LocalizedConstants.Instance.noColor,this.selectionLabel=a.LocalizedConstants.Instance.selection,this.doneLabel=a.LocalizedConstants.Instance.done,this.noneBrowseLabel=a.LocalizedConstants.Instance.connUITextBrowse,this.noneLabel=a.LocalizedConstants.Instance.none,this.browseLabel=a.LocalizedConstants.Instance.connUITextBrowse,this.defaultAIProfileLabel=a.LocalizedConstants.Instance.connUITextDefaultAIProfileLabel,this.noAIProfilesText=a.LocalizedConstants.Instance.connUITextNoAIProfilesAvailable,this.connectionTypeToolTip=a.LocalizedConstants.Instance.connectionTypeToolTip,this.tnsAdminLocationToolTip=a.LocalizedConstants.Instance.tnsAdminLocationToolTip,this.tnsAdminLocationToolTipForLDAPConnection=a.LocalizedConstants.Instance.tnsAdminLocationToolTipForLDAPConnection,this.tnsAliasToolTip=a.LocalizedConstants.Instance.tnsAliasToolTip,this.tnsAliasToolTipForLDAPConnection=a.LocalizedConstants.Instance.tnsAliasToolTipForLDAPConnection,this.useWalletFileToolTip=a.LocalizedConstants.Instance.useWalletFileToolTip,this.useConnCredsFromWalletFileToolTip=a.LocalizedConstants.Instance.useConnCredsFromWalletFileToolTip,this.walletFileLocationToolTip=a.LocalizedConstants.Instance.walletFileLocationToolTip,this.roleToolTip=a.LocalizedConstants.Instance.roleToolTip,this.usernameToolTip=a.LocalizedConstants.Instance.usernameToolTip,this.passwordToolTip=a.LocalizedConstants.Instance.pdToolTip,this.savePasswordToolTip=a.LocalizedConstants.Instance.savePdToolTip,this.setAsDefaultConnectionToolTip=a.LocalizedConstants.Instance.setAsDefaultConnectionToolTip,this.connectionNameToolTip=a.LocalizedConstants.Instance.connectionNameToolTip,this.showMoreOptionsToolTip=a.LocalizedConstants.Instance.showMoreOptionsToolTip,this.proxyUsernameToolTip=a.LocalizedConstants.Instance.proxyUsernameToolTip,this.proxyPasswordToolTip=a.LocalizedConstants.Instance.proxyPdToolTip,this.currentSchemaToolTip=a.LocalizedConstants.Instance.currentSchemaToolTip,this.loginScriptToolTip=a.LocalizedConstants.Instance.loginScriptToolTip,this.databaseHostNameToolTip=a.LocalizedConstants.Instance.databaseHostNameToolTip,this.portNumberToolTip=a.LocalizedConstants.Instance.portNumberToolTip,this.serviceNameToolTip=a.LocalizedConstants.Instance.serviceNameToolTip,this.connectionStringToolTip=a.LocalizedConstants.Instance.connectionStringToolTip,this.copyConnectionStringToolTip=a.LocalizedConstants.Instance.copyConnectionStringToolTip,this.odpConnectionStringToolTip=a.LocalizedConstants.Instance.odpConnectionStringToolTip,this.advancedConnectionStringToolTip=a.LocalizedConstants.Instance.advancedConnectionStringToolTip,this.currentSchemaCheckBoxTooltip=a.LocalizedConstants.Instance.currentSchemaCheckBoxTooltip,this.savePasswordWorkspaceToolTip=a.LocalizedConstants.Instance.savePdWorkspaceToolTip,this.savePasswordFolderToolTip=a.LocalizedConstants.Instance.savePdFolderToolTip,this.connColorToolTip=a.LocalizedConstants.Instance.connColorToolTip,this.showWorkspaceWithConnectionNameToolTip=a.LocalizedConstants.Instance.showWorkspaceWithConnectionNameToolTip,this.showFolderNameWithConnectionNameToolTip=a.LocalizedConstants.Instance.showFolderNameWithConnectionNameToolTip,this.showSchemaNameWithConnectionNameToolTip=a.LocalizedConstants.Instance.showSchemaNameWithConnectionNameToolTip,this.defaultAIProfileTooltip=a.LocalizedConstants.Instance.defaultAIProfileTooltip}}class w{constructor(e){this.connectionModule=e,this.controlIDVsDescriptionMap=new Map,this.getTooltipForConnectionType=(e,n)=>{let o=n;return e===f.tnsAliasesLabelID?o=this.connectionModule.connectionType()==t.ConnectionType.TNS?this.connectionModule.connectionUILabelTexts.tnsAliasToolTip:this.connectionModule.connectionUILabelTexts.tnsAliasToolTipForLDAPConnection:e===f.tnsAdminLocationLabelID&&(o=this.connectionModule.connectionType()==t.ConnectionType.TNS?this.connectionModule.connectionUILabelTexts.tnsAdminLocationToolTip:this.connectionModule.connectionUILabelTexts.tnsAdminLocationToolTipForLDAPConnection),o},this.updateTooltipForSavePasswordField=(e,n)=>{let o=n;return this.connectionModule.profileConfigurationTarget()===t.ConfigurationTarget.Global||e!==f.savePdOptions&&e!==f.savePdOption||(this.connectionModule.profileConfigurationTarget()===t.ConfigurationTarget.Workspace?o=this.connectionModule.connectionUILabelTexts.savePasswordWorkspaceToolTip:this.connectionModule.profileConfigurationTarget()===t.ConfigurationTarget.WorkspaceFolder&&(o=this.connectionModule.connectionUILabelTexts.savePasswordFolderToolTip)),o},this.getToolTipDescription=e=>{let n;if(e==f.connectionType)switch(this.connectionModule.connectionType()){case t.ConnectionType.TNS:n=this.connectionModule.connectionUILabelTexts.connectionTypeTNSToolTip;break;case t.ConnectionType.Basic:n=this.connectionModule.connectionUILabelTexts.connectionTypeEasyConnectToolTip;break;case t.ConnectionType.Advanced:n=this.connectionModule.connectionUILabelTexts.connectionTypeEasyConnectPlusToolTip;break;case t.ConnectionType.ODPConnectionString:n=this.connectionModule.connectionUILabelTexts.connectionTypeODPConnectStringToolTip;break;case t.ConnectionType.LDAPDirectoryServer:n=this.connectionModule.connectionUILabelTexts.connectionTypeLDAPDirectoryServerStringToolTip}else e==f.authType?n=this.getComboBoxItemLabel(this.connectionModule.authenticationTypes(),this.connectionModule.authenticationType()):e==f.tnsAliasesID?n=this.connectionModule.tnsAlias():e==f.currentSchemas?n=this.connectionModule.currentSchema():e==f.aiProfiles&&(n=this.connectionModule.defaultAIProfile());return n},this.populateControlIDVsDescriptionMap=()=>{this.controlIDVsDescriptionMap.set(f.connectionType,{controlType:b.ComboBox,description:""}),this.controlIDVsDescriptionMap.set(f.authType,{controlType:b.ComboBox,description:""}),this.controlIDVsDescriptionMap.set(f.currentSchemas,{controlType:b.ComboBox,description:""}),this.controlIDVsDescriptionMap.set(f.aiProfiles,{controlType:b.ComboBox,description:""}),this.controlIDVsDescriptionMap.set(f.tnsAliasesID,{controlType:b.ComboBox,description:""}),this.controlIDVsDescriptionMap.set(f.conTypeLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.connectionTypeToolTip}),this.controlIDVsDescriptionMap.set(f.dbNameLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.databaseHostNameToolTip}),this.controlIDVsDescriptionMap.set(f.portNumLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.portNumberToolTip}),this.controlIDVsDescriptionMap.set(f.serviceNameLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.serviceNameToolTip}),this.controlIDVsDescriptionMap.set(f.ezConnectStringTextBoxLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.connectionStringToolTip}),this.controlIDVsDescriptionMap.set(f.tnsAdminLocationLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.tnsAdminLocationToolTip}),this.controlIDVsDescriptionMap.set(f.copyEasyConnectStringButtonID,{controlType:b.Button,description:this.connectionModule.connectionUILabelTexts.copyConnectionString}),this.controlIDVsDescriptionMap.set(f.walletFileLocationTextLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.walletFileLocationToolTip}),this.controlIDVsDescriptionMap.set(f.ezConnectPlusStringLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.advancedConnectionStringToolTip}),this.controlIDVsDescriptionMap.set(f.authenticationTypesLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.roleToolTip}),this.controlIDVsDescriptionMap.set(f.pdTextLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.passwordToolTip}),this.controlIDVsDescriptionMap.set(f.connectionName1LabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.connectionNameToolTip}),this.controlIDVsDescriptionMap.set(f.proxyUserNameLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.proxyUsernameToolTip}),this.controlIDVsDescriptionMap.set(f.proxyPdLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.proxyPasswordToolTip}),this.controlIDVsDescriptionMap.set(f.currentSchemasLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.currentSchemaToolTip}),this.controlIDVsDescriptionMap.set(f.loginScriptLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.loginScriptToolTip}),this.controlIDVsDescriptionMap.set(f.connectionName2LabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.connectionNameToolTip}),this.controlIDVsDescriptionMap.set(f.userNameTextLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.usernameToolTip}),this.controlIDVsDescriptionMap.set(f.odpConnectStringLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.odpConnectionStringToolTip}),this.controlIDVsDescriptionMap.set(f.tnsAliasesLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.tnsAliasToolTip}),this.controlIDVsDescriptionMap.set(f.aiProfileLabelID,{controlType:b.Label,description:this.connectionModule.connectionUILabelTexts.defaultAIProfileTooltip}),this.controlIDVsDescriptionMap.set(f.savePdOptions,{controlType:b.CheckBox,description:this.connectionModule.connectionUILabelTexts.savePasswordToolTip}),this.controlIDVsDescriptionMap.set(f.setasDefaultConn,{controlType:b.CheckBox,description:this.connectionModule.connectionUILabelTexts.setAsDefaultConnectionToolTip}),this.controlIDVsDescriptionMap.set(f.showMorePropsID,{controlType:b.CheckBox,description:this.connectionModule.connectionUILabelTexts.showMoreOptionsToolTip}),this.controlIDVsDescriptionMap.set(f.enableWalletOptions,{controlType:b.CheckBox,description:this.connectionModule.connectionUILabelTexts.useWalletFileToolTip}),this.controlIDVsDescriptionMap.set(f.enableConnCredsFromWalletOptions,{controlType:b.CheckBox,description:this.connectionModule.connectionUILabelTexts.useConnCredsFromWalletFileToolTip}),this.controlIDVsDescriptionMap.set(f.showSchemaOptions,{controlType:b.CheckBox,description:this.connectionModule.connectionUILabelTexts.showSchemaNameWithConnectionNameToolTip}),this.controlIDVsDescriptionMap.set(f.showScopeOption1,{controlType:b.CheckBox,description:this.connectionModule.connectionUILabelTexts.showWorkspaceWithConnectionNameToolTip}),this.controlIDVsDescriptionMap.set(f.showScopeOption3,{controlType:b.CheckBox,description:this.connectionModule.connectionUILabelTexts.showWorkspaceWithConnectionNameToolTip}),this.controlIDVsDescriptionMap.set(f.showScopeOption2,{controlType:b.CheckBox,description:this.connectionModule.connectionUILabelTexts.showFolderNameWithConnectionNameToolTip}),this.controlIDVsDescriptionMap.set(f.showScopeOption4,{controlType:b.CheckBox,description:this.connectionModule.connectionUILabelTexts.showFolderNameWithConnectionNameToolTip}),this.controlIDVsDescriptionMap.set(f.portNum,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.serviceName,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.odpConnectString,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.ezConnectStringTextBox,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.tnsAdminLocation,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.walletFileLocationText,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.userNameText,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.connectionName1,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.proxyUserName,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.loginScript,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.connectionName2,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.dbName,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.ldapServerTextID,{controlType:b.TextBox,description:""}),this.controlIDVsDescriptionMap.set(f.ezConnectPlusString,{controlType:b.TextArea,description:""}),this.controlIDVsDescriptionMap.set(f.connectionColorButton1,{controlType:b.Button,description:""}),this.controlIDVsDescriptionMap.set(f.connectionColorButton2,{controlType:b.Button,description:""})},this.tooltipOpen=e=>{this.connectionModule.tooltipDescription("");let n=e.currentTarget.id;n=this.getUpdatedControlID(n);let t=`${f.tooltipPopupPrefix}${n}`,o=`${f.tooltipContainerPrefix}${n}`;if(this.controlIDVsDescriptionMap.has(n)){let s=this.controlIDVsDescriptionMap.get(n);switch(s.controlType){case b.Label:this.connectionModule.tooltipDescription(this.getTooltipForConnectionType(n,s.description));break;case b.CheckBox:case b.ComboBoxItem:this.connectionModule.tooltipDescription(this.updateTooltipForSavePasswordField(n,s.description));break;case b.ComboBox:case b.Button:this.connectionModule.tooltipDescription(this.getToolTipDescription(n))}this.launchTooltip(t,o,e)}else{let s=document.getElementById(n);s&&s.value&&this.launchTooltip(t,o,e)}},this.launchTooltip=(e,n,t)=>{const o=document.getElementById(e);if(o){if(0==o.textContent.trim().length)return;o.setAttribute("data-hover","true"),o.position.of={x:t.pageX,y:t.pageY},setTimeout((()=>{"true"==o.getAttribute("data-hover")&&(o.isOpen()||o.open(n))}),400)}},this.tooltipClose=e=>{let n=e.currentTarget.id;n=this.getUpdatedControlID(n);let t=`${f.tooltipPopupPrefix}${n}`;f.tooltipContainerPrefix;const o=document.getElementById(t);o&&(o.setAttribute("data-hover","false"),o.isOpen()&&o.close())},this.populateControlIDVsDescriptionMap()}getComboBoxItemLabel(e,n){let t="";for(let o=0;o<e.length;o++){const s=e[o];if(s.value==n){t=s.label;break}}return t}updateTooltipattributesForControls(){d.getPageContext().getBusyContext().whenReady().then((()=>{let e;for(let[n,t]of this.controlIDVsDescriptionMap){if(t.controlType==b.ComboBoxItem)continue;e=t.controlType==b.Label?`${n}|label`:n;let o=document.getElementById(e);if(o){o.addEventListener("mouseenter",this.connectionModule.tooltipOpen),o.addEventListener("mouseleave",this.connectionModule.tooltipClose);let e=n,t=`${f.tooltipPopupPrefix}${e}`,s=document.getElementById(t);s.position={my:{horizontal:"start",vertical:"top"},offset:{x:7,y:8},at:{horizontal:"end",vertical:"bottom"},collision:"flipfit"},s.setAttribute("autoDismiss","focusLoss"),s.setAttribute("modality","modeless"),s.addEventListener("ojAnimateStart",this.connectionModule.startAnimationListener)}}}))}getUpdatedControlID(e){let n=e.lastIndexOf("|label");return n>=0&&(e=e.substring(0,n)),e}}return m}));