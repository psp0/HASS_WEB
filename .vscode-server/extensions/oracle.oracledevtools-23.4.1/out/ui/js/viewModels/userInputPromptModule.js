define(["require","exports","../common/models","../common/scriptExecutionModels","knockout","../common/dataAccessService","../common/messageService","../common/odtUtils","ojs/ojdialog","ojs/ojinputtext","ojs/ojlabel","ojs/ojlabelvalue"],(function(require,e,t,s,i,a,r,n){"use strict";return class{constructor(e){this.operationNameField=i.observable(s.OperationName.None),this.secure=i.observable(!0),this.mandatoryField=i.observable(!1),this.disableUserInputField=i.observable(!1),this.labelHintField=i.observable(""),this.valueField=i.observable(),this.promptTextField=i.observable(),this.validateUserInput=()=>{if(this.isUserInputValid=this.validate(),this.isUserInputValid){const e=this.PrepareDataForRequest(!1);a.DataAccessService.instance.sendUserInput(e),a.DataAccessService.instance.logInfo(`ValuesSentToServer ${s.UserInputParams.displayString(e)}`)}else r.MessagesService.getinstance().ShowMessage("Input is invalid.",t.Severity.error);return this.isUserInputValid},this.isDivFocused=!1,this.onKeyDown=e=>{if("Enter"==e.key){let e=document.getElementById("form-container"),t=document.getElementById("userInput");this.isDivFocused?(t.focus(),this.isDivFocused=!1):(e.tabIndex=0,e.focus(),e.tabIndex=-1,e.style.outline="none",this.isDivFocused=!0)}},this.handleInputFocus=e=>{this.isDivFocused=!1};this.inputArgs=e;let n=e.parameters.inputVariables?e.parameters.inputVariables[0]:void 0;e&&(e.isInputValid=this.validateUserInput,this.operationName=e.parameters.operationName,e.onOk=()=>this.validateUserInput(),e.onCancel=()=>{const e=this.PrepareDataForRequest(!0);return e.cancelScript=!0,a.DataAccessService.instance.sendUserInput(e),a.DataAccessService.instance.logInfo(`ValuesSentToServer ${s.UserInputParams.displayString(e)}`),!0}),n&&(this.promptText=n.promptText,this.value=n.value?n.value:"",this.isSecure=n.isPassword,this.mandatory=n.mandatory,this.mandatoryField.subscribe((e=>{this.labelHintField(e?"required":"")})))}get operationName(){return this.operationNameField()}set operationName(e){this.operationNameField(e)}validate(){return this.operationName===s.OperationName.UnsupportedCommandPrompt||this.operationName===s.OperationName.PromptConnectionReconnect||!(this.mandatory&&!this.value)}PrepareDataForRequest(e){let t,i=new s.UserInputParams;return i.queryId=this.inputArgs.parameters.queryId,i.ownerUri=this.inputArgs.parameters.ownerUri,i.executionId=this.inputArgs.parameters.executionId,i.inputVariables=this.inputArgs.parameters.inputVariables,t=this.inputArgs.parameters.operationName==s.OperationName.Password?n.ODTUtils.toCodePointArray(this.value):this.operationName===s.OperationName.UnsupportedCommandPrompt||(this.operationName===s.OperationName.PromptConnectionReconnect?!e:this.value),i.inputVariables[0].value=t,i}get disableUserInput(){return this.disableUserInputField()}set disableUserInput(e){this.disableUserInputField(e)}get mandatory(){return this.mandatoryField()}set mandatory(e){this.mandatoryField(e)}get isSecure(){return this.secure()}set isSecure(e){this.secure(e)}get value(){return this.valueField()}set value(e){this.valueField(e)}get promptText(){return this.promptTextField()}set promptText(e){this.promptTextField(e)}}}));