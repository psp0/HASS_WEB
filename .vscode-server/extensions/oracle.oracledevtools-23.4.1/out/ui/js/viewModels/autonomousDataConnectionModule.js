define(["require","exports","knockout","../common/scriptExecutionModels","../common/dataAccessService","../common/localizedConstants","../common/autonomousDBModels","../common/messageService","ojs/ojcore","ojs/ojcheckboxset","jquery","ojs/ojtreeview","ojs/ojarraytreedataprovider","ojs/ojbutton","ojs/ojknockout","ojs/ojinputtext","ojs/ojlabel","ojs/ojprogress","ojs/ojformlayout","ojs/ojselectcombobox","ojs/ojmessage","ojs/ojmessages","ojs/ojnavigationlist","ojs/ojcollapsible","ojs/ojlabelvalue","ojs/ojdialog","ojs/ojprogress-circle"],(function(require,e,n,t,i,a,s,o){"use strict";let c;class l{constructor(){this.pswdPattern=a.LocalizedConstants.Instance.pswdPatternForDownloadWalletFile,this.pswdMismatch=a.LocalizedConstants.Instance.pswdMismatch,this.walletFileLocation=a.LocalizedConstants.Instance.connUIPlaceHolderWalletFileLocation,this.tnsAdminLocation=a.LocalizedConstants.Instance.connUIPlaceHolderTnsAdminLocation,this.browse=a.LocalizedConstants.Instance.connUITextBrowse,this.ociReplaceExistingFiles=a.LocalizedConstants.Instance.ociReplaceExistingFiles,this.ociSkipExistingFiles=a.LocalizedConstants.Instance.ociSkipExistingFiles,this.ociCancel=a.LocalizedConstants.Instance.cancelQueryText,this.ociCopyCredentialsFileHeading=a.LocalizedConstants.Instance.ociCopyCredentialsFileHeading,this.ociFileAlreadtExists=a.LocalizedConstants.Instance.ociFileAlreadyExists,this.ociFilePath=a.LocalizedConstants.Instance.ociFilePath,this.ociOK=a.LocalizedConstants.Instance.OK,this.downloadWalletFileCheckboxLabel=a.LocalizedConstants.Instance.downloadWalletFileCheckboxLabel,this.downloadCredentialFile=a.LocalizedConstants.Instance.downloadCredentialFile,this.useDefaultDBFileName=a.LocalizedConstants.Instance.appendDatabaseName,this.downLoad=a.LocalizedConstants.Instance.download,this.walletType=a.LocalizedConstants.Instance.walletType,this.password=a.LocalizedConstants.Instance.pswdStr,this.requiredText="*",this.confirmpassword=a.LocalizedConstants.Instance.confirmPswd,this.specifyPassword=a.LocalizedConstants.Instance.specifyPd,this.createADBConnectionCaption=a.LocalizedConstants.Instance.downloadCredentialFileForConnection}}return class{constructor(){this.adbConnectionUILabelTexts=new l,this.newConnectionUIToDisplay=n.observable(s.NewConnectionUIToDisplay.DownloadWalletfileWhileMakingConnection),this.walletFileLocation=n.observable(""),this.connectionType=n.observable(t.ConnectionType.TNS),this.connectionString=n.observable(""),this.isDedicatedDB=n.observable(!1),this.messageHandlersField=new Map,this.launchDBConnectionHandler=(e,n)=>{this.connectionType(e),this.newConnectionUIToDisplay(s.NewConnectionUIToDisplay.NormalDB),this.connectionString(n),this.walletFileLocation("system")},this.updateWalletFilePathHandler=e=>{this.walletFileLocation(e)},this.launchDBConnectionPageHandler=e=>{this.newConnectionUIToDisplay(e),this.connectionType(t.ConnectionType.TNS)},this.tnsName="",this.tlsEnabledNMutualAuthentication=!1,this.launchDownLoadCredentialFilesUIHandler=(e,n)=>{this.tnsName=e,this.tlsEnabledNMutualAuthentication=!0,this.newConnectionUIToDisplay(n)},this.reInitializeDownLoadCredentialsPage=e=>{this.reInitializeDownLoadCredentialsPageHandler=e},this.reInitializeConnectionStringPage=e=>{this.reInitializeConnectionStringPageHandler=e},this.themeFileId="ThemeCss",this.themeColorFileId="ThemeColor",this.customThemeTag="customTheme",this.createADBConnectionCaption=a.LocalizedConstants.Instance.downloadCredentialFileForConnection,this.pageinitialized=!1,this.onClearPageEvent=e=>{try{i.DataAccessService.instance.logInfo("OnclearPageEvent:"+JSON.stringify(e));const n=e.data;this.handleClearEvent(n)}catch(e){i.DataAccessService.instance.logError(e),o.MessagesService.getinstance().ShowMessage(a.LocalizedConstants.Instance.unableToClear)}},this.handleClearEvent=e=>{try{i.DataAccessService.instance.walletLocation=e.walletLocation,i.DataAccessService.instance.isDedicatedDb=e.isDedicatedDb,i.DataAccessService.instance.displayMode=e.displayMode,i.DataAccessService.instance.tlsAuthenticationType=e.tlsAuthenticationType,i.DataAccessService.instance.profileName=e.profileName,i.DataAccessService.instance.adbDatabaseID=e.adbDatabaseID,i.DataAccessService.instance.adbWorkLoadType=e.workloadType,this.initialize(),i.DataAccessService.instance.tlsAuthenticationType==s.TLSAuthenticationType.MutalTLS?this.reInitializeDownLoadCredentialsPage&&this.reInitializeDownLoadCredentialsPageHandler():this.reInitializeConnectionStringPage&&this.reInitializeConnectionStringPageHandler(!0)}catch(e){i.DataAccessService.instance.logError(e),o.MessagesService.getinstance().ShowMessage(a.LocalizedConstants.Instance.unableToClear)}},c=this,c.messageHandlers=new Map,c.messageHandlers.set(t.MessageName.clearPageEvent,c.onClearPageEvent),i.DataAccessService.instance.subscribe((e=>{if(e&&this.messageHandlers.get(e.type)){const n=this.messageHandlers.get(e.type);n&&n(e)}else i.DataAccessService.instance.logError(`Could not find handler for message ${e.type}`)})),this.initialize(),i.DataAccessService.instance.logInfo("Fetching Localized resources "),i.DataAccessService.instance.getLocalizedData().done((e=>{i.DataAccessService.instance.logInfo("Fetched localized resources."),a.LocalizedConstants.Instance.Configure(e)})).fail((e=>{i.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))}))}get messageHandlers(){return this.messageHandlersField}set messageHandlers(e){this.messageHandlersField=e}initialize(){this.walletFileLocation(i.DataAccessService.instance.walletLocation),this.isDedicatedDB(i.DataAccessService.instance.isDedicatedDb),i.DataAccessService.instance.displayMode==t.UIDisplayMode.AutonomousDatabaseConnectionManagement?this.isDedicatedDB()?this.newConnectionUIToDisplay(s.NewConnectionUIToDisplay.DownloadWalletfileWhileMakingConnection):i.DataAccessService.instance.tlsAuthenticationType==s.TLSAuthenticationType.TLS?this.newConnectionUIToDisplay(s.NewConnectionUIToDisplay.TLSAuthentication):this.newConnectionUIToDisplay(s.NewConnectionUIToDisplay.DownloadWalletfileWhileMakingConnection):this.newConnectionUIToDisplay(s.NewConnectionUIToDisplay.DownCredentialsfile),this.pageinitialized=!0}}}));