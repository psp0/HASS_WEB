define(["require","exports","knockout","../common/scriptExecutionModels","../common/dataAccessService","../utilities","../common/localizedConstants","../common/messageService","../common/models","ojs/ojmutablearraydataprovider","ojs/ojlistdataproviderview","ojs/ojdataprovider","ojs/ojarraydataprovider","ojs/ojknockout-keyset","ojs/ojcontext","ojs/ojbutton","ojs/ojknockout","ojs/ojinputtext","ojs/ojformlayout","ojs/ojlabel","ojs/ojselectcombobox","ojs/ojmessage","ojs/ojmessages","ojs/ojprogress","ojs/ojprogress-circle","ojs/ojinputnumber","ojs/ojcheckboxset","ojs/ojinputsearch","ojs/ojradioset","ojs/ojtable","ojs/ojpopup","ojs/ojlistview","ojs/ojlistitemlayout","ojs/ojselector","ojs/ojdialog"],(function(require,e,s,t,i,a,n,l,c,o,r,h,d,m,b){"use strict";let v;class u{constructor(){this.manageProfile=n.LocalizedConstants.Instance.manageProfile,this.profileName=n.LocalizedConstants.Instance.profileName,this.provider=n.LocalizedConstants.Instance.provider,this.credentialName=n.LocalizedConstants.Instance.credentialName,this.objectList=n.LocalizedConstants.Instance.objectList,this.model=n.LocalizedConstants.Instance.model,this.save=n.LocalizedConstants.Instance.saveBtnLabel,this.schema=n.LocalizedConstants.Instance.schema,this.tables=n.LocalizedConstants.Instance.filterUICollectionTypeTables,this.views=n.LocalizedConstants.Instance.filterUICollectionTypeViews,this.cancel=n.LocalizedConstants.Instance.cancel,this.ok=n.LocalizedConstants.Instance.ok,this.ellipse=n.LocalizedConstants.Instance.ellipse,this.yes=n.LocalizedConstants.Instance.yes,this.azureResourceName=n.LocalizedConstants.Instance.azureResourceName,this.azureDeploymentName=n.LocalizedConstants.Instance.azureDeploymentName,this.selectAll=n.LocalizedConstants.Instance.filterUISelectAll,this.clearAll=n.LocalizedConstants.Instance.clearAllSelections,this.noSchemasAvailable=n.LocalizedConstants.Instance.noSchemasAvailable,this.noCredentialsAvailable=n.LocalizedConstants.Instance.noCredentialsAvailable,this.apiKey=n.LocalizedConstants.Instance.apiKey,this.connectionName=n.LocalizedConstants.Instance.connUITextConnectionNameLabel,this.username=n.LocalizedConstants.Instance.userName,this.resourceType=n.LocalizedConstants.Instance.aiProviderResourceType,this.yesStr=n.LocalizedConstants.Instance.yes,this.showSQL=n.LocalizedConstants.Instance.showSQLLabel,this.copy=n.LocalizedConstants.Instance.connUITextCopyConnectionString}}var g;return function(e){e[e.Tables=0]="Tables",e[e.Views=1]="Views"}(g||(g={})),class{constructor(e){this.msgPos={my:{vertical:"top",horizontal:"end"},at:{vertical:"top",horizontal:"end"},of:"window"},this.messageHandlersField=new Map,this.labelTexts=new u,this.connectionId=-1,this.connectionUniqueName="",this.connectionName="",this.connectedUser="",this.profileName=s.observable(""),this.onProfileNameChanged=e=>{e.currentTarget.value=e.detail?.value,this.isValueEmpty(this.profileName())?this.profileNameFormatStr(this.profileNameReplaceStr):this.profileNameFormatStr(this.profileName()),this.saveButtonDisabled(this.doDisableSave())},this.credentials=s.observableArray([]),this.credential=s.observable(""),this.credentialsDP=new o(this.credentials(),{keyAttributes:"value"}),this.isGetCredentialsInProgress=s.observable(!1).extend({notify:"always"}),this.bNoCredentialsAvailable=!1,this.onCredentialChanged=e=>{e.currentTarget.value=e.detail?.value,this.isValueEmpty(this.credential())||this.bNoCredentialsAvailable?this.credNameFormatStr(this.credNameReplaceStr):this.credNameFormatStr(this.credential()),this.saveButtonDisabled(this.doDisableSave())},this.providers=s.observableArray([{value:"openai",label:"OpenAI"},{value:"cohere",label:"Cohere"}]),this.provider=s.observable("openai"),this.model=s.observable("gpt-4"),this.cohereModels=s.observableArray([{value:"command",label:"command"},{value:"command-light",label:"command-light"},{value:"command-nightly",label:"command-nightly"}]),this.openaiModels=s.observableArray([{value:"gpt-4",label:"gpt-4"},{value:"gpt-4-32k",label:"gpt-4-32k"},{value:"gpt-3.5-turbo",label:"gpt-3.5-turbo"}]),this.modelsDP=new o(this.openaiModels(),{keyAttributes:"value"}),this.onProviderChanged=e=>{e.currentTarget.value=e.detail?.value,"openai"===e.detail?.value?(this.modelsDP.data=this.openaiModels(),this.model("gpt-4")):"cohere"===e.detail?.value&&(this.modelsDP.data=this.cohereModels(),this.model("command")),this.providerFormatStr(this.provider())},this.onModelChanged=e=>{e.currentTarget.value=e.detail?.value,this.modelFormatStr(this.model())},this.objectListStringValue=s.observable(""),this.objectListString=s.observable(""),this.profileNameReplaceStr=n.LocalizedConstants.Instance.profileNameReplaceStr,this.profileNameFormatStr=s.observable(this.profileNameReplaceStr),this.providerReplaceStr=n.LocalizedConstants.Instance.providerReplaceStr,this.providerFormatStr=s.observable(this.provider()),this.modelReplaceStr=n.LocalizedConstants.Instance.modelReplaceStr,this.modelFormatStr=s.observable(this.model()),this.credNameReplaceStr=n.LocalizedConstants.Instance.credentialNameReplaceStr,this.credNameFormatStr=s.observable(this.credNameReplaceStr),this.showSQLOption=s.observableArray(),this.doShowSQL=s.computed((()=>-1!=this.showSQLOption.indexOf(this.labelTexts.yesStr))),this.sampleCode=s.computed((()=>`BEGIN\n    DBMS_CLOUD_AI.CREATE_PROFILE(\n        profile_name => '${this.profileNameFormatStr()}',\n        attributes => \n            '{"provider": "${this.providerFormatStr()}",\n            "credential_name": "${this.credNameFormatStr()}",\n            "model": "${this.modelFormatStr()}",\n            ${this.objectListStringValue()} }'\n    );\nEND;\n/`)),this.searchText=s.observable(""),this.schemas=s.observableArray([]),this.schema=s.observable(""),this.schemasDP=new o(this.schemas(),{keyAttributes:"value"}),this.isGetSchemasInProgress=s.observable(!1).extend({notify:"always"}),this.bNoSchemasAvailable=!1,this.onSchemaChanged=e=>{e.currentTarget.value=e.detail?.value,this.isValueEmpty(this.schema())||this.bNoSchemasAvailable||(this.searchText(""),this.getTablesViews(this.schema()))},this.objListTablesType=g.Tables,this.objListViewsType=g.Views,this.typeListed=s.observable(this.objListTablesType),this.onTypeListedChanged=e=>{this.searchText(""),this.updateAvailableObjectTable()},this.schemaTables=[],this.schemaViews=[],this.isGettingObjects=s.observable(!1).extend({notify:"always"}),this.isUpdatingObjects=s.observable(!1).extend({notify:"always"}),this.availableObjectTable=s.observableArray([]),this.selectedRows=new m.ObservableKeySet,this.selectedSchemaKeys=new Map,this.savedSchemaKeys=new Map,this.onSelectedChanged=e=>{this.selectingAll?this.selectingAll=!1:this.isGettingObjects()||this.isValueEmpty(this.schema())||(this.updateSelected(),this.testSelectAll())},this.computedObjectTableDP=s.computed((function(){let e=null;this.searchText()&&(e=h.FilterFactory.getFilter({filterDef:{text:this.searchText()}}));const s=new d(this.availableObjectTable(),{keyAttributes:"value"});return new r(s,{filterCriterion:e,sortCriteria:[{attribute:"value",direction:"ascending"}]})}),this),this.filteredObjectTable=s.observableArray([]).extend({notify:"always"}),this.showSelectAll=s.computed((()=>!this.isGettingObjects()&&!this.isUpdatingObjects()&&this.filteredObjectTable().length>0)),this.selectAllCheckbox=s.observableArray(),this.selectingAll=!1,this.selectAllComputed=s.computed({owner:this,read:()=>this.selectAllCheckbox(),write:e=>{this.selectingAll=!0,e.indexOf(this.labelTexts.yes)>-1?(this.doSelectAll(!0),this.selectAllCheckbox.push(this.labelTexts.yes)):(this.doSelectAll(!1),this.selectAllCheckbox.removeAll()),this.updateSelected()}}),this.isSaving=s.observable(!1).extend({notify:"always"}),this.isSavingStatic=!1,this.saveButtonDisabled=s.observable(!0),this.onSave=e=>{i.DataAccessService.instance.logInfo("Sending save ai profile request");const s=new t.MessageBase;s.type=t.MessageName.saveAiProfileRequest;const a=new t.SaveAIProfileRequest;a.ownerUri=i.DataAccessService.instance.URI,a.executionId=i.DataAccessService.instance.currentExecutionId,a.windowUri=i.DataAccessService.instance.windowUri,a.connectionUniqueId=this.connectionId,a.connectionUniqueName=this.connectionUniqueName,a.connectionName=this.connectionName,a.profileName=this.profileName(),a.provider=this.provider(),a.credentialName=this.credential(),a.model=this.model(),a.objectList=this.getObjectListItems(),s.data=a,this.isSaving(!0),this.isSavingStatic=!0,this.saveButtonDisabled(!0);try{i.DataAccessService.instance.send(s),i.DataAccessService.instance.logInfo("Successfully placed saveLLMAccessConfigRequest - "+t.SaveAIProfileRequest.displayString(a))}catch(e){i.DataAccessService.instance.logError(e),this.isSaving(!1),this.saveButtonDisabled(!1)}},this.onValueChanged=e=>{this.saveButtonDisabled(this.doDisableSave())},this.onRawValueChanged=e=>{e.currentTarget.value=e.detail?.value,this.saveButtonDisabled(this.doDisableSave())},this.onOpenProfileDialog=e=>{document.getElementById("editObjectListDialog").open(),this.searchText(""),this.schemas().length<1&&this.connectedUser&&this.getSchemas(),this.saveSelectedObjects()},this.onOkEditObjList=e=>{this.closeObjListPopup(),this.saveButtonDisabled(this.doDisableSave())},this.onCancelEditObjList=e=>{this.copySavedObjects(),this.updateObjectTableValue(),this.updateObjectListStringValue(),this.closeObjListPopup()},this.onSearching=e=>{let s=e.detail.value;this.searchText(s),this.updateFilteredTable()},this.onClearObjectList=()=>{this.selectedRows.clear(),this.selectedSchemaKeys.clear()},this.onCopySampleCode=e=>{try{a.copyToClipBoard(this.sampleCode())}catch(e){i.DataAccessService.instance.logError(e)}},this.openObjListTooltip=e=>{if(this.isValueEmpty(this.objectListString()))return;const s=document.getElementById("objectListPopupId");s&&(s.setAttribute("data-hover","true"),setTimeout((()=>{"true"==s.getAttribute("data-hover")&&s.open("#objectListStringValueDiv")}),400))},this.closeObjListTooltip=e=>{const s=document.getElementById("objectListPopupId");s&&(s.setAttribute("data-hover","false"),s.isOpen&&s.close())},this.preventAnimation=e=>{let s=e.detail;"open"!==s.action&&"close"!==s.action||(e.preventDefault(),s.endCallback())},v=this,this.moduleName=e.moduleName,this.messageHandlers.set(t.MessageName.saveAiProfileResponse,(e=>{this.handleSaveAiProfileResponse(e)})),this.messageHandlers.set(t.MessageName.getAIProfilesResponse,(e=>{e&&a.selectAIResponseIsSameConnection(e,this.connectionId)&&this.isModuleVisible()&&this.handleGetAIProfilesResponse(e)})),this.messageHandlers.set(t.MessageName.llmConfigGetCredentialsResponse,(e=>{if(e&&a.selectAIResponseIsSameConnection(e,this.connectionId)&&this.isModuleVisible()){const s=e.data;s&&s.sourceTab&&s.sourceTab===this.moduleName&&this.handleGetCredentialsResponse(e)}})),this.messageHandlers.set(t.MessageName.llmConfigGetSchemasResponse,(e=>{e&&a.selectAIResponseIsSameConnection(e,this.connectionId)&&this.isModuleVisible()&&this.handleGetSchemasResponse(e)})),this.messageHandlers.set(t.MessageName.getTablesViewsResponse,(e=>{e&&a.selectAIResponseIsSameConnection(e,this.connectionId)&&this.isModuleVisible()&&this.handleGetTablesViewsResponse(e)})),i.DataAccessService.instance.subscribe((e=>{if(e&&this.messageHandlers.get(e.type)){const s=this.messageHandlers.get(e.type);s&&s(e)}else i.DataAccessService.instance.logError(`Could not find handler for message ${e.type}`)})),i.DataAccessService.instance.logInfo("Fetching Localized resources "),i.DataAccessService.instance.getLocalizedData().done((e=>{i.DataAccessService.instance.logInfo("Fetched localized resources."),n.LocalizedConstants.Instance.Configure(e)})).fail((e=>{i.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))})),a.setContrast(),this.initialize(e.connectedUser,e.connectionId,e.connectionUniqueName,e.connectionName)}get messagesDataProvider(){return l.MessagesService.getinstance().messagesDataproviderField}get messageHandlers(){return this.messageHandlersField}set messageHandlers(e){this.messageHandlersField=e}async updateFilteredTable(){let e=[],s=null;this.searchText()&&(s=h.FilterFactory.getFilter({filterDef:{text:this.searchText()}}));let t=await this.computedObjectTableDP().fetchByOffset({offset:0,filterCriterion:s,size:-1});if(t&&t.done){let s=t.results;if(s){let t="";s.forEach((s=>{t=s.data.value,e.push(t)}))}}this.filteredObjectTable(e),this.testSelectAll()}initialize(e,s,t,a){i.DataAccessService.instance.logInfo("Start initializing llmAccessConfigModule");const n=s===this.connectionId;this.connectionId=s,this.connectedUser=e,this.connectionName=a,this.connectionUniqueName=t,n&&this.isSavingStatic||this.initValues(),i.DataAccessService.instance.logInfo("End initializing llmAccessConfigModule")}initValues(){this.profileName(""),this.credentials.removeAll(),this.credentialsDP.data=this.credentials(),this.credential(""),this.bNoCredentialsAvailable=!1,this.schemas.removeAll(),this.schemasDP.data=this.schemas(),this.schema(""),this.bNoSchemasAvailable=!1,this.schemaTables=[],this.schemaViews=[],this.availableObjectTable.removeAll(),this.filteredObjectTable.removeAll(),this.selectedSchemaKeys.clear(),this.savedSchemaKeys.clear(),this.selectAllCheckbox.removeAll(),this.selectedRows.clear(),this.updateObjectListStringValue(),this.searchText(""),b.getPageContext().getBusyContext().whenReady().then((()=>{this.isGetCredentialsInProgress(!1),this.isGetSchemasInProgress(!1),this.isGettingObjects(!1),this.isUpdatingObjects(!1),this.isSaving(!1)})),this.saveButtonDisabled(!0),this.isValueEmpty(this.connectedUser)||this.getAIProfiles()}handleSaveAiProfileResponse(e){i.DataAccessService.instance.logInfo("Received SaveLLMAccessConfigRequest");try{const s=e.data;s&&(i.DataAccessService.instance.logInfo("Handling SaveLLMAccessConfigRequest - "+t.SaveAIProfileResponse.displayString(s)),l.MessagesService.getinstance().ClearAll(),s.success?l.MessagesService.getinstance().ShowMessage(s.message):l.MessagesService.getinstance().ShowMessage(s.message,c.Severity.error),a.selectAIResponseIsSameConnection(e,this.connectionId)&&(this.isSavingStatic=!1,this.isModuleVisible()&&(this.isSaving(!1),s.success&&this.initValues(),this.saveButtonDisabled(this.doDisableSave()))))}catch(e){i.DataAccessService.instance.logError(e)}i.DataAccessService.instance.logInfo("End handling SaveLLMAccessConfigRequest")}getAIProfiles(){const e=new t.MessageBase;e.type=t.MessageName.configAIGetAIProfilesRequest;const s=new t.ConfigAIGetAIProfilesRequest;s.ownerUri=i.DataAccessService.instance.URI,s.executionId=i.DataAccessService.instance.currentExecutionId,s.windowUri=i.DataAccessService.instance.windowUri,s.connectionUniqueId=this.connectionId,s.connectionUniqueName=this.connectionUniqueName,s.connectionName=this.connectionName,e.data=s;try{i.DataAccessService.instance.send(e),i.DataAccessService.instance.logInfo("Successfully placed ConfigAIGetAIProfilesRequest - "+t.ConfigAIGetAIProfilesRequest.displayString(s))}catch(e){i.DataAccessService.instance.logError(e)}}handleGetAIProfilesResponse(e){i.DataAccessService.instance.logInfo("Received GetAIProfiles response");let s=[];try{const a=e.data;a&&a.profiles&&(i.DataAccessService.instance.logInfo("Handling GetAIProfilesResponse - "+t.GetAIProfilesResponse.displayString(a)),a.profiles.forEach((e=>{s.push(e)})))}catch(e){i.DataAccessService.instance.logError(e)}finally{this.updateProfileName(s),this.getCredentials(),i.DataAccessService.instance.logInfo("Processed GetAIProfilesResponse")}}getCredentials(){this.credentials.removeAll(),this.credentialsDP.data=this.credentials(),this.credential(""),this.isGetCredentialsInProgress(!0);const e=new t.MessageBase;e.type=t.MessageName.llmConfigGetCredentialsRequest;const s=new t.LLMConfigGetCredentialsRequest;s.ownerUri=i.DataAccessService.instance.URI,s.executionId=i.DataAccessService.instance.currentExecutionId,s.windowUri=i.DataAccessService.instance.windowUri,s.connectionUniqueId=this.connectionId,s.connectionUniqueName=this.connectionUniqueName,s.connectionName=this.connectionName,s.sourceTab=this.moduleName,e.data=s;try{i.DataAccessService.instance.send(e),i.DataAccessService.instance.logInfo("Successfully placed LLMConfigGetCredentialsRequest - "+t.LLMConfigGetCredentialsRequest.displayString(s))}catch(e){this.isGetCredentialsInProgress(!1),i.DataAccessService.instance.logError(e)}}handleGetCredentialsResponse(e){i.DataAccessService.instance.logInfo("Received LLMConfigGetCredentialsResponse");try{const s=e.data;if(s){if(i.DataAccessService.instance.logInfo("Handling LLMConfigGetCredentialsResponse - "+t.LLMConfigGetCredentialsResponse.displayString(s)),this.credentials.removeAll(),this.credentialsDP.data=this.credentials(),this.credential(""),this.isValueEmpty(s.errorMessage))if(s.credentials&&s.credentials.length>0){for(let e=0;e<s.credentials.length;e++)this.credentials.push({value:s.credentials[e],label:s.credentials[e]});this.credential(s.credentials[0])}else l.MessagesService.getinstance().ClearAll(),l.MessagesService.getinstance().ShowMessage(n.LocalizedConstants.Instance.noCredentialsAvailableMsg),this.bNoCredentialsAvailable=!0,this.credentials([{value:this.labelTexts.noCredentialsAvailable,label:this.labelTexts.noCredentialsAvailable}]),this.credential(this.labelTexts.noCredentialsAvailable);else l.MessagesService.getinstance().ClearAll(),l.MessagesService.getinstance().ShowMessage(s.errorMessage,c.Severity.error),this.bNoCredentialsAvailable=!0,this.credentials([{value:this.labelTexts.noCredentialsAvailable,label:this.labelTexts.noCredentialsAvailable}]),this.credential(this.labelTexts.noCredentialsAvailable);this.credentialsDP.data=this.credentials()}}catch(e){i.DataAccessService.instance.logError(e)}finally{this.isGetCredentialsInProgress(!1),i.DataAccessService.instance.logInfo("Processed LLMConfigGetCredentialsResponse")}}getSchemas(){this.schemas.removeAll(),this.schemasDP.data=this.schemas(),this.schema(""),this.isGetSchemasInProgress(!0);const e=new t.MessageBase;e.type=t.MessageName.llmConfigGetSchemasRequest;const s=new t.LLMConfigGetSchemasRequest;s.ownerUri=i.DataAccessService.instance.URI,s.executionId=i.DataAccessService.instance.currentExecutionId,s.windowUri=i.DataAccessService.instance.windowUri,s.connectionUniqueId=this.connectionId,s.connectionUniqueName=this.connectionUniqueName,s.connectionName=this.connectionName,e.data=s;try{i.DataAccessService.instance.send(e),i.DataAccessService.instance.logInfo("Successfully placed LLMConfigGetSchemasRequest - "+t.LLMConfigGetSchemasRequest.displayString(s))}catch(e){this.isGetSchemasInProgress(!1),i.DataAccessService.instance.logError(e)}}handleGetSchemasResponse(e){i.DataAccessService.instance.logInfo("Received LLMConfigGetSchemasResponse");try{const s=e.data;if(s)if(i.DataAccessService.instance.logInfo("Handling LLMConfigGetSchemasResponse - "+t.LLMConfigGetSchemasResponse.displayString(s)),this.schemas.removeAll(),this.schemasDP.data=this.schemas(),this.schema(""),this.isValueEmpty(s.errorMessage))if(s.schemas&&s.schemas.length>0){for(let e=0;e<s.schemas.length;e++)this.schemas.push({value:s.schemas[e],label:s.schemas[e]});this.schemasDP.data=this.schemas(),this.schema(s.userIdUsedToConnect)}else this.isValueEmpty(this.connectedUser)?(this.bNoSchemasAvailable=!0,this.schemas([{value:this.labelTexts.noSchemasAvailable,label:this.labelTexts.noSchemasAvailable}]),this.schemasDP.data=this.schemas(),this.schema(this.labelTexts.noSchemasAvailable)):(this.schemas([{value:this.connectedUser,label:this.connectedUser}]),this.schemasDP.data=this.schemas(),this.schema(this.connectedUser));else l.MessagesService.getinstance().ClearAll(),l.MessagesService.getinstance().ShowMessage(s.errorMessage,c.Severity.error),this.bNoSchemasAvailable=!0,this.schemas([{value:this.labelTexts.noSchemasAvailable,label:this.labelTexts.noSchemasAvailable}]),this.schemasDP.data=this.schemas(),this.schema(this.labelTexts.noSchemasAvailable)}catch(e){i.DataAccessService.instance.logError(e)}finally{this.isGetSchemasInProgress(!1),i.DataAccessService.instance.logInfo("Processed LLMConfigGetSchemasResponse")}}getTablesViews(e){this.isGettingObjects(!0),this.schemaTables=[],this.schemaViews=[],this.availableObjectTable.removeAll(),this.selectedRows.clear(),this.selectAllCheckbox.removeAll(),this.filteredObjectTable.removeAll();const s=new t.MessageBase;s.type=t.MessageName.getTablesViewsRequest;const a=new t.GetTablesViewsRequest;a.ownerUri=i.DataAccessService.instance.URI,a.executionId=i.DataAccessService.instance.currentExecutionId,a.windowUri=i.DataAccessService.instance.windowUri,a.connectionUniqueId=this.connectionId,a.connectionUniqueName=this.connectionUniqueName,a.connectionName=this.connectionName,a.schema=e,s.data=a;try{i.DataAccessService.instance.send(s),i.DataAccessService.instance.logInfo("Successfully placed GetTablesViewsRequest - "+t.GetTablesViewsRequest.displayString(a))}catch(e){this.isGettingObjects(!1),i.DataAccessService.instance.logError(e)}}handleGetTablesViewsResponse(e){i.DataAccessService.instance.logInfo("Received GetTablesViewsRequest");try{const s=e.data;if(s)if(i.DataAccessService.instance.logInfo("Handling GetTablesViewsRequest - "+t.GetTablesViewsResponse.displayString(s)),this.schemaTables=[],this.schemaViews=[],this.availableObjectTable.removeAll(),this.selectedRows.clear(),this.selectAllCheckbox.removeAll(),this.filteredObjectTable.removeAll(),this.isValueEmpty(s.errorMessage)){if(s.tables&&s.tables.length>0){s.tables.sort();for(let e=0;e<s.tables.length;e++)this.schemaTables.push(s.tables[e])}if(s.views&&s.views.length>0){s.views.sort();for(let e=0;e<s.views.length;e++)this.schemaViews.push(s.views[e])}this.updateAvailableObjectTable(),this.updateObjectTableValue()}else l.MessagesService.getinstance().ClearAll(),l.MessagesService.getinstance().ShowMessage(s.errorMessage,c.Severity.error)}catch(e){i.DataAccessService.instance.logError(e)}finally{this.isGettingObjects(!1),i.DataAccessService.instance.logInfo("Processed GetTablesViewsRequest")}}updateProfileName(e){if(this.isValueEmpty(this.profileName())){let s="",t=1,i=!1;if(!this.isValueEmpty(this.connectedUser)){let a=this.connectedUser.replace(/\s/g,"").toUpperCase();for(;!i;)s=`${a}_PROFILE_${t.toString()}`,e&&0!==e.length&&-1!==e.indexOf(s)?t++:i=!0}this.profileName(s)}}updateAvailableObjectTable(){this.isUpdatingObjects(!0),this.availableObjectTable.removeAll(),this.typeListed()===this.objListTablesType?this.schemaTables.forEach((e=>{this.availableObjectTable.push({value:e})})):this.typeListed()===this.objListViewsType&&this.schemaViews.forEach((e=>{this.availableObjectTable.push({value:e})})),this.updateFilteredTable(),this.isUpdatingObjects(!1)}updateObjectTableValue(){this.selectedRows.clear();let e=this.selectedSchemaKeys.get(this.schema());e&&this.selectedRows.add(e)}updateObjectListStringValue(){let e="",s="",t="",i=this.selectedSchemaKeys.size,n=0;this.selectedSchemaKeys.forEach(((l,c)=>{s=a.identifierNeedsQuotes(c)?a.addJsonQuotes(c):c;for(let c=0;c<l.length;c++)t=a.identifierNeedsQuotes(l[c],!0)?a.addJsonQuotes(l[c]):l[c],n==i-1&&c==l.length-1?e+=`{"owner": "${s}", "name": "${t}"}`:e+=`{"owner": "${s}", "name": "${t}"},\n`;n++})),this.objectListString(e);let l=`"object_list": [ ${e} ]`;this.objectListStringValue(l)}updateSelected(){let e=this.selectedRows();this.selectedSchemaKeys.set(this.schema(),Array.from(e.values())),this.updateObjectListStringValue()}testSelectAll(){let e=!0,s=this.selectedRows();if(0==this.filteredObjectTable().length||s.values()?.size<this.filteredObjectTable().length)e=!1;else for(let t=0;t<this.filteredObjectTable().length;t++){let i=this.filteredObjectTable()[t];if(i&&!s.has(i)){e=!1;break}}e?this.selectAllCheckbox().includes(this.labelTexts.yes)||this.selectAllCheckbox.push(this.labelTexts.yes):this.selectAllCheckbox.removeAll()}doSelectAll(e){e?this.selectedRows.add(this.filteredObjectTable()):this.selectedRows.delete(this.filteredObjectTable())}doDisableSave(){return!!(this.isSaving()||this.isValueEmpty(this.credential())||this.isValueEmpty(this.profileName())||this.isValueEmpty(this.provider())||this.isValueEmpty(this.model())||this.bNoCredentialsAvailable)}isValueEmpty(e){return null==e||null==e||""==e}closeObjListPopup(){document.getElementById("editObjectListDialog").close()}saveSelectedObjects(){this.savedSchemaKeys.clear(),this.selectedSchemaKeys.forEach(((e,s)=>{this.savedSchemaKeys.set(s,e)}))}copySavedObjects(){this.selectedSchemaKeys.clear(),this.savedSchemaKeys.forEach(((e,s)=>{this.selectedSchemaKeys.set(s,e)}))}getObjectListItems(){let e=[];return this.selectedSchemaKeys.forEach(((s,i)=>{s.forEach((s=>{e.push(new t.ObjectListItem(i,s))}))})),e}isModuleVisible(){return!!document.getElementById("manageProfileModule")}}}));