define(["require","exports","knockout","../common/models","ojs/ojflattenedtreedataproviderview","../common/dataAccessService","ojs/ojkeyset","../common/localizedConstants","../common/scriptExecutionModels","../common/messageService","../common/explainPlanUtils","ojs/ojbutton","ojs/ojoption","ojs/ojprogress","ojs/ojselectcombobox","ojs/ojtable","ojs/ojinputtext","ojs/ojpopup","ojs/ojmenu","ojs/ojprogress-circle","ojs/ojknockout","ojs/ojtable","ojs/ojrowexpander","ojs/ojdialog"],(function(require,e,a,t,s,i,n,l,o,r,c){"use strict";return class{constructor(e){this.dbmsPlanResult={view:void 0,data:void 0},this.noData=null,this.columns=a.observableArray(),this.columnsDefault={template:"cellTemplate",sortable:"none",resizable:"enabled"},this.noDataLabel=l.LocalizedConstants.Instance.explainPlanNotFound,this.selectedSaveFormat=a.observable(),this.isSaving=a.observable(!1),this.isCopying=a.observable(!1),this.showSQLabel=l.LocalizedConstants.Instance.showSQLLabel,this.hideSQLabel=l.LocalizedConstants.Instance.hideSQLLabel,this.showExplainSQL=a.observable(!0),this.formats=a.observableArray(),this.disableInput=e=>{"Tab"!=e.key&&(e.returnValue=!1)},this.handleSave=()=>{this.isSaving(!0),this.saveOrCopyData(!0)},this.divStyle={"margin-bottom":"10px"},this.moduleReady=!1,this.childCount=-1,this.dbmsExplainPlanData=a.observable(""),this.isTextMode=a.observable(!1),this.dbmsExplainPlanList=a.observableArray(),this.initialize=e=>{try{if(e.index){if(this.planMgr=new c.planManager(e.gridData,e.uiMode),this.planMgr.populatePlanMode(),this.index=e.index(),this.moduleReady=!0,this.explainPlanTableId=this.planMgr.getTableID(),this.moduleRenderingCompleted=e.moduleRenderingCompleted,this.planMgr.gridData&&this.planMgr.gridData.rows())switch(this.executionId=this.planMgr.gridData.executionId,this.queryId=this.planMgr.gridData.queryId,this.queryResultId=this.planMgr.gridData.queryResultId,this.isTextMode(this.planMgr.isTextMode()),this.planMgr.planMode){case o.ExplainPlanMode.ExplainPlanGrid:this.populateColumnsToDisplay(),this.formats.push({value:o.DataFormat.JSON,label:"JSON"}),this.selectedSaveFormat(o.DataFormat.JSON),i.DataAccessService.instance.logInfo(`number of rows for explainplan ${this.planMgr.gridData.rows().length}`),this.arrayTreeDataProvider=this.planMgr.getGridData(),this.dataProvider=new s(this.arrayTreeDataProvider),this.dataProvider.setExpanded(new n.AllKeySetImpl);break;case o.ExplainPlanMode.DBMSExplainPlanText:this.formats.push({value:o.DataFormat.TEXT,label:l.LocalizedConstants.Instance.text}),this.selectedSaveFormat(o.DataFormat.TEXT),this.dbmsExplainPlanData(this.planMgr.getTextData())}i.DataAccessService.instance.addSaveDataOutcomeHandler(this.queryId,this.queryResultId,this.handleSaveExplainPlanRequestResponse),i.DataAccessService.instance.logInfo("Fetching Localized resources "),i.DataAccessService.instance.getLocalizedData().done((e=>{i.DataAccessService.instance.logInfo("Fetched localized resources."),l.LocalizedConstants.Instance.Configure(e)})).fail((e=>{i.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))}))}}catch(e){i.DataAccessService.instance.logError(e)}},this.handleSaveExplainPlanRequestResponse=e=>{i.DataAccessService.instance.logInfo("Received handleSaveExplainPlanRequestResponse");try{e.status==o.SaveExplainPlanStatus.Success?r.MessagesService.getinstance().ShowMessage(e.message):e.status==o.SaveExplainPlanStatus.Error&&r.MessagesService.getinstance().ShowMessage(e.message,t.Severity.error),this.isSaving(!1)}catch(e){i.DataAccessService.instance.logError(e)}},this.addCellHighlight=e=>{this.planMgr.addCellHighlight(e)},this.removeCellHighlight=()=>{this.planMgr.removeCellHighlight()},this.checkCellContext=e=>{this.planMgr.checkCellContext(e)},this.copyCellData=e=>{this.planMgr.copyCellData(e)},this.startAnimationListener=e=>{this.planMgr.startAnimationListener(e)},this.preventDefault=e=>{this.planMgr.preventDefault(e)},this.preventTableAnimation=e=>{this.planMgr.preventTableAnimation(e)},this.cancelSaveHandler=()=>{},this.sendSaveRequest=()=>{this.planMgr.sendSaveRequest(this.selectedSaveFormat())},this.saveOrCopyData=e=>{this.planMgr.saveOrCopyData(e,this.selectedSaveFormat())},this.copyAllToClipBoard=()=>{this.isCopying(!0),i.DataAccessService.instance.logInfo("copying to clipboard"),this.planMgr.planMode==o.ExplainPlanMode.DBMSExecutionPlanText||this.planMgr.planMode==o.ExplainPlanMode.DBMSExplainPlanText?this.copyToClipBoard(this.dbmsExplainPlanData()):(this.saveOrCopyData(!1),this.isCopying(!1))},this.DisplaySQL=(e,a,t)=>{this.planMgr.DisplaySQL(e,a,t)},this.showSQL=()=>{this.DisplaySQL("explainPlanSQLID","sqlContainer",!0)},this.dispose=()=>{i.DataAccessService.instance.removeSaveDataOutcomeHandler(this.queryId,this.queryResultId)},this.initialize(e),this.noData=a.computed(this.planMgr.noData,this)}get CopyLabel(){return l.LocalizedConstants.Instance.copyToClipBoardTooltip}get SaveLabel(){return l.LocalizedConstants.Instance.saveToCSVTooltip}get cancelLabel(){return l.LocalizedConstants.Instance.cancelQueryText}getRootNode(e){let a;for(let t=0;t<e.length;t++){const s=e[t];if(!s.ID){a=s;break}}return a}getExplainPlanMode(e){let a=o.ExplainPlanMode.None;switch(e){case o.UIDisplayMode.executeExplainPlanSQL.toString():a=o.ExplainPlanMode.ExplainPlanGrid;break;case o.UIDisplayMode.executeDBMSExplainPlanSQL.toString():a=o.ExplainPlanMode.DBMSExplainPlanText}return a}populateColumnsToDisplay(){for(let e=0;e<this.planMgr.gridData.columnsToDisplayinGrid.length;e++){let a=this.planMgr.gridData.columnsToDisplayinGrid[e];this.columns.push(this.planMgr.getColumInfo(a))}}handleTransitionCompleted(e){this.moduleView=e.element,i.DataAccessService.instance.logInfo("handleTransitionCompleted explainPlanQueryResultModule"+this.index),this.moduleRenderingCompleted.dispatch(this.index),1==this.noData()&&this.DisplaySQL("noDataexplainPlanSQLID","sqlContainer",!1)}copyToClipBoard(e){this.planMgr.copyToClipBoard(e),this.isCopying(!1)}tooltipOpen(e,a,t){this.planMgr.tooltipOpen(e,a,t)}tooltipClose(e){this.planMgr.tooltipClose(e)}updatePosition(e,a){this.planMgr.updatePosition(e,a)}}}));