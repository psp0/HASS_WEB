define(["require","exports","knockout","signals","../common/dataAccessService","../common/localizedConstants","../common/messageService","../common/models","../common/scriptExecutionModels","../utilities","../common/odtUtils","../common/viewService","ojs/ojdialog","ojs/ojmessage","ojs/ojmessages","ojs/ojtable"],(function(require,e,t,a,s,n,r,o,i,l,c,d){"use strict";let u;return class{constructor(){this.msgPos={my:{vertical:"top",horizontal:"end"},at:{vertical:"top",horizontal:"end"},of:"window"},this.onBatchMessageEvent=e=>{if(u.uiDisplayMode==i.UIDisplayMode.RealTimeSqlMonitoringDetail){u.rtsmDataModel.requestStatus(i.RtsmDataRequestStatus.ScriptBatchEvent),u.rtsmDataModel.data(e.data);let t="";const a=u.rtsmDataModel.data();for(let e=0;e<a.messageList.length;e++){const s=a.messageList[e];if(s.requestMessageType==i.OracleEventNames.scriptExecutionMessage){let e=s;e.message&&(t+=e.message)}else{t=""}}return void u.rtsmDataModel.error(t)}const t=e.data;for(let e=0;e<t.messageList.length;e++){const a=t.messageList[e];if(a.requestMessageType==i.OracleEventNames.scriptExecutionMessage){let e=a;u.processMessage(e)}else{let e=a;u.processDataEvent(e)}}},this.okButtonLabelField=t.observable(),this.cancelButtonField=t.observable(),this.inputDialogLabel=t.observable(),this.pendingGridIndex=-1,this.themeFileId="ThemeCss",this.themeColorFileId="ThemeColor",this.customThemeTag="customTheme",this.runInputArgDialogParameters=t.observable(new o.ParametersUIParams),this.currentDialogNameField=t.observable("runInputDialog"),this.uiDisplayMode=i.UIDisplayMode.ExceuteScript,this.inputMessage=t.observable(),this.cancelHandler=t.observable(),this.moduleRenderingCompleted=new a.Signal,this.handlersField=new Map,this.rtsmModule=null,this.rtsmDataModel=null,this.handleClearEvent=()=>{try{this.CloseInputDialog(),r.MessagesService.getinstance().ClearAll();const a=new i.MessageBase;a.type=i.MessageName.clearRequest;const n=new i.ScriptExecutionClearEventParams;n.ownerUri=s.DataAccessService.instance.URI,n.executionId=s.DataAccessService.instance.currentExecutionId,n.previousExecutionList=u.previousExecutionList,n.resourceList=this.prepareQueryListForCleanUp(),a.data=n,u.masterDataSourceList.removeAll(),u.codeObjectRunResults.removeAll(),u.masterDataSourceList.removeAll(),u.dataSource.removeAll();var e=document.querySelector("#customResultContainer");t.cleanNode(e),e.innerHTML="";let o=document.querySelector("#sqlContainer");o&&(o.innerHTML="");let l=document.querySelector("#exeSQLContainer");l&&(l.innerHTML=""),u.pendingMsgModules.clear(),s.DataAccessService.instance.send(a)}catch(e){s.DataAccessService.instance.logError(e),r.MessagesService.getinstance().ShowMessage(n.LocalizedConstants.Instance.unableToClear)}},this.onThemeChanged=e=>{s.DataAccessService.instance.logInfo("Theme Changed"),l.setContrast()},this.onToolbarEvent=e=>{try{s.DataAccessService.instance.logInfo("OnToolbarEvent:"+JSON.stringify(e));const t=e.data;t.commandName==i.MessageName.toolbarClearClicked?(t.currentUIMode!=i.UIDisplayMode.None&&(this.uiDisplayMode=t.currentUIMode),this.handleClearEvent()):t.commandName==i.MessageName.toolbarCancelClicked?this.handleCancelEvent():t.commandName==i.MessageName.toolbarUpdateEvent&&this.handleToolbarUpdateEvent()}catch(e){s.DataAccessService.instance.logError(e),r.MessagesService.getinstance().ShowMessage(n.LocalizedConstants.Instance.unableToClear)}},this.onCodeObjectOutputEvent=e=>{let t=e.data;if(s.DataAccessService.instance.logInfo("onCodeObjectOutputEvent"+i.UserInputParams.displayString(t)),this.codeObjectRunResults().length>0)for(let e=0;e<this.codeObjectRunResults().length;e++){let a=this.codeObjectRunResults()[e];if(a.queryId===t.queryId){let e=new o.ParametersUIParams;e.parameters=t,e.mode=o.ParametersUIMode.DisplayOutput,a.outputArgs=e}}else{let e=new o.CodeObjectOutPutUIParams,a=new o.ParametersUIParams;a.parameters=t,a.mode=o.ParametersUIMode.DisplayOutput,e.outputArgs=a,this.masterDataSourceList.push(e);let s=u.masterDataSourceList().length-1;u.addModule(s,u.masterDataSourceList()[s],u.uiDisplayMode)}},this.currentInputDialog="#inputParamDialog",this.onUserInputRequest=e=>{u.scroll=!1;const t=e.data;this.setPopupParams(t),s.DataAccessService.instance.logInfo(i.UserInputParams.displayString(t));const a=new o.ParametersUIParams;a.mode=o.ParametersUIMode.TakeParameters,a.parameters=t,this.onOkOfDialogImpl=()=>a.onOk()?a:void 0,this.onCancelOfDialogImpl=()=>{let e=a.onCancel();return u.scroll=!0,e},this.setPopupParams(t),this.inputMessage(`${n.LocalizedConstants.Instance.runplsql}  ${a.parameters.queryString}@${a.parameters.ownerUri}`),this.runInputArgDialogParameters(a),this.currentInputDialog="#inputParamDialog";document.querySelector(this.currentInputDialog).open()},this.onOkButtonClick=()=>{let e=this.onOkOfDialogImpl();if(e){const t=new o.CodeObjectOutPutUIParams;if(t.queryId=e.parameters.queryId,t.inputArgs=e,e.parameters.operationName==i.OperationName.RunCodeObject){this.codeObjectRunResults.push(t),this.masterDataSourceList.push(t);let e=u.masterDataSourceList().length-1;u.addModule(e,u.masterDataSourceList()[e],u.uiDisplayMode)}document.querySelector(this.currentInputDialog).close(),u.scroll=!0}},this.onDialogClose=e=>{e&&e.detail&&e.detail.originalEvent&&"Escape"===e.detail.originalEvent.key&&this.onCancelButtonClick()},this.onCancelButtonClick=()=>{this.onCancelOfDialogImpl();const e=this.cancelHandler();e&&e();document.querySelector(this.currentInputDialog).close()},this.onOkOfDialogImpl=()=>{},this.onCancelOfDialogImpl=()=>!0,this.refreshRateInMiliSec=1e3,this.scroll=!0,this.previousExecutionList=[],this.processMessage=e=>{if(!e.logInHistory){const t=new o.QueryMessage(e.messageType,e.message,e.queryType,e.sqlQuery,e.statement);u.masterDataSourceList.push(t);let a=u.masterDataSourceList().length-1;u.addModule(a,u.masterDataSourceList()[a],u.uiDisplayMode)}},this.processStartMessage=e=>{u.previousExecutionList.push(e.executionId),s.DataAccessService.instance.currentExecutionId=e.executionId,s.DataAccessService.instance.currentExecutionStatus=i.ExecutionStatus.Started,c.ODTUtils.sendUpdateToolbarEvent(i.ExecutionStatus.Started),c.ODTUtils.getUserPreferences(),u.executing(!0),u.uiDisplayMode==i.UIDisplayMode.ExceuteScript||u.uiDisplayMode==i.UIDisplayMode.ExceuteSQLStatement?(u.scrollIntervalId=setInterval((()=>{u.scroll&&l.scrollToBottom()}),u.refreshRateInMiliSec),l.scrollToBottom()):u.uiDisplayMode==i.UIDisplayMode.RealTimeSqlMonitoringDetail&&(null==u.rtsmModule&&(u.rtsmModule=u.addModule(0,this.rtsmDataModel,u.uiDisplayMode)),u.rtsmDataModel.requestStatus(i.RtsmDataRequestStatus.ScriptStarted),u.rtsmDataModel.rtsmExecutionId=e.rtsmExecutionId.trim(),u.rtsmDataModel.data(e))},u=this,u.executing=t.observable(!0),u.pendingMsgModules=new Map,u.moduleRenderingCompleted.add((e=>{u.handlePendingModuleLoads(+e)})),u.dataSource=t.observableArray([]),u.codeObjectRunResults=t.observableArray([]),u.masterDataSourceList=t.observableArray([]),u.uiDisplayMode=s.DataAccessService.instance.displayMode,u.handlers=new Map,u.handlers.set(i.OracleEventNames.scriptExecutionMessage,u.onMessageReceived),u.handlers.set(i.OracleEventNames.scriptExecutionData,u.onDataReceived),u.handlers.set(i.OracleEventNames.scriptExecutionDataFetched,u.onDataFetchedEventReceived),u.handlers.set(i.OracleEventNames.scriptExecutionStarted,u.onScriptExecutionStarted),u.handlers.set(i.OracleEventNames.scriptExecutionFinished,u.onScriptExecutionFinished),u.handlers.set(i.OracleEventNames.scriptExecutionCancelled,u.onScriptExecutionCancelled),u.handlers.set(i.MessageName.themeChanged,u.onThemeChanged),u.handlers.set(i.MessageName.odtConfigChanged,u.onConfigChanged),u.handlers.set(i.OracleEventNames.scriptUserInputRequired,u.onUserInputRequest),u.handlers.set(i.OracleEventNames.scriptCodeObjectOutput,u.onCodeObjectOutputEvent),u.handlers.set(i.MessageName.toolbarEvent,u.onToolbarEvent),u.handlers.set(i.OracleEventNames.scriptExecutionBatchedMessage,(e=>u.onBatchMessageEvent(e))),u.handlers.set(i.MessageName.getUserPreferencesRequest,(e=>{this.handleGetUserPreferencesResponse(e)})),s.DataAccessService.instance.subscribe((e=>{c.ODTUtils.acknowledgeMessage(e),this.DispatchMessage(e)})),s.DataAccessService.instance.logInfo("Fetching Localized resources "),s.DataAccessService.instance.getLocalizedData().done((e=>{s.DataAccessService.instance.logInfo("Fetched localized resources."),n.LocalizedConstants.Instance.Configure(e)})).fail((e=>{s.DataAccessService.instance.logError("Localized resources "+JSON.stringify(e))})),l.setContrast(),u.uiDisplayMode==i.UIDisplayMode.RealTimeSqlMonitoringDetail&&(u.rtsmDataModel=new i.RtsmResultsDataModel)}getQueryId(e){const t=e.data;e.data;return t&&t.messageList.length>0?t.messageList[0].queryId:void 0}addModule(e,t,a){try{let s=new o.CustomModuleConfig;return s.ds=new o.ResultArguments,s.ds.data=t,s.ds.moduleRenderingCompleted=u.moduleRenderingCompleted,s.ds.observableIndexProp=e,s.uiDisplayMode=a,s.visibility=u.getModuleVisibility(s),d.ViewFactory.instance.createAndBindView(this.getModuleName(s),s),s}catch(e){s.DataAccessService.instance.logError("Failed to Add module for type "+t.dataSourceType),s.DataAccessService.instance.logError(e)}return null}getModuleVisibility(e){if(e.ds.data.dataSourceType==i.DataSourceType.Message){if(-1==u.pendingGridIndex)return!0;{let t=e.ds.observableIndexProp;return u.pendingMsgModules.has(u.pendingGridIndex)?u.pendingMsgModules.get(u.pendingGridIndex).push(t):u.pendingMsgModules.set(u.pendingGridIndex,[t]),!1}}return u.pendingGridIndex=e.ds.observableIndexProp,!0}getModuleName(e){switch(e.ds.data.dataSourceType){case i.DataSourceType.Message:return"messageModule";case i.DataSourceType.ExplainPlanQueryResult:return"explainPlanQueryResultsModule";case i.DataSourceType.ExecutionPlanQueryResult:return"executionPlanQueryResultsModule";case i.DataSourceType.RealTimeSqlMonitoringDetail:return"realTimeSqlMonitoringDetail";default:return"template"}}CloseInputDialog(){if(this.IsInputDialogOpen){const e=document.querySelector("#inputParamDialog");e&&e.close()}}prepareQueryListForCleanUp(){let e=[];for(let t=0;t<this.masterDataSourceList().length;t++){const a=this.masterDataSourceList()[t];if(a.dataSourceType==i.DataSourceType.QueryResult){let t=a,n=new i.ResourceIdentifier;n.executionId=t.executionId,n.queryId=t.queryId,n.queryResultId=t.queryResultId,n.ownerUri=s.DataAccessService.instance.URI,e.push(n)}}return e}handleCancelEvent(){try{this.CloseInputDialog();const e=new i.CancelScriptExecutionParams;e.ownerUri=s.DataAccessService.instance.URI,e.executionId=s.DataAccessService.instance.currentExecutionId,s.DataAccessService.instance.cancelQuery(e),r.MessagesService.getinstance().ShowMessageDetailed(n.LocalizedConstants.Instance.cancelRequestSent,o.Severity.info,c.ApplicationData.instance.TransientMessageTimeout)}catch(e){s.DataAccessService.instance.logError(e),r.MessagesService.getinstance().ShowMessage(n.LocalizedConstants.Instance.failedToSendCancelRequest)}}handleToolbarUpdateEvent(){try{c.ODTUtils.sendUpdateToolbarEvent(s.DataAccessService.instance.currentExecutionStatus)}catch(e){s.DataAccessService.instance.logError(e)}}setPopupParams(e){let t=o.PopUpDialogParams.getPopulInfo(e.operationName);this.inputDialogLabel(t.dialogHeader),this.okButtonLabel=t.okLabel,this.cancelButtonLabel=t.cancelLabel,this.currentDialogName=t.name}get messagesDataprovider(){return r.MessagesService.getinstance().messagesDataproviderField}get handlers(){return this.handlersField}set handlers(e){this.handlersField=e}get resultsPanelLabel(){return n.LocalizedConstants.Instance.resultsPanelLabel}get codeObjectResultsLabel(){return n.LocalizedConstants.Instance.codeObjectResultsLabel}get currentDialogName(){return this.currentDialogNameField()}set currentDialogName(e){this.currentDialogNameField(e)}get okButtonLabel(){return this.okButtonLabelField()}set okButtonLabel(e){this.okButtonLabelField(e)}get cancelButtonLabel(){return this.cancelButtonField()}set cancelButtonLabel(e){this.cancelButtonField(e)}handlePendingModuleLoads(e){let t=u.pendingMsgModules.get(e);t&&(t.forEach((e=>{let t=$(`#moduleMessage${e}`);t&&t.removeClass("hideElement")})),u.pendingMsgModules.delete(e)),u.pendingGridIndex==e&&(u.pendingGridIndex=-1)}DispatchMessage(e){if(e&&u.handlers.get(e.type)){const t=u.handlers.get(e.type);t&&t(e)}else s.DataAccessService.instance.logError(`Could not find handler for message ${e.type}`)}get IsInputDialogOpen(){const e=document.querySelector("#inputParamDialog");return!!e&&e.isOpen()}onConfigChanged(e){const t=e.data;s.DataAccessService.instance.updatedConfig(t)}updateDataSource(e){const t=e.data;u.processDataEvent(t)}updateDataSourceOnDataFetchedEvent(e){const t=e.data,a=u.getGridDataModel(t.queryId,t.queryResultId);a&&a.updateOnDataFetchedEvent(t)}processDataEvent(e){u.masterDataSourceList().length;if(e.explainMode==i.ExplainPlanMode.ExecutionPlanGrid||e.explainMode==i.ExplainPlanMode.DBMSExecutionPlanText){let t=new o.DataGridModel(e);u.dataSource.push(t),u.masterDataSourceList.push(t);let a=u.masterDataSourceList().length-1;u.masterDataSourceList()[a].dataSourceType=i.DataSourceType.ExecutionPlanQueryResult,u.addModule(a,u.masterDataSourceList()[a],u.uiDisplayMode)}else if(e.explainMode==i.ExplainPlanMode.ExplainPlanGrid||e.explainMode==i.ExplainPlanMode.DBMSExplainPlanText){let t=new o.DataGridModel(e);u.dataSource.push(t),u.masterDataSourceList.push(t);let a=u.masterDataSourceList().length-1;u.masterDataSourceList()[a].dataSourceType=i.DataSourceType.ExplainPlanQueryResult,u.addModule(a,u.masterDataSourceList()[a],u.uiDisplayMode)}else{const t=u.getGridDataModel(e.queryId,e.queryResultId);if(t)e.queryResult?t.update(e):t.fetchingCompleted||t.updateOnFetchingRows();else{let t=new o.DataGridModel(e);u.dataSource.push(t),u.masterDataSourceList.push(t);let a=u.masterDataSourceList().length-1;u.addModule(a,u.masterDataSourceList()[a],u.uiDisplayMode)}}}getGridDataModel(e,t){let a;if(e){for(let s=0;s<u.dataSource().length;s++){const n=u.dataSource()[s];if(n.queryId===e&&n.queryResultId===t){a=n;break}}return a}}onMessageReceivedLog(e){s.DataAccessService.instance.logInfo(`Received ${e.type}`)}connected(){}disconnected(){}transitionCompleted(){}onDataReceived(e){u.updateDataSource(e)}onDataFetchedEventReceived(e){s.DataAccessService.instance.logInfo("scriptResultsModule.onDataFetchedEventReceived - DataFetchedEvent received"),u.updateDataSourceOnDataFetchedEvent(e)}onMessageReceived(e){const t=e.data;u.processMessage(t)}onScriptExecutionStarted(e){const t=e.data;u.processStartMessage(t)}onScriptExecutionCancelled(e){if(u.uiDisplayMode==i.UIDisplayMode.RealTimeSqlMonitoringDetail)return u.rtsmDataModel.requestStatus(i.RtsmDataRequestStatus.ScriptCancelled),void u.rtsmDataModel.data(e.data)}onScriptExecutionFinished(e){u.executing(!1),s.DataAccessService.instance.currentExecutionStatus=i.ExecutionStatus.Finished,c.ODTUtils.sendUpdateToolbarEvent(i.ExecutionStatus.Finished),clearInterval(u.scrollIntervalId),u.CloseInputDialog(),r.MessagesService.getinstance().ClearAll();const t=e.data;t?t.explainMode===i.ExplainPlanMode.None&&setTimeout((function(){l.scrollToBottom()}),0):setTimeout((function(){l.scrollToBottom()}),0),u.uiDisplayMode==i.UIDisplayMode.RealTimeSqlMonitoringDetail&&(u.rtsmDataModel.requestStatus(i.RtsmDataRequestStatus.ScriptFinished),u.rtsmDataModel.data(e.data))}handleGetUserPreferencesResponse(e){s.DataAccessService.instance.logInfo("Received GetUserPreferencesResponse");try{const t=e.data;if(t.result){let e=t.userPreferences;c.ApplicationData.instance.userPreferences=e}}catch(e){s.DataAccessService.instance.logError(e)}}}}));