define(["require","exports","ojs/ojcontext","./dataAccessService","ojs/ojpopup"],(function(require,t,e,o){"use strict";return class{constructor(t){this.controls=new Map,this.tooltipOpen=t=>{let e=t.currentTarget.id;this.controls.has(e)&&this.launchTooltip(this.tooltipId,e,t)},this.tooltipClose=t=>{t.currentTarget.id;const e=document.getElementById(this.tooltipId);e&&(e.setAttribute("data-hover","false"),e.isOpen()&&e.close())},this.launchTooltip=(t,e,o)=>{const i=document.getElementById(t);if(i){let t,s=i.querySelector(".oj-popup-content");s&&this.controls.has(e)&&(t=this.controls.get(e)),t&&(s.innerHTML=t,i.setAttribute("data-hover","true"),i.position.of={x:o.pageX,y:o.pageY},setTimeout((()=>{"true"==i.getAttribute("data-hover")&&(i.isOpen()||i.open(e))}),400))}},this.startAnimationListener=t=>{let e=t.detail;"open"!==e.action&&"close"!==e.action||(t.preventDefault(),e.endCallback())},this.tooltipId=t}addTooltip(t,e){this.controls.set(t,e)}updateTooltip(){e.getPageContext().getBusyContext().whenReady().then((()=>{try{this.controls.forEach(((t,e)=>{let o=document.getElementById(e);if(o){o.addEventListener("mouseenter",this.tooltipOpen),o.addEventListener("mouseleave",this.tooltipClose);let t=document.getElementById(this.tooltipId);t&&(t.position={my:{horizontal:"start",vertical:"top"},offset:{x:7,y:8},at:{horizontal:"end",vertical:"bottom"},collision:"flipfit"}),t.setAttribute("autoDismiss","focusLoss"),t.setAttribute("modality","modeless"),t.addEventListener("ojAnimateStart",this.startAnimationListener)}}))}catch(t){o.DataAccessService.instance.logError("Error in updating tooltip"),o.DataAccessService.instance.logError(t)}}))}}}));