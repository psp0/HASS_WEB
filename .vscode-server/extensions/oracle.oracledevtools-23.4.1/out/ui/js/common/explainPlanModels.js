define(["require","exports"],(function(require,s){"use strict";var e,t,i;Object.defineProperty(s,"__esModule",{value:!0}),s.ExplainAndExecutionPlanConfig=s.DbmsExplainPlanConfig=s.DbmsXplanOption=s.ExplainSettingType=s.ExplainPlanAllConfigs=s.ExplainPlanConfig=s.ExplainColumn=s.ExplainFormatType=void 0,function(s){s[s.Basic=0]="Basic",s[s.Typical=1]="Typical",s[s.Serial=2]="Serial",s[s.All=3]="All",s[s.Adaptive=4]="Adaptive"}(e=s.ExplainFormatType||(s.ExplainFormatType={})),function(s){s[s.BYTES=0]="BYTES",s[s.CARDINALITY=1]="CARDINALITY",s[s.COST=2]="COST",s[s.CPU_COST=3]="CPU_COST",s[s.DEPTH=4]="DEPTH",s[s.DISTRIBUTION=5]="DISTRIBUTION",s[s.IO_COST=6]="IO_COST",s[s.OBJECT_ALIAS=7]="OBJECT_ALIAS",s[s.OBJECT_INSTANCE=8]="OBJECT_INSTANCE",s[s.OBJECT_NAME=9]="OBJECT_NAME",s[s.OBJECT_NODE=10]="OBJECT_NODE",s[s.OBJECT_OWNER=11]="OBJECT_OWNER",s[s.OBJECT_TYPE=12]="OBJECT_TYPE",s[s.OPTIMIZER=13]="OPTIMIZER",s[s.OPTIONS=14]="OPTIONS",s[s.OTHER=15]="OTHER",s[s.OTHER_TAG=16]="OTHER_TAG",s[s.Other_XML_Column=17]="Other_XML_Column",s[s.PARENT_ID=18]="PARENT_ID",s[s.POSITION=19]="POSITION",s[s.Partition_Columns=20]="Partition_Columns",s[s.Predicate_Column=21]="Predicate_Column",s[s.Projection_Column=22]="Projection_Column",s[s.QBLOCK_NAME=23]="QBLOCK_NAME",s[s.SEARCH_COLUMNS=24]="SEARCH_COLUMNS",s[s.TEMP_SPACE=25]="TEMP_SPACE",s[s.TIME=26]="TIME"}(s.ExplainColumn||(s.ExplainColumn={}));s.ExplainPlanConfig=class{constructor(s,e){this.showAllColumns=s,this.columnList=[],e&&e.forEach((s=>this.columnList.push(s)))}};s.ExplainPlanAllConfigs=class{constructor(s){if(this.customizeKeywordsDefaultValue=!1,this.typicalDefaultKeywordList=[i.ROWS,i.BYTES,i.COST,i.PARTITION,i.PARALLEL,i.PREDICATE,i.NOTE],this.serialDefaultKeywordList=[i.ROWS,i.BYTES,i.COST,i.PARTITION,i.PREDICATE,i.NOTE],this.allExplainDefaultKeywordList=[i.ROWS,i.BYTES,i.COST,i.PARTITION,i.PARALLEL,i.PREDICATE,i.PROJECTION,i.ALIAS,i.REMOTE,i.NOTE],this.adaptiveExecutionDefaultKeywordList=[i.ROWS,i.BYTES,i.COST,i.PARTITION,i.PREDICATE,i.NOTE],this.allExecutionDefaultKeywordList=[i.ROWS,i.BYTES,i.COST,i.PARTITION,i.PARALLEL,i.PREDICATE,i.PROJECTION,i.ALIAS,i.REMOTE,i.NOTE],this.dbmsExplainKeywordsMap=new Map,this.dbmsExecutionKeywordsMap=new Map,this.dbmsExplainCustomiseKeywordsMap=new Map,this.dbmsExecutionCustomiseKeywordsMap=new Map,s){if(s.explainPlanConfig&&(this.explainShowAllColumns=void 0!==s.explainPlanConfig.showAllColumns&&s.explainPlanConfig.showAllColumns,this.explainPlanColumns=new Set,s.explainPlanConfig.columnList&&s.explainPlanConfig.columnList.forEach((s=>this.explainPlanColumns.add(s)))),s.executionPlanConfig&&(this.executionShowAllColumns=void 0!==s.executionPlanConfig.showAllColumns&&s.executionPlanConfig.showAllColumns,this.executionPlanColumns=new Set,s.executionPlanConfig.columnList&&s.executionPlanConfig.columnList.forEach((s=>this.executionPlanColumns.add(s)))),s.dbmsExplainPlanConfig&&(this.explainFormatType=void 0!==s.dbmsExplainPlanConfig.format?s.dbmsExplainPlanConfig.format:e.Typical,this.dbmsExplainCustomiseKeywordsMap.set(this.explainFormatType,!!s.dbmsExplainPlanConfig.customiseKeywords),this.dbmsExplainCustomiseKeywordsMap.get(this.explainFormatType))){let e=new Set;s.dbmsExplainPlanConfig.keywords&&s.dbmsExplainPlanConfig.keywords.length>0&&s.dbmsExplainPlanConfig.keywords.forEach((s=>e.add(s))),this.dbmsExplainKeywordsMap.set(this.explainFormatType,e)}if(s.dbmsExecutionPlanConfig&&(this.executionFormatType=void 0!==s.dbmsExecutionPlanConfig.format?s.dbmsExecutionPlanConfig.format:e.Typical,this.dbmsExecutionCustomiseKeywordsMap.set(this.executionFormatType,!!s.dbmsExecutionPlanConfig.customiseKeywords),this.dbmsExecutionCustomiseKeywordsMap.get(this.executionFormatType))){let e=new Set;s.dbmsExecutionPlanConfig.keywords&&s.dbmsExecutionPlanConfig.keywords.length>0&&s.dbmsExecutionPlanConfig.keywords.forEach((s=>e.add(s))),this.dbmsExecutionKeywordsMap.set(this.executionFormatType,e)}Object.keys(e).forEach((s=>{const t=Number(s);isNaN(t)||this.dbmsExplainCustomiseKeywordsMap.has(t)||t===e.Adaptive||this.dbmsExplainCustomiseKeywordsMap.set(t,this.customizeKeywordsDefaultValue)})),Object.keys(e).forEach((s=>{const e=Number(s);isNaN(e)||this.dbmsExecutionCustomiseKeywordsMap.has(e)||this.dbmsExecutionCustomiseKeywordsMap.set(e,this.customizeKeywordsDefaultValue)})),this.populateDefaultKeywordSets(),this.currentTab=t.ExplainPlan,this.workspaceFolder=s.workspaceFolder,this.configurationTarget=s.configurationTarget}}get showAllColumns(){return this.currentTab===t.ExplainPlan?this.explainShowAllColumns:this.executionShowAllColumns}set showAllColumns(s){this.currentTab===t.ExplainPlan?this.explainShowAllColumns=s:this.executionShowAllColumns=s}get columnSet(){return this.currentTab===t.ExplainPlan?this.explainPlanColumns:this.executionPlanColumns}setColumnSet(s){s&&(this.currentTab===t.ExplainPlan?this.explainPlanColumns=new Set(s):this.executionPlanColumns=new Set(s))}get formatType(){return this.currentTab===t.DBMSExplainPlan?this.explainFormatType:this.executionFormatType}set formatType(s){this.currentTab===t.DBMSExplainPlan?this.explainFormatType=s:this.executionFormatType=s}get keywordSet(){return this.currentTab===t.DBMSExplainPlan?this.dbmsExplainCustomiseKeywordsMap.get(this.formatType)?this.dbmsExplainKeywordsMap.get(this.formatType):new Set:this.dbmsExecutionCustomiseKeywordsMap.get(this.formatType)?this.dbmsExecutionKeywordsMap.get(this.formatType):new Set}setKeywordSet(s){s&&(this.currentTab===t.DBMSExplainPlan?this.dbmsExplainKeywordsMap.set(this.formatType,new Set(s)):this.dbmsExecutionKeywordsMap.set(this.formatType,new Set(s)))}get customiseKeywords(){return this.currentTab===t.DBMSExplainPlan?!!this.dbmsExplainCustomiseKeywordsMap.has(this.formatType)&&this.dbmsExplainCustomiseKeywordsMap.get(this.formatType):!!this.dbmsExecutionCustomiseKeywordsMap.has(this.formatType)&&this.dbmsExecutionCustomiseKeywordsMap.get(this.formatType)}set customiseKeywords(s){this.currentTab===t.DBMSExplainPlan?this.dbmsExplainCustomiseKeywordsMap.set(this.formatType,s):this.dbmsExecutionCustomiseKeywordsMap.set(this.formatType,s)}populateDefaultKeywordSets(s=!1){s&&(this.dbmsExecutionKeywordsMap.clear(),this.dbmsExplainKeywordsMap.clear()),this.dbmsExplainKeywordsMap.has(e.Basic)||this.dbmsExplainKeywordsMap.set(e.Basic,new Set),this.dbmsExplainKeywordsMap.has(e.Typical)||this.dbmsExplainKeywordsMap.set(e.Typical,new Set(this.typicalDefaultKeywordList)),this.dbmsExplainKeywordsMap.has(e.Serial)||this.dbmsExplainKeywordsMap.set(e.Serial,new Set(this.serialDefaultKeywordList)),this.dbmsExplainKeywordsMap.has(e.All)||this.dbmsExplainKeywordsMap.set(e.All,new Set(this.allExplainDefaultKeywordList)),this.dbmsExecutionKeywordsMap.has(e.Basic)||this.dbmsExecutionKeywordsMap.set(e.Basic,new Set),this.dbmsExecutionKeywordsMap.has(e.Typical)||this.dbmsExecutionKeywordsMap.set(e.Typical,new Set(this.typicalDefaultKeywordList)),this.dbmsExecutionKeywordsMap.has(e.Serial)||this.dbmsExecutionKeywordsMap.set(e.Serial,new Set(this.serialDefaultKeywordList)),this.dbmsExecutionKeywordsMap.has(e.All)||this.dbmsExecutionKeywordsMap.set(e.All,new Set(this.allExecutionDefaultKeywordList)),this.dbmsExecutionKeywordsMap.has(e.Adaptive)||this.dbmsExecutionKeywordsMap.set(e.Adaptive,new Set(this.adaptiveExecutionDefaultKeywordList))}setDefaultCustomiseKeywords(){Object.keys(e).forEach((s=>{const t=Number(s);isNaN(t)||(t!==e.Adaptive&&this.dbmsExplainCustomiseKeywordsMap.set(t,this.customizeKeywordsDefaultValue),this.dbmsExecutionCustomiseKeywordsMap.set(t,this.customizeKeywordsDefaultValue))}))}},function(s){s[s.ExplainPlan=0]="ExplainPlan",s[s.DBMSExplainPlan=1]="DBMSExplainPlan",s[s.ExecutionPlan=2]="ExecutionPlan",s[s.DBMSExecutionPlan=3]="DBMSExecutionPlan"}(t=s.ExplainSettingType||(s.ExplainSettingType={})),function(s){s[s.ALIAS=0]="ALIAS",s[s.BYTES=1]="BYTES",s[s.COST=2]="COST",s[s.NOTE=3]="NOTE",s[s.PARALLEL=4]="PARALLEL",s[s.PARTITION=5]="PARTITION",s[s.PREDICATE=6]="PREDICATE",s[s.PROJECTION=7]="PROJECTION",s[s.REMOTE=8]="REMOTE",s[s.ROWS=9]="ROWS",s[s.IOSTATS=10]="IOSTATS",s[s.MEMSTATS=11]="MEMSTATS",s[s.ALLSTATS=12]="ALLSTATS",s[s.LAST=13]="LAST"}(i=s.DbmsXplanOption||(s.DbmsXplanOption={}));s.DbmsExplainPlanConfig=class{constructor(s,e,t){this.format=s,this.keywords=[],e.forEach((s=>this.keywords.push(s))),this.customiseKeywords=t}};s.ExplainAndExecutionPlanConfig=class{}}));