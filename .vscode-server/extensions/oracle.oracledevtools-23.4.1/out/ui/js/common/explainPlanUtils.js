define(["require","exports","ojs/ojarraytreedataprovider","./dataAccessService","./scriptExecutionModels","./localizedConstants","./messageService","ojs/ojpopup","ojs/ojmenu","ojs/ojdialog"],(function(require,e,t,a,n,i,l){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.planManager=e.ExplainPlanConstant=e.explainPlanDataList=e.explainPlanData=e.gridColumnInfo=void 0;class s{}e.gridColumnInfo=s;class o{constructor(){this.children=new Array}}e.explainPlanData=o;class r{constructor(e){this.explainPlanList=e}getParentNode(e){let t=null;for(let a=0;a<this.explainPlanList.length;a++){const n=this.explainPlanList[a];if(n.ID==e){t=n;break}}return t}populateChildParentRelationShip(){for(let e=0;e<this.explainPlanList.length;e++){const t=this.explainPlanList[e];if(t.PARENT_ID){let e=this.getParentNode(t.PARENT_ID);e&&e.children.push(t)}}}populateChildParentRelationShipForJSON(){for(let e=0;e<this.explainPlanList.length;e++){const t=this.explainPlanList[e];if(t.PARENT_ID){let e=this.getParentNode(t.PARENT_ID);e&&e.children.push(t)}}}}e.explainPlanDataList=r;class d{}e.ExplainPlanConstant=d,d.OPERATION="OPERATION",d.OBJECT_NAME="OBJECT_NAME",d.OPTIONS="OPTIONS",d.CARDINALITY="CARDINALITY",d.COST="COST",d.BYTES="BYTES",d.CPU_COST="CPU_COST",d.IO_COST="IO_COST",d.TIME="TIME",d.ACCESS_PREDICATES="ACCESS_PREDICATES",d.FILTER_PREDICATES="FILTER_PREDICATES",d.PARENT_ID="PARENT_ID",d.ID="ID",d.OBJECT_OWNER="OBJECT_OWNER",d.DEPTH="DEPTH",d.DISTRIBUTION="DISTRIBUTION",d.OBJECT_ALIAS="OBJECT_ALIAS",d.OBJECT_INSTANCE="OBJECT_INSTANCE",d.OBJECT_NODE="OBJECT_NODE",d.OBJECT_TYPE="OBJECT_TYPE",d.OPTIMIZER="OPTIMIZER",d.OTHER="OTHER",d.OTHER_TAG="OTHER_TAG",d.OTHER_XML="OTHER_XML",d.POSITION="POSITION",d.PARTITION_START="PARTITION_START",d.PARTITION_STOP="PARTITION_STOP",d.PARTITION_ID="PARTITION_ID",d.PROJECTION="PROJECTION",d.QBLOCK_NAME="QBLOCK_NAME",d.SEARCH_COLUMNS="SEARCH_COLUMNS",d.TEMP_SPACE="TEMP_SPACE",d.ROWNUM="ROWNUM",d.selected="selected";e.planManager=class{constructor(e,i){this.planMode=n.ExplainPlanMode.ExplainPlanGrid,this.addCellHighlight=e=>{let t=e.currentTarget.firstElementChild.value,a=t.substr(0,t.indexOf(":"));const n=document.getElementById(a);n&&n.classList.add("cell-focus")},this.removeCellHighlight=()=>{$(".cell-focus").removeClass("cell-focus")},this.checkCellContext=e=>{const t=e.detail.originalEvent.target,a=e.currentTarget,n=a.parentElement,i=n.getContextByNode(t);if(null!=i)if("oj-table-header"===i.subId)e.preventDefault();else if("oj-table-cell"===i.subId){let t=n.getDataForVisibleRow(i.rowIndex).data[n.columns[i.columnIndex].id],l=n.id+"_"+i.rowIndex+"_"+i.columnIndex;""==t||null===t?e.preventDefault():a.firstElementChild.value=l+":"+t}},this.copyCellData=e=>{const t=e.currentTarget.firstElementChild;let a=t.value,n=a.substr(a.indexOf(":")+1);this.copyToClipBoard(n);const i=t.firstChild;i&&i.setAttribute("href","#/")},this.noData=()=>!(this.gridData&&this.gridData.rows&&this.gridData.rows()&&this.gridData.rows().length>0),this.startAnimationListener=e=>{let t=e.detail;"open"!==t.action&&"close"!==t.action||(e.preventDefault(),t.endCallback())},this.preventDefault=e=>{e.preventDefault()},this.preventTableAnimation=e=>{let t=e.detail;e.preventDefault(),t.endCallback()},this.DisplaySQL=(e,t,a)=>{let n=document.getElementById(e),i=document.getElementById(t);if(n&&(a&&document.getElementById("showSQLDialogID").open(),(!n.children||n.children&&0==n.children.length)&&i.children&&i.children.length>0)){let e=i.children[0];n.appendChild(e)}},this.sendSaveRequest=e=>{let t=this.planMode==n.ExplainPlanMode.DBMSExecutionPlanText||this.planMode==n.ExplainPlanMode.DBMSExplainPlanText?this.dbmsExplainPlanData:this.JSONData;const i=new n.MessageBase;i.type=n.MessageName.saveExplainPlanRequest;const l=new n.SaveExplainPlanRequestParams;l.ownerUri=a.DataAccessService.instance.URI,l.executionId=this.gridData.executionId,l.queryId=this.gridData.queryId,l.queryResultId=this.gridData.queryResultId,l.fileFormat=e,l.saveDataToFile=!0,l.data=t,i.data=l,a.DataAccessService.instance.send(i)},this.dbmsExplainPlanData="",this.JSONData="",this.getTextData=()=>(this.dbmsExplainPlanData="",this.gridData.rows().forEach((e=>{Object.entries(e).forEach((([e,t],a)=>{e.startsWith("PLAN_TABLE_OUTPUT")&&(t="\r\n"+t,this.dbmsExplainPlanData=this.dbmsExplainPlanData+t)}))})),this.dbmsExplainPlanData),this.getGridData=()=>{let e=new Array;this.gridData.rows().forEach((t=>{let a=new o,n=!0;Object.entries(t).forEach((([e,t],i)=>{let l=e.indexOf(":"),s=l>=0?e.substring(0,l):e;s=s.toUpperCase(),s!=d.ROWNUM&&s!=d.selected&&(s==d.OBJECT_OWNER?(a.OBJECT_OWNER=t,n&&t&&a.OBJECT_NAME&&(a.OBJECT_NAME=`${t}.${a.OBJECT_NAME}`,n=!1)):s==d.OBJECT_NAME?(a.OBJECT_NAME=t,n&&t&&a.OBJECT_OWNER&&(a.OBJECT_NAME=`${a.OBJECT_OWNER}.${t}`,n=!1)):a[s]=t)})),a.PARENT_ID?e.push(a):e.unshift(a)}));let n=new r(e);a.DataAccessService.instance.logInfo("populating ChildParentRelationShip for explain plan"),n.populateChildParentRelationShip(),this.rootNodeList=new r([]),this.rootNodeList.explainPlanList.push(n.explainPlanList[0]);let i=JSON.stringify(this.rootNodeList.explainPlanList),l=JSON.parse(i);return a.DataAccessService.instance.logInfo("binding json data to array tree provider"),new t(l,{keyAttributes:"ID"})},this.saveOrCopyData=(e,t)=>{try{if(this.planMode==n.ExplainPlanMode.DBMSExecutionPlanText||this.planMode==n.ExplainPlanMode.DBMSExplainPlanText)e&&this.sendSaveRequest(t);else{if(!this.JSONData){let e,t=new r(this.rootNodeList.explainPlanList);if(t.explainPlanList[0]){e=this.gridData.columnsToDisplayinGrid.indexOf(d.PARENT_ID)<0?JSON.stringify(t.explainPlanList[0],((e,t)=>e===d.PARENT_ID?void 0:t),2):JSON.stringify(t.explainPlanList[0]);const a=JSON.parse(e,(function(e,t){if("children"!==e)return t;this.detail=t}));this.JSONData=JSON.stringify(a,Object.keys(a).sort(((e,t)=>"children"===t?-1:"children"===e?1:0)),2)}}this.JSONData&&(e?this.sendSaveRequest(t):this.copyToClipBoard(this.JSONData))}}catch(e){a.DataAccessService.instance.logError(e)}},this.gridData=e,this.displayMode=i}isTextMode(){return this.planMode==n.ExplainPlanMode.DBMSExecutionPlanText||this.planMode==n.ExplainPlanMode.DBMSExplainPlanText}getTableID(){let e;switch(this.planMode){case n.ExplainPlanMode.ExecutionPlanGrid:case n.ExplainPlanMode.DBMSExecutionPlanText:e="executionPlanTable";break;case n.ExplainPlanMode.ExplainPlanGrid:case n.ExplainPlanMode.DBMSExplainPlanText:e="explainPlanTable"}return e}populatePlanMode(){let e=n.ExplainPlanMode.None;switch(this.displayMode){case n.UIDisplayMode.executeExplainPlanSQL.toString():case n.UIDisplayMode.executeExplainPlanSQL:this.planMode=n.ExplainPlanMode.ExplainPlanGrid;break;case n.UIDisplayMode.executeDBMSExplainPlanSQL.toString():case n.UIDisplayMode.executeDBMSExplainPlanSQL:this.planMode=n.ExplainPlanMode.DBMSExplainPlanText;break;case n.UIDisplayMode.ExecutionPlanGrid.toString():case n.UIDisplayMode.ExecutionPlanGrid:this.planMode=n.ExplainPlanMode.ExecutionPlanGrid;break;case n.UIDisplayMode.DBMSExecutionPlanText.toString():case n.UIDisplayMode.DBMSExecutionPlanText:this.planMode=n.ExplainPlanMode.DBMSExecutionPlanText}return e}copyToClipBoard(e){const t=document.createElement("textarea");t.value=e,document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t),l.MessagesService.getinstance().ShowMessage(i.LocalizedConstants.Instance.copiedToClipBoard)}tooltipOpen(e,t,a){const n=document.getElementById(`tooltip_${e}`);n&&(n.setAttribute("data-hover","true"),n.position.of={x:t.pageX,y:t.pageY},setTimeout((()=>{"true"==n.getAttribute("data-hover")&&n.open(`#cellContainer_${e}`)}),400))}tooltipClose(e){const t=document.getElementById(`tooltip_${e}`);t&&(t.setAttribute("data-hover","false"),t.isOpen&&t.close())}updatePosition(e,t){const a=document.getElementById(`tooltip_${e}`);a&&(a.position.of={x:t.pageX,y:t.pageY})}getColumInfo(e){let t=new s;switch(t.headerText=e,t.id=e,e){case d.OPERATION:t.width="20%";break;case d.PARTITION_START:case d.PARTITION_STOP:t.width="130px";break;case d.PARTITION_ID:t.width="120px";break;default:t.maxWidth="10%"}return t}}}));