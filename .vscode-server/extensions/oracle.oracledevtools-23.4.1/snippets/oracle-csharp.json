{
  "AdiCodegen1": {
  "prefix": "codegen",
  "body": [
    "/* Copyright (c) 2024, Oracle and/or its affiliates. */",
    "/*",
    " *  NAME",
    " *    OracleCodeGeneration.cs",
    " *",
    " *  DESCRIPTION",
    " *    To create a .Net application based on this generated code, follow these steps:",
    " *      - From a command line, create a new directory for your application ",
    " *        and change into that directory.",
    " *      - Use the dotnet executable to create a new project:",
    " *          dotnet new console",
    " *      - Add ODP.NET Core to the project:",
    " *          dotnet add package Oracle.ManagedDataAccess.Core",
    " *      - Open Program.cs in a text editor and replace the contents of the ",
    " *        Program.cs file with this code, replace the connection password tags:",
    " *        <Password> and <ProxyPassword> with the actual passwords.",
    " *      - Save changes to Program.cs, build and run the resulting application:",
    " *          dotnet run",
    " *",
    " *    Alternatively, you could create a C# project and add this code to your project.",
    " *",
    " */",
    "",
    "using System;",
    "using Oracle.ManagedDataAccess.Client;",
    "class ODPDataReader",
    "{",
    "  static void Main(string[] args)",
    "  {",
    "    const string connString = \"${CLIPBOARD/(?:.*connection_string{([^\\}]*)\\})?.*/${1}/gms}\";",
    "    const string currentSchema = \"${CLIPBOARD/(?:.*current_schema{([^\\}]*)\\})?.*/${1}/gms}\";",
    "    using (OracleConnection con = new OracleConnection(connString))",
    "    {",
    "      try",
    "      {",
    "        con.Open();",
    "        string cmdText = @\"${CLIPBOARD/(?:.*command_text{([^\\}]*)\\})?.*/${1}/gms}\";",
    "        if(!String.IsNullOrEmpty(currentSchema))",
    "        {",
    "          string alterCmdText = $\"ALTER SESSION SET CURRENT_SCHEMA = {currentSchema}\";",
    "          using (OracleCommand cmd = new OracleCommand(alterCmdText, con))",
    "          {",
    "            cmd.ExecuteNonQuery();",
    "          }",
    "        }",
    "        using (OracleCommand cmd = new OracleCommand(cmdText, con))",
    "        {",
    "          using (OracleDataReader reader = cmd.ExecuteReader())",
    "          {",
    "            //Print column names",
    "            for (int i = 0; i < reader.FieldCount; i++)",
    "                Console.Write(((i == 0) ? \"\" : \", \") + reader.GetName(i));  ",
    "            //Print column values",
    "            while (reader.Read())",
    "            {",
    "              Console.WriteLine();",
    "              for (int i = 0; i < reader.FieldCount; i++)",
    "              {",
    "                if (i != 0)",
    "                  Console.Write(\", \");",
    "                if (!reader.IsDBNull(i))",
    "                  Console.Write(reader.GetValue(i));",
    "                else",
    "                  Console.Write(\"NULL\");",
    "              }",
    "            }",
    "          }",
    "        }",
    "      }",
    "      catch (Exception ex)",
    "      {",
    "        Console.WriteLine(ex);",
    "      }",
    "    }",
    "  }",
    "}"
  ],
  "description": "AdiCodegen1"
  },
  "AdiCodegen1_1": {
  "prefix": "codegen",
  "body": [
    "/* Copyright (c) 2024, Oracle and/or its affiliates. */",
    "/*",
    " *  NAME",
    " *    OracleCodeGeneration.cs",
    " *",
    " *  DESCRIPTION",
    " *    To create a .Net application based on this generated code, follow these steps:",
    " *      - From a command line, create a new directory for your application ",
    " *        and change into that directory.",
    " *      - Use the dotnet executable to create a new project:",
    " *          dotnet new console",
    " *      - Add ODP.NET Core to the project:",
    " *          dotnet add package Oracle.ManagedDataAccess.Core",
    " *      - Open Program.cs in a text editor and replace the contents of the ",
    " *        Program.cs file with this code, replace the connection password tags:",
    " *        <Password> and <ProxyPassword> with the actual passwords.",
    " *      - Save changes to Program.cs, build and run the resulting application:",
    " *          dotnet run",
    " *",
    " *    Alternatively, you could create a C# project and add this code to your project.",
    " *",
    " */",
    "",
    "using System;",
    "using Oracle.ManagedDataAccess.Client;",
    "class ODPDataReader",
    "{",
    "  static void Main(string[] args)",
    "  {",
    "    const string connString = \"${CLIPBOARD/(?:.*connection_string{([^\\}]*)\\})?.*/${1}/gms}\";",
    "",
    "    using (OracleConnection con = new OracleConnection(connString))",
    "    {",
    "      try",
    "      {",
    "        con.Open();",
    "        string cmdText = @\"${CLIPBOARD/(?:.*command_text{([^\\}]*)\\})?.*/${1}/gms}\";",
    "        using (OracleCommand cmd = new OracleCommand(cmdText, con))",
    "        {",
    "          using (OracleDataReader reader = cmd.ExecuteReader())",
    "          {",
    "            //Print column names",
    "            for (int i = 0; i < reader.FieldCount; i++)",
    "                Console.Write(((i == 0) ? \"\" : \", \") + reader.GetName(i));  ",
    "            //Print column values",
    "            while (reader.Read())",
    "            {",
    "              Console.WriteLine();",
    "              for (int i = 0; i < reader.FieldCount; i++)",
    "              {",
    "                if (i != 0)",
    "                  Console.Write(\", \");",
    "                if (!reader.IsDBNull(i))",
    "                  Console.Write(reader.GetValue(i));",
    "                else",
    "                  Console.Write(\"NULL\");",
    "              }",
    "            }",
    "          }",
    "        }",
    "      }",
    "      catch (Exception ex)",
    "      {",
    "        Console.WriteLine(ex);",
    "      }",
    "    }",
    "  }",
    "}"
  ],
  "description": "AdiCodegen1_1"
  }
}