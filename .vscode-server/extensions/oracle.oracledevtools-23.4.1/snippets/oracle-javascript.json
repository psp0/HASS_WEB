{
  "AdiCodegen1": {
  "prefix": "codegen",
  "body": [
    "/* Copyright (c) 2024, Oracle and/or its affiliates. */",
    "",
    "/******************************************************************************",
    " * NAME",
    " * app.js",
    " *",
    " * DESCRIPTION",
    " * To create a nodeJS application based on this generated code, follow:",
    " * From commandline interface, create a new directory for your application",
    " * and change into that directory.",
    " * Install node-oracledb by running `npm i oracledb`",
    " * Open app.js in text-editor and replace the contents of app.js file with",
    " * this code.",
    " * Save the changes to app.js, replace the connection password tags:",
    " * <Password>, <ProxyPassword> and <WalletPassword> with the actual passwords,",
    " * and run the resulting application with:",
    " * node app.js",
    " *",
    " * In case you use a Cloud DB instance and you download the credentials files",
    " * make sure you use a password for the wallet file, and save it, as the driver",
    " * will need it at runtime.",
    " *",
    " * To enable thick mode of node-oracledb, add the following line after the",
    " * node-oracledb import:",
    " * `oracledb.initOracleClient({libDir: \"path/to/instantclient\"});`",
    " *",
    " * For more info - https://node-oracledb.readthedocs.io/en/latest/",
    "******************************************************************************/",
    "",
    "// imports required to run the application.",
    "const oracledb = require('oracledb');",
    "",
    "// configuration to connect to the database.",
    "${CLIPBOARD/(?:.*connectionConfig_string!([^!]*)!)?.*/${1}/gms}",
    "",
    "// SQL statement to be executed.",
    "const sql = `${CLIPBOARD/(?:.*command_text{([^\\}]*)\\})?.*/${1}/gms}`;",
    "",
    "async function run() {",
    "  // obtain a standalone connection.",
    "  const connection = await oracledb.getConnection(config);",
    "",
    "  // SQL execution",
    "  const result = await connection.execute(sql);",
    "  console.log(result.rows);",
    "}",
    "",
    "run();",
    ""
  ],
  "description": "AdiCodegen1"
  },
  "AdiCodegen1_1": {
  "prefix": "codegen",
  "body": [
    "/* Copyright (c) 2024, Oracle and/or its affiliates. */",
    "",
    "/******************************************************************************",
    " * NAME",
    " * app.js",
    " *",
    " * DESCRIPTION",
    " * To create a nodeJS application based on this generated code, follow:",
    " * From commandline interface, create a new directory for your application",
    " * and change into that directory.",
    " * Install node-oracledb by running `npm i oracledb`",
    " * Open app.js in text-editor and replace the contents of app.js file with",
    " * this code.",
    " * Save the changes to app.js, replace the connection password tags:",
    " * <Password>, <ProxyPassword> and <WalletPassword> with the actual passwords,",
    " * and run the resulting application with:",
    " * node app.js",
    " *",
    " * In case you use a Cloud DB instance and you download the credentials files",
    " * make sure you use a password for the wallet file, and save it, as the driver",
    " * will need it at runtime.",
    " *",
    " * To enable thick mode of node-oracledb, add the following line after the",
    " * node-oracledb import:",
    " * `oracledb.initOracleClient({libDir: \"path/to/instantclient\"});`",
    " *",
    " * For more info - https://node-oracledb.readthedocs.io/en/latest/",
    "******************************************************************************/",
    "",
    "// imports required to run the application.",
    "const oracledb = require('oracledb');",
    "",
    "// configuration to connect to the database.",
    "${CLIPBOARD/(?:.*connectionConfig_string!([^!]*)!)?.*/${1}/gms}",
    "",
    "// SQL statement to be executed.",
    "const sql = `${CLIPBOARD/(?:.*command_text{([^\\}]*)\\})?.*/${1}/gms}`;",
    "",
    "async function run() {",
    "  // obtain a standalone connection.",
    "  const connection = await oracledb.getConnection(config);",
    "",
    "  // SQL execution",
    "  const result = await connection.execute(sql);",
    "  console.log(result.rows);",
    "}",
    "",
    "run();",
    ""
  ],
  "description": "AdiCodegen1_1"
  }
}
