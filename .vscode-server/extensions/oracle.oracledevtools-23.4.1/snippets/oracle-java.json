{
  "AdiCodegen1": {
  "prefix": "codegen",
  "body": [
    "/* Copyright (c) 2024, Oracle and/or its affiliates. */",
    "import java.sql.Connection;",
    "import java.sql.DriverManager;",
    "import java.sql.PreparedStatement;",
    "import java.sql.ResultSet;",
    "import java.sql.ResultSetMetaData;",
    "import java.sql.SQLException;",
    "",
    "/**",
    "* This is generated code. The main method is implemented to connect to Oracle",
    "* Database using the Oracle JDBC Driver. The method will execute a query and",
    "* print each row with its column names. As the generated code is using multiline",
    "* strings, you will need JDK v17 or higher and it should be first in the path in the",
    "* terminal where you compile and run the code.",
    "* To run this code, save it into a file name \"OracleJdbcDataReader.java\",",
    "* replace the connection password tags: <Password> and <ProxyPassword> with the",
    "* actual passwords, and then compile and run it with commands below.",
    "*",
    "* Note that the java command has a -cp option which includes the Oracle JDBC",
    "* jar in the classpath. This jar file which can be obtained using a command",
    "* like wget:",
    "* wget -P . https://repo1.maven.org/maven2/com/oracle/database/jdbc/ojdbc11/23.4.0.24.05/ojdbc11-23.4.0.24.05.jar",
    "* For the security packages use:",
    "* wget -P . https://repo1.maven.org/maven2/com/oracle/database/security/oraclepki/23.4.0.24.05/oraclepki-23.4.0.24.05.jar",
    "* The jar file can also be obtained with build tools like Maven or Gradle, or",
    "* by downloading from https://repo1.maven.org/maven2/com/oracle/database/jdbc/ojdbc11/23.4.0.24.05",
    "* and https://repo1.maven.org/maven2/com/oracle/database/security/oraclepki/23.4.0.24.05 .",
    "*   javac OracleJdbcDataReader.java",
    "*   java -cp \"ojdbc11-23.4.0.24.05.jar;.\" OracleJdbcDataReader",
    "*      on Windows, or:",
    "*   java -cp \"ojdbc11-23.4.0.24.05.jar:.\" OracleJdbcDataReader",
    "*      on Linux or Mac OS",
    "* For cases where security packages are needed, like when using wallets,",
    "* use these commands:",
    "*   javac OracleJdbcDataReader.java",
    "*   java -cp \"ojdbc11-23.4.0.24.05.jar;oraclepki-23.4.0.24.05.jar;.\" OracleJdbcDataReader",
    "*      on Windows, or:",
    "*   java -cp \"ojdbc11-23.4.0.24.05.jar:oraclepki-23.4.0.24.05.jar:.\" OracleJdbcDataReader",
    "*      on Linux or Mac OS",
    "*/",
    "public class OracleJdbcDataReader {",
    "",
    "  public static void main(String[] args) {",
    "    String jdbcUrl = \"${CLIPBOARD/(?:.*connection_string{([^\\}]*)\\})?.*/${1}/gms}\";",
    "    String selectSql = \"\"\"${CLIPBOARD/(?:.*command_text{([^\\}]*)\\})?.*/${1}/gms}\"\"\";",
    "",
    "    try (",
    "      Connection connection = DriverManager.getConnection(jdbcUrl);",
    "      PreparedStatement preparedStatement = connection.prepareStatement(selectSql);",
    "      ResultSet resultSet = preparedStatement.executeQuery();)",
    "    {",
    "      ResultSetMetaData resultSetMetaData = resultSet.getMetaData();",
    "",
    "      while (resultSet.next()) {",
    "",
    "        // Print the column names",
    "        System.out.print(resultSetMetaData.getColumnLabel(1));",
    "        for (int i = 1; i < resultSetMetaData.getColumnCount(); i++) {",
    "          System.out.print(\", \" + resultSetMetaData.getColumnLabel(i + 1));",
    "        }",
    "       System.out.println();",
    "",
    "        // Print the column values",
    "        System.out.print(resultSet.getString(1));",
    "        for (int i = 1; i < resultSetMetaData.getColumnCount(); i++) {",
    "          System.out.print(\", \" + resultSet.getString(i + 1));",
    "        }",
    "        System.out.println();",
    "      }",
    "    }",
    "    catch (SQLException sqlException) {",
    "      sqlException.printStackTrace();",
    "    }",
    "  }",
    "",
    "}",
    "",
    ""
  ],
  "description": "AdiCodegen1"
  },
  "AdiCodegen1_1": {
  "prefix": "codegen",
  "body": [
    "/* Copyright (c) 2024, Oracle and/or its affiliates. */",
    "import java.sql.Connection;",
    "import java.sql.DriverManager;",
    "import java.sql.PreparedStatement;",
    "import java.sql.ResultSet;",
    "import java.sql.ResultSetMetaData;",
    "import java.sql.SQLException;",
    "",
    "/**",
    "* This is generated code. The main method is implemented to connect to Oracle",
    "* Database using the Oracle JDBC Driver. The method will execute a query and",
    "* print each row with its column names. As the generated code is using multiline",
    "* strings, you will need JDK v17 or higher and it should be first in the path in the",
    "* terminal where you compile and run the code.",
    "* To run this code, save it into a file name \"OracleJdbcDataReader.java\",",
    "* replace the connection password tags: <Password> and <ProxyPassword> with the",
    "* actual passwords, and then compile and run it with commands below.",
    "*",
    "* Note that the java command has a -cp option which includes the Oracle JDBC",
    "* jar in the classpath. This jar file which can be obtained using a command",
    "* like wget:",
    "* wget -P . https://repo1.maven.org/maven2/com/oracle/database/jdbc/ojdbc11/23.4.0.24.05/ojdbc11-23.4.0.24.05.jar",
    "* For the security packages use:",
    "* wget -P . https://repo1.maven.org/maven2/com/oracle/database/security/oraclepki/23.4.0.24.05/oraclepki-23.4.0.24.05.jar",
    "* The jar file can also be obtained with build tools like Maven or Gradle, or",
    "* by downloading from https://repo1.maven.org/maven2/com/oracle/database/jdbc/ojdbc11/23.4.0.24.05",
    "* and https://repo1.maven.org/maven2/com/oracle/database/security/oraclepki/23.4.0.24.05 .",
    "*   javac OracleJdbcDataReader.java",
    "*   java -cp \"ojdbc11-23.4.0.24.05.jar;.\" OracleJdbcDataReader",
    "*      on Windows, or:",
    "*   java -cp \"ojdbc11-23.4.0.24.05.jar:.\" OracleJdbcDataReader",
    "*      on Linux or Mac OS",
    "* For cases where security packages are needed, like when using wallets,",
    "* use these commands:",
    "*   javac OracleJdbcDataReader.java",
    "*   java -cp \"ojdbc11-23.4.0.24.05.jar;oraclepki-23.4.0.24.05.jar;.\" OracleJdbcDataReader",
    "*      on Windows, or:",
    "*   java -cp \"ojdbc11-23.4.0.24.05.jar:oraclepki-23.4.0.24.05.jar:.\" OracleJdbcDataReader",
    "*      on Linux or Mac OS",
    "*/",
    "public class OracleJdbcDataReader {",
    "",
    "  public static void main(String[] args) {",
    "    String jdbcUrl = \"${CLIPBOARD/(?:.*connection_string{([^\\}]*)\\})?.*/${1}/gms}\";",
    "    String selectSql = \"\"\"${CLIPBOARD/(?:.*command_text{([^\\}]*)\\})?.*/${1}/gms}\"\"\";",
    "",
    "    try (",
    "      Connection connection = DriverManager.getConnection(jdbcUrl);",
    "      PreparedStatement preparedStatement = connection.prepareStatement(selectSql);",
    "      ResultSet resultSet = preparedStatement.executeQuery();)",
    "    {",
    "      ResultSetMetaData resultSetMetaData = resultSet.getMetaData();",
    "",
    "      while (resultSet.next()) {",
    "",
    "        // Print the column names",
    "        System.out.print(resultSetMetaData.getColumnLabel(1));",
    "        for (int i = 1; i < resultSetMetaData.getColumnCount(); i++) {",
    "          System.out.print(\", \" + resultSetMetaData.getColumnLabel(i + 1));",
    "        }",
    "       System.out.println();",
    "",
    "        // Print the column values",
    "        System.out.print(resultSet.getString(1));",
    "        for (int i = 1; i < resultSetMetaData.getColumnCount(); i++) {",
    "          System.out.print(\", \" + resultSet.getString(i + 1));",
    "        }",
    "        System.out.println();",
    "      }",
    "    }",
    "    catch (SQLException sqlException) {",
    "      sqlException.printStackTrace();",
    "    }",
    "  }",
    "",
    "}",
    "",
    ""
  ],
  "description": "AdiCodegen1_1"
  }
}
